// <auto-generated />

using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace MSCPS.FieldSericeMigration.Plugins.ProxyClasses
{
    [EntityLogicalNameAttribute("invoicedetail")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    [DataContract(Name = "Entity", Namespace = "http://schemas.microsoft.com/xrm/2011/Contracts")]
    public partial class invoicedetail : BaseProxyClass
    {
        public new const string LogicalName = "invoicedetail";
        public const int ObjectTypeCode = 1091;
        public const string PrimaryIdAttribute = "invoicedetailid";
        public const string PrimaryNameAttribute = "invoicedetailname";
        
        static invoicedetail()
        {
            BaseProxyClass.RegisterProxyType(typeof(invoicedetail), "invoicedetail");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public invoicedetail() : base(new Entity("invoicedetail")) { }
        public invoicedetail(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<invoicedetail>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: utc_sourceexistingproductname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("utc_sourceexistingproductname")]
public string utc_sourceexistingproductname
{
	get { return this.GetPropertyValue<string>("utc_sourceexistingproductname"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string transactioncurrencyidname
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: msdyn_agreementinvoiceproductname</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_agreementinvoiceproductname")]
public string msdyn_agreementinvoiceproductname
{
	get { return this.GetPropertyValue<string>("msdyn_agreementinvoiceproductname"); }
}
///<summary>
///<para>Logical Name: msdyn_workorderidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workorderidname")]
public string msdyn_workorderidname
{
	get { return this.GetPropertyValue<string>("msdyn_workorderidname"); }
}
///<summary>
///<para>Logical Name: utc_agreementinvoiceproductbillingname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("utc_agreementinvoiceproductbillingname")]
public string utc_agreementinvoiceproductbillingname
{
	get { return this.GetPropertyValue<string>("utc_agreementinvoiceproductbillingname"); }
}
///<summary>
///<para>Logical Name: msdyn_orderinvoicingproductname</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_orderinvoicingproductname")]
public string msdyn_orderinvoicingproductname
{
	get { return this.GetPropertyValue<string>("msdyn_orderinvoicingproductname"); }
}
///<summary>
///<para>Logical Name: utc_customerequipmentname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("utc_customerequipmentname")]
public string utc_customerequipmentname
{
	get { return this.GetPropertyValue<string>("utc_customerequipmentname"); }
}
///<summary>
///<para>Logical Name: uomidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("uomidname")]
public string uomidname
{
	get { return this.GetPropertyValue<string>("uomidname"); }
}
///<summary>
///<para>Logical Name: salesorderdetailidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("salesorderdetailidname")]
public string salesorderdetailidname
{
	get { return this.GetPropertyValue<string>("salesorderdetailidname"); }
}
///<summary>
///<para>Logical Name: productidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("productidname")]
public string productidname
{
	get { return this.GetPropertyValue<string>("productidname"); }
}
///<summary>
///<para>Logical Name: salesrepidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("salesrepidyominame")]
public string salesrepidyominame
{
	get { return this.GetPropertyValue<string>("salesrepidyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_workorderproductidname</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workorderproductidname")]
public string msdyn_workorderproductidname
{
	get { return this.GetPropertyValue<string>("msdyn_workorderproductidname"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string owneridyominame
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: invoiceidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("invoiceidname")]
public string invoiceidname
{
	get { return this.GetPropertyValue<string>("invoiceidname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string createdonbehalfbyname
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string owneridname
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string modifiedonbehalfbyname
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string createdonbehalfbyyominame
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_agreementname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_agreementname")]
public string msdyn_agreementname
{
	get { return this.GetPropertyValue<string>("msdyn_agreementname"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string createdbyname
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string modifiedbyyominame
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string modifiedonbehalfbyyominame
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: utc_rolloveragreementinvoiceproductbillingname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("utc_rolloveragreementinvoiceproductbillingname")]
public string utc_rolloveragreementinvoiceproductbillingname
{
	get { return this.GetPropertyValue<string>("utc_rolloveragreementinvoiceproductbillingname"); }
}
///<summary>
///<para>Logical Name: salesrepidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("salesrepidname")]
public string salesrepidname
{
	get { return this.GetPropertyValue<string>("salesrepidname"); }
}
///<summary>
///<para>Logical Name: msdyn_workorderserviceidname</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workorderserviceidname")]
public string msdyn_workorderserviceidname
{
	get { return this.GetPropertyValue<string>("msdyn_workorderserviceidname"); }
}
///<summary>
///<para>Logical Name: msdyn_currencyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_currencyname")]
public string msdyn_currencyname
{
	get { return this.GetPropertyValue<string>("msdyn_currencyname"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string modifiedbyname
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string createdbyyominame
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: utc_iscreatedfromagreementinvoicedate</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("utc_iscreatedfromagreementinvoicedate")]
public bool? utc_iscreatedfromagreementinvoicedate
{
	get { return this.GetPropertyValue<bool?>("utc_iscreatedfromagreementinvoicedate"); }
	set { this.SetPropertyValue<bool?>("utc_iscreatedfromagreementinvoicedate", value, "utc_iscreatedfromagreementinvoicedate"); }
}
///<summary>
///<para>Logical Name: msdyn_agreement</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_agreement")]
public EntityReference msdyn_agreement
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_agreement"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_agreement", value, "msdyn_agreement"); }
}
///<summary>
///<para>Logical Name: msdyn_agreementinvoiceproduct</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_agreementinvoiceproduct")]
public EntityReference msdyn_agreementinvoiceproduct
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_agreementinvoiceproduct"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_agreementinvoiceproduct", value, "msdyn_agreementinvoiceproduct"); }
}
///<summary>
///<para>Logical Name: utc_agreementinvoiceproductbilling</para>
///</summary>
[AttributeLogicalNameAttribute("utc_agreementinvoiceproductbilling")]
public EntityReference utc_agreementinvoiceproductbilling
{
	get { return this.GetPropertyValue<EntityReference>("utc_agreementinvoiceproductbilling"); }
	set { this.SetPropertyValue<EntityReference>("utc_agreementinvoiceproductbilling", value, "utc_agreementinvoiceproductbilling"); }
}
///<summary>
///<para>Logical Name: baseamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? baseamount
{
	get
	{
		if (baseamountMoney != null) { return baseamountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.baseamountMoney = new Money(value.Value); }
		else this.baseamountMoney = null;
	}
}
///<summary>
///<para>Logical Name: baseamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("baseamount")]
public Money baseamountMoney
{
	get { return this.GetPropertyValue<Money>("baseamount"); }
	set { this.SetPropertyValue("baseamount", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "baseamountMoney"); }
}
///<summary>
///<para>Logical Name: baseamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? baseamount_base
{
	get
	{
		if (baseamount_baseMoney != null) { return baseamount_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: baseamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("baseamount_base")]
public Money baseamount_baseMoney
{
	get { return this.GetPropertyValue<Money>("baseamount_base"); }
}
///<summary>
///<para>Logical Name: productassociationid</para>
///</summary>
[AttributeLogicalNameAttribute("productassociationid")]
public Guid productassociationid
{
	get { return this.GetPropertyValue<Guid>("productassociationid"); }
	set { this.SetPropertyValue<Guid>("productassociationid", value, "productassociationid"); }
}
///<summary>
///<para>Logical Name: iscopied</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("iscopied")]
public bool? iscopied
{
	get { return this.GetPropertyValue<bool?>("iscopied"); }
	set { this.SetPropertyValue<bool?>("iscopied", value, "iscopied"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference createdby
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference createdonbehalfby
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? createdon
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference transactioncurrencyid
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "transactioncurrencyid"); }
}
///<summary>
///<para>Logical Name: msdyn_currency</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_currency")]
public EntityReference msdyn_currency
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_currency"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_currency", value, "msdyn_currency"); }
}
///<summary>
///<para>Logical Name: utc_customerequipment</para>
///</summary>
[AttributeLogicalNameAttribute("utc_customerequipment")]
public EntityReference utc_customerequipment
{
	get { return this.GetPropertyValue<EntityReference>("utc_customerequipment"); }
	set { this.SetPropertyValue<EntityReference>("utc_customerequipment", value, "utc_customerequipment"); }
}
///<summary>
///<para>Logical Name: actualdeliveryon</para>
///</summary>
[AttributeLogicalNameAttribute("actualdeliveryon")]
public DateTime? actualdeliveryon
{
	get { return this.GetPropertyValue<DateTime?>("actualdeliveryon"); }
	set { this.SetPropertyValue<DateTime?>("actualdeliveryon", value, "actualdeliveryon"); }
}
///<summary>
///<para>Logical Name: description</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("description")]
public string description
{
	get { return this.GetPropertyValue<string>("description"); }
	set { this.SetPropertyValue("description", value, 2000, "description"); }
}
///<summary>
///<para>Logical Name: utc_equipmentstartdate</para>
///</summary>
[AttributeLogicalNameAttribute("utc_equipmentstartdate")]
public DateTime? utc_equipmentstartdate
{
	get { return this.GetPropertyValue<DateTime?>("utc_equipmentstartdate"); }
	set { this.SetPropertyValue<DateTime?>("utc_equipmentstartdate", value, "utc_equipmentstartdate"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? exchangerate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
///<summary>
///<para>Logical Name: productid</para>
///</summary>
[AttributeLogicalNameAttribute("productid")]
public EntityReference productid
{
	get { return this.GetPropertyValue<EntityReference>("productid"); }
	set { this.SetPropertyValue<EntityReference>("productid", value, "productid"); }
}
///<summary>
///<para>Logical Name: extendedamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? extendedamount
{
	get
	{
		if (extendedamountMoney != null) { return extendedamountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.extendedamountMoney = new Money(value.Value); }
		else this.extendedamountMoney = null;
	}
}
///<summary>
///<para>Logical Name: extendedamount</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("extendedamount")]
public Money extendedamountMoney
{
	get { return this.GetPropertyValue<Money>("extendedamount"); }
	set { this.SetPropertyValue("extendedamount", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "extendedamountMoney"); }
}
///<summary>
///<para>Logical Name: extendedamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? extendedamount_base
{
	get
	{
		if (extendedamount_baseMoney != null) { return extendedamount_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: extendedamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("extendedamount_base")]
public Money extendedamount_baseMoney
{
	get { return this.GetPropertyValue<Money>("extendedamount_base"); }
}
/// <summary>
///Logical Name: shipto_freighttermscode
/// </summary>
[AttributeLogicalNameAttribute("shipto_freighttermscode")]
public eFreightTerms? shipto_freighttermscode
{
	get
	{
		if (shipto_freighttermscode_OptionSetValue != null) { return (eFreightTerms)shipto_freighttermscode_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.shipto_freighttermscode_OptionSetValue = new OptionSetValue((int)value); }
		else this.shipto_freighttermscode_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: shipto_freighttermscode</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_freighttermscode")]
public OptionSetValue shipto_freighttermscode_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("shipto_freighttermscode"); }
	set { this.SetPropertyValue<OptionSetValue>("shipto_freighttermscode", value, "shipto_freighttermscode_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string shipto_freighttermscode_Text(IOrganizationService Service)
{
	return this.shipto_freighttermscode_OptionSetValue.GetOptionSetText(Service, this, "shipto_freighttermscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string shipto_freighttermscode_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.shipto_freighttermscode_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? importsequencenumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "importsequencenumber"); }
}
///<summary>
///<para>Logical Name: invoiceid</para>
///</summary>
[AttributeLogicalNameAttribute("invoiceid")]
public EntityReference invoiceid
{
	get { return this.GetPropertyValue<EntityReference>("invoiceid"); }
	set { this.SetPropertyValue<EntityReference>("invoiceid", value, "invoiceid"); }
}
///<summary>
///<para>Logical Name: invoiceispricelocked</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("invoiceispricelocked")]
public bool? invoiceispricelocked
{
	get { return this.GetPropertyValue<bool?>("invoiceispricelocked"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: invoicedetailid</para>
///</summary>
[AttributeLogicalNameAttribute("invoicedetailid")]
public Guid invoicedetailid
{
	get
	{
		return base.Id;
	}
	set
	{
		base.Id = value;
		base.SetPropertyValue("invoicedetailid", value, "invoicedetailid");
	}
}
///<summary>
///<para>Logical Name: invoicestatecode</para>
///</summary>
[AttributeLogicalNameAttribute("invoicestatecode")]
public OptionSetValue invoicestatecode
{
	get { return this.GetPropertyValue<OptionSetValue>("invoicestatecode"); }
}
///<summary>
///<para>Logical Name: lineitemnumber</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///</summary>
[AttributeLogicalNameAttribute("lineitemnumber")]
public int? lineitemnumber
{
	get { return this.GetPropertyValue<int?>("lineitemnumber"); }
	set { this.SetPropertyValue("lineitemnumber", (int?)value, (int)0, (int)1000000000, "lineitemnumber"); }
}
///<summary>
///<para>Logical Name: msdyn_lineorder</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_lineorder")]
public int? msdyn_lineorder
{
	get { return this.GetPropertyValue<int?>("msdyn_lineorder"); }
	set { this.SetPropertyValue("msdyn_lineorder", (int?)value, (int)-2147483648, (int)2147483647, "msdyn_lineorder"); }
}
/// <summary>
///Logical Name: msdyn_linetype
/// </summary>
[AttributeLogicalNameAttribute("msdyn_linetype")]
public eLineType? msdyn_linetype
{
	get
	{
		if (msdyn_linetype_OptionSetValue != null) { return (eLineType)msdyn_linetype_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.msdyn_linetype_OptionSetValue = new OptionSetValue((int)value); }
		else this.msdyn_linetype_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_linetype</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_linetype")]
public OptionSetValue msdyn_linetype_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_linetype"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_linetype", value, "msdyn_linetype_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string msdyn_linetype_Text(IOrganizationService Service)
{
	return this.msdyn_linetype_OptionSetValue.GetOptionSetText(Service, this, "msdyn_linetype");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string msdyn_linetype_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.msdyn_linetype_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: manualdiscountamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? manualdiscountamount
{
	get
	{
		if (manualdiscountamountMoney != null) { return manualdiscountamountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.manualdiscountamountMoney = new Money(value.Value); }
		else this.manualdiscountamountMoney = null;
	}
}
///<summary>
///<para>Logical Name: manualdiscountamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("manualdiscountamount")]
public Money manualdiscountamountMoney
{
	get { return this.GetPropertyValue<Money>("manualdiscountamount"); }
	set { this.SetPropertyValue("manualdiscountamount", (Money)value, (decimal)0, (decimal)1000000000000, "manualdiscountamountMoney"); }
}
///<summary>
///<para>Logical Name: manualdiscountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? manualdiscountamount_base
{
	get
	{
		if (manualdiscountamount_baseMoney != null) { return manualdiscountamount_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: manualdiscountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("manualdiscountamount_base")]
public Money manualdiscountamount_baseMoney
{
	get { return this.GetPropertyValue<Money>("manualdiscountamount_base"); }
}
///<summary>
///<para>Logical Name: utc_minimumcharge</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("utc_minimumcharge")]
public bool? utc_minimumcharge
{
	get { return this.GetPropertyValue<bool?>("utc_minimumcharge"); }
	set { this.SetPropertyValue<bool?>("utc_minimumcharge", value, "utc_minimumcharge"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference modifiedby
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference modifiedonbehalfby
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? modifiedon
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: invoicedetailname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("invoicedetailname")]
public string invoicedetailname
{
	get { return this.GetPropertyValue<string>("invoicedetailname"); }
	set { this.SetPropertyValue("invoicedetailname", value, 100, "invoicedetailname"); }
}
///<summary>
///<para>Logical Name: utc_numberofdays</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utc_numberofdays")]
public int? utc_numberofdays
{
	get { return this.GetPropertyValue<int?>("utc_numberofdays"); }
	set { this.SetPropertyValue("utc_numberofdays", (int?)value, (int)0, (int)2147483647, "utc_numberofdays"); }
}
///<summary>
///<para>Logical Name: msdyn_orderinvoicingproduct</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_orderinvoicingproduct")]
public EntityReference msdyn_orderinvoicingproduct
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_orderinvoicingproduct"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_orderinvoicingproduct", value, "msdyn_orderinvoicingproduct"); }
}
///<summary>
///<para>Logical Name: salesorderdetailid</para>
///</summary>
[AttributeLogicalNameAttribute("salesorderdetailid")]
public EntityReference salesorderdetailid
{
	get { return this.GetPropertyValue<EntityReference>("salesorderdetailid"); }
	set { this.SetPropertyValue<EntityReference>("salesorderdetailid", value, "salesorderdetailid"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string owneridtype
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference ownerid
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference owningbusinessunit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference owningteam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public Guid owninguser
{
	get { return this.GetPropertyValue<Guid>("owninguser"); }
}
///<summary>
///<para>Logical Name: parentbundleid</para>
///</summary>
[AttributeLogicalNameAttribute("parentbundleid")]
public Guid parentbundleid
{
	get { return this.GetPropertyValue<Guid>("parentbundleid"); }
	set { this.SetPropertyValue<Guid>("parentbundleid", value, "parentbundleid"); }
}
///<summary>
///<para>Logical Name: parentbundleidref</para>
///</summary>
[AttributeLogicalNameAttribute("parentbundleidref")]
public EntityReference parentbundleidref
{
	get { return this.GetPropertyValue<EntityReference>("parentbundleidref"); }
	set { this.SetPropertyValue<EntityReference>("parentbundleidref", value, "parentbundleidref"); }
}
///<summary>
///<para>Logical Name: priceperunit</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? priceperunit
{
	get
	{
		if (priceperunitMoney != null) { return priceperunitMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.priceperunitMoney = new Money(value.Value); }
		else this.priceperunitMoney = null;
	}
}
///<summary>
///<para>Logical Name: priceperunit</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("priceperunit")]
public Money priceperunitMoney
{
	get { return this.GetPropertyValue<Money>("priceperunit"); }
	set { this.SetPropertyValue("priceperunit", (Money)value, (decimal)-922337203685477, (decimal)922337203685477, "priceperunitMoney"); }
}
///<summary>
///<para>Logical Name: priceperunit_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? priceperunit_base
{
	get
	{
		if (priceperunit_baseMoney != null) { return priceperunit_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: priceperunit_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("priceperunit_base")]
public Money priceperunit_baseMoney
{
	get { return this.GetPropertyValue<Money>("priceperunit_base"); }
}
///<summary>
///<para>Logical Name: ispriceoverridden</para>
///<para>True = Override Price</para>
///<para>False = Use Default</para>
///</summary>
[AttributeLogicalNameAttribute("ispriceoverridden")]
public bool? ispriceoverridden
{
	get { return this.GetPropertyValue<bool?>("ispriceoverridden"); }
	set { this.SetPropertyValue<bool?>("ispriceoverridden", value, "ispriceoverridden"); }
}
/// <summary>
///Logical Name: pricingerrorcode
/// </summary>
[AttributeLogicalNameAttribute("pricingerrorcode")]
public ePricingError? pricingerrorcode
{
	get
	{
		if (pricingerrorcode_OptionSetValue != null) { return (ePricingError)pricingerrorcode_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.pricingerrorcode_OptionSetValue = new OptionSetValue((int)value); }
		else this.pricingerrorcode_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: pricingerrorcode</para>
///</summary>
[AttributeLogicalNameAttribute("pricingerrorcode")]
public OptionSetValue pricingerrorcode_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("pricingerrorcode"); }
	set { this.SetPropertyValue<OptionSetValue>("pricingerrorcode", value, "pricingerrorcode_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string pricingerrorcode_Text(IOrganizationService Service)
{
	return this.pricingerrorcode_OptionSetValue.GetOptionSetText(Service, this, "pricingerrorcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string pricingerrorcode_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.pricingerrorcode_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: productname</para>
///<para>Max Length: 500 characters</para>
///</summary>
[AttributeLogicalNameAttribute("productname")]
public string productname
{
	get { return this.GetPropertyValue<string>("productname"); }
	set { this.SetPropertyValue("productname", value, 500, "productname"); }
}
/// <summary>
///Logical Name: producttypecode
/// </summary>
[AttributeLogicalNameAttribute("producttypecode")]
public eProductType? producttypecode
{
	get
	{
		if (producttypecode_OptionSetValue != null) { return (eProductType)producttypecode_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.producttypecode_OptionSetValue = new OptionSetValue((int)value); }
		else this.producttypecode_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: producttypecode</para>
///</summary>
[AttributeLogicalNameAttribute("producttypecode")]
public OptionSetValue producttypecode_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("producttypecode"); }
	set { this.SetPropertyValue<OptionSetValue>("producttypecode", value, "producttypecode_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string producttypecode_Text(IOrganizationService Service)
{
	return this.producttypecode_OptionSetValue.GetOptionSetText(Service, this, "producttypecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string producttypecode_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.producttypecode_OptionSetValue.Value);
}
/// <summary>
///Logical Name: propertyconfigurationstatus
/// </summary>
[AttributeLogicalNameAttribute("propertyconfigurationstatus")]
public ePropertiesConfiguration? propertyconfigurationstatus
{
	get
	{
		if (propertyconfigurationstatus_OptionSetValue != null) { return (ePropertiesConfiguration)propertyconfigurationstatus_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.propertyconfigurationstatus_OptionSetValue = new OptionSetValue((int)value); }
		else this.propertyconfigurationstatus_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: propertyconfigurationstatus</para>
///</summary>
[AttributeLogicalNameAttribute("propertyconfigurationstatus")]
public OptionSetValue propertyconfigurationstatus_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("propertyconfigurationstatus"); }
	set { this.SetPropertyValue<OptionSetValue>("propertyconfigurationstatus", value, "propertyconfigurationstatus_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string propertyconfigurationstatus_Text(IOrganizationService Service)
{
	return this.propertyconfigurationstatus_OptionSetValue.GetOptionSetText(Service, this, "propertyconfigurationstatus");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string propertyconfigurationstatus_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.propertyconfigurationstatus_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: utc_proratedprice</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("utc_proratedprice")]
public bool? utc_proratedprice
{
	get { return this.GetPropertyValue<bool?>("utc_proratedprice"); }
	set { this.SetPropertyValue<bool?>("utc_proratedprice", value, "utc_proratedprice"); }
}
///<summary>
///<para>Logical Name: quantity</para>
///<para>Minimum Value: -100000000000</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("quantity")]
public decimal? quantity
{
	get { return this.GetPropertyValue<decimal?>("quantity"); }
	set { this.SetPropertyValue("quantity", (decimal?)value, (decimal)-100000000000, (decimal)100000000000, "quantity"); }
}
///<summary>
///<para>Logical Name: quantitybackordered</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("quantitybackordered")]
public decimal? quantitybackordered
{
	get { return this.GetPropertyValue<decimal?>("quantitybackordered"); }
	set { this.SetPropertyValue("quantitybackordered", (decimal?)value, (decimal)0, (decimal)1000000000, "quantitybackordered"); }
}
///<summary>
///<para>Logical Name: quantitycancelled</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("quantitycancelled")]
public decimal? quantitycancelled
{
	get { return this.GetPropertyValue<decimal?>("quantitycancelled"); }
	set { this.SetPropertyValue("quantitycancelled", (decimal?)value, (decimal)0, (decimal)1000000000, "quantitycancelled"); }
}
///<summary>
///<para>Logical Name: quantityshipped</para>
///<para>Minimum Value: -1000000000</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("quantityshipped")]
public decimal? quantityshipped
{
	get { return this.GetPropertyValue<decimal?>("quantityshipped"); }
	set { this.SetPropertyValue("quantityshipped", (decimal?)value, (decimal)-1000000000, (decimal)1000000000, "quantityshipped"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? overriddencreatedon
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "overriddencreatedon"); }
}
///<summary>
///<para>Logical Name: utc_recurringbillingquantity</para>
///<para>Minimum Value: -100000000000</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("utc_recurringbillingquantity")]
public decimal? utc_recurringbillingquantity
{
	get { return this.GetPropertyValue<decimal?>("utc_recurringbillingquantity"); }
	set { this.SetPropertyValue("utc_recurringbillingquantity", (decimal?)value, (decimal)-100000000000, (decimal)100000000000, "utc_recurringbillingquantity"); }
}
///<summary>
///<para>Logical Name: utc_rolloveragreementinvoiceproductbilling</para>
///</summary>
[AttributeLogicalNameAttribute("utc_rolloveragreementinvoiceproductbilling")]
public EntityReference utc_rolloveragreementinvoiceproductbilling
{
	get { return this.GetPropertyValue<EntityReference>("utc_rolloveragreementinvoiceproductbilling"); }
	set { this.SetPropertyValue<EntityReference>("utc_rolloveragreementinvoiceproductbilling", value, "utc_rolloveragreementinvoiceproductbilling"); }
}
///<summary>
///<para>Logical Name: utc_rolloverequipmentstartdate</para>
///</summary>
[AttributeLogicalNameAttribute("utc_rolloverequipmentstartdate")]
public DateTime? utc_rolloverequipmentstartdate
{
	get { return this.GetPropertyValue<DateTime?>("utc_rolloverequipmentstartdate"); }
	set { this.SetPropertyValue<DateTime?>("utc_rolloverequipmentstartdate", value, "utc_rolloverequipmentstartdate"); }
}
///<summary>
///<para>Logical Name: utc_rollovernumberofdays</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utc_rollovernumberofdays")]
public int? utc_rollovernumberofdays
{
	get { return this.GetPropertyValue<int?>("utc_rollovernumberofdays"); }
	set { this.SetPropertyValue("utc_rollovernumberofdays", (int?)value, (int)0, (int)2147483647, "utc_rollovernumberofdays"); }
}
///<summary>
///<para>Logical Name: utc_rolloverproratedprice</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("utc_rolloverproratedprice")]
public bool? utc_rolloverproratedprice
{
	get { return this.GetPropertyValue<bool?>("utc_rolloverproratedprice"); }
	set { this.SetPropertyValue<bool?>("utc_rolloverproratedprice", value, "utc_rolloverproratedprice"); }
}
///<summary>
///<para>Logical Name: utc_rolloverrecurringbillingquantity</para>
///<para>Minimum Value: -100000000000</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("utc_rolloverrecurringbillingquantity")]
public decimal? utc_rolloverrecurringbillingquantity
{
	get { return this.GetPropertyValue<decimal?>("utc_rolloverrecurringbillingquantity"); }
	set { this.SetPropertyValue("utc_rolloverrecurringbillingquantity", (decimal?)value, (decimal)-100000000000, (decimal)100000000000, "utc_rolloverrecurringbillingquantity"); }
}
///<summary>
///<para>Logical Name: salesrepid</para>
///</summary>
[AttributeLogicalNameAttribute("salesrepid")]
public EntityReference salesrepid
{
	get { return this.GetPropertyValue<EntityReference>("salesrepid"); }
	set { this.SetPropertyValue<EntityReference>("salesrepid", value, "salesrepid"); }
}
///<summary>
///<para>Logical Name: isproductoverridden</para>
///<para>True = Write In</para>
///<para>False = Existing</para>
///</summary>
[AttributeLogicalNameAttribute("isproductoverridden")]
public bool? isproductoverridden
{
	get { return this.GetPropertyValue<bool?>("isproductoverridden"); }
	set { this.SetPropertyValue<bool?>("isproductoverridden", value, "isproductoverridden"); }
}
///<summary>
///<para>Logical Name: sequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("sequencenumber")]
public int? sequencenumber
{
	get { return this.GetPropertyValue<int?>("sequencenumber"); }
	set { this.SetPropertyValue("sequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "sequencenumber"); }
}
///<summary>
///<para>Logical Name: willcall</para>
///<para>True = Will Call</para>
///<para>False = Address</para>
///</summary>
[AttributeLogicalNameAttribute("willcall")]
public bool? willcall
{
	get { return this.GetPropertyValue<bool?>("willcall"); }
	set { this.SetPropertyValue<bool?>("willcall", value, "willcall"); }
}
///<summary>
///<para>Logical Name: shipto_city</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_city")]
public string shipto_city
{
	get { return this.GetPropertyValue<string>("shipto_city"); }
	set { this.SetPropertyValue("shipto_city", value, 80, "shipto_city"); }
}
///<summary>
///<para>Logical Name: shipto_country</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_country")]
public string shipto_country
{
	get { return this.GetPropertyValue<string>("shipto_country"); }
	set { this.SetPropertyValue("shipto_country", value, 80, "shipto_country"); }
}
///<summary>
///<para>Logical Name: shipto_fax</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_fax")]
public string shipto_fax
{
	get { return this.GetPropertyValue<string>("shipto_fax"); }
	set { this.SetPropertyValue("shipto_fax", value, 50, "shipto_fax"); }
}
///<summary>
///<para>Logical Name: shipto_name</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_name")]
public string shipto_name
{
	get { return this.GetPropertyValue<string>("shipto_name"); }
	set { this.SetPropertyValue("shipto_name", value, 200, "shipto_name"); }
}
///<summary>
///<para>Logical Name: shipto_telephone</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_telephone")]
public string shipto_telephone
{
	get { return this.GetPropertyValue<string>("shipto_telephone"); }
	set { this.SetPropertyValue("shipto_telephone", value, 50, "shipto_telephone"); }
}
///<summary>
///<para>Logical Name: shipto_stateorprovince</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_stateorprovince")]
public string shipto_stateorprovince
{
	get { return this.GetPropertyValue<string>("shipto_stateorprovince"); }
	set { this.SetPropertyValue("shipto_stateorprovince", value, 50, "shipto_stateorprovince"); }
}
///<summary>
///<para>Logical Name: shipto_line1</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_line1")]
public string shipto_line1
{
	get { return this.GetPropertyValue<string>("shipto_line1"); }
	set { this.SetPropertyValue("shipto_line1", value, 250, "shipto_line1"); }
}
///<summary>
///<para>Logical Name: shipto_line2</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_line2")]
public string shipto_line2
{
	get { return this.GetPropertyValue<string>("shipto_line2"); }
	set { this.SetPropertyValue("shipto_line2", value, 250, "shipto_line2"); }
}
///<summary>
///<para>Logical Name: shipto_line3</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_line3")]
public string shipto_line3
{
	get { return this.GetPropertyValue<string>("shipto_line3"); }
	set { this.SetPropertyValue("shipto_line3", value, 250, "shipto_line3"); }
}
///<summary>
///<para>Logical Name: shipto_postalcode</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shipto_postalcode")]
public string shipto_postalcode
{
	get { return this.GetPropertyValue<string>("shipto_postalcode"); }
	set { this.SetPropertyValue("shipto_postalcode", value, 20, "shipto_postalcode"); }
}
///<summary>
///<para>Logical Name: shippingtrackingnumber</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("shippingtrackingnumber")]
public string shippingtrackingnumber
{
	get { return this.GetPropertyValue<string>("shippingtrackingnumber"); }
	set { this.SetPropertyValue("shippingtrackingnumber", value, 100, "shippingtrackingnumber"); }
}
///<summary>
///<para>Logical Name: utc_sourceexistingproduct</para>
///</summary>
[AttributeLogicalNameAttribute("utc_sourceexistingproduct")]
public EntityReference utc_sourceexistingproduct
{
	get { return this.GetPropertyValue<EntityReference>("utc_sourceexistingproduct"); }
	set { this.SetPropertyValue<EntityReference>("utc_sourceexistingproduct", value, "utc_sourceexistingproduct"); }
}
///<summary>
///<para>Logical Name: tax</para>
///<para>Minimum Value: -1000000000000</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? tax
{
	get
	{
		if (taxMoney != null) { return taxMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.taxMoney = new Money(value.Value); }
		else this.taxMoney = null;
	}
}
///<summary>
///<para>Logical Name: tax</para>
///<para>Minimum Value: -1000000000000</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("tax")]
public Money taxMoney
{
	get { return this.GetPropertyValue<Money>("tax"); }
	set { this.SetPropertyValue("tax", (Money)value, (decimal)-1000000000000, (decimal)1000000000000, "taxMoney"); }
}
///<summary>
///<para>Logical Name: tax_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? tax_base
{
	get
	{
		if (tax_baseMoney != null) { return tax_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: tax_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("tax_base")]
public Money tax_baseMoney
{
	get { return this.GetPropertyValue<Money>("tax_base"); }
}
///<summary>
///<para>Logical Name: utc_taxrate</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("utc_taxrate")]
public double? utc_taxrate
{
	get { return this.GetPropertyValue<double?>("utc_taxrate"); }
	set { this.SetPropertyValue("utc_taxrate", (double?)value, (double)0, (double)100, "utc_taxrate"); }
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? timezoneruleversionnumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "timezoneruleversionnumber"); }
}
///<summary>
///<para>Logical Name: uomid</para>
///</summary>
[AttributeLogicalNameAttribute("uomid")]
public EntityReference uomid
{
	get { return this.GetPropertyValue<EntityReference>("uomid"); }
	set { this.SetPropertyValue<EntityReference>("uomid", value, "uomid"); }
}
///<summary>
///<para>Logical Name: utc_updatingrecurringbillingoncreate</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("utc_updatingrecurringbillingoncreate")]
public bool? utc_updatingrecurringbillingoncreate
{
	get { return this.GetPropertyValue<bool?>("utc_updatingrecurringbillingoncreate"); }
	set { this.SetPropertyValue<bool?>("utc_updatingrecurringbillingoncreate", value, "utc_updatingrecurringbillingoncreate"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? utcconversiontimezonecode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "utcconversiontimezonecode"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? versionnumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Logical Name: volumediscountamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? volumediscountamount
{
	get
	{
		if (volumediscountamountMoney != null) { return volumediscountamountMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: volumediscountamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("volumediscountamount")]
public Money volumediscountamountMoney
{
	get { return this.GetPropertyValue<Money>("volumediscountamount"); }
}
///<summary>
///<para>Logical Name: volumediscountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? volumediscountamount_base
{
	get
	{
		if (volumediscountamount_baseMoney != null) { return volumediscountamount_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: volumediscountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("volumediscountamount_base")]
public Money volumediscountamount_baseMoney
{
	get { return this.GetPropertyValue<Money>("volumediscountamount_base"); }
}
///<summary>
///<para>Logical Name: msdyn_workorderid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workorderid")]
public EntityReference msdyn_workorderid
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_workorderid"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_workorderid", value, "msdyn_workorderid"); }
}
///<summary>
///<para>Logical Name: msdyn_workorderproductid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workorderproductid")]
public EntityReference msdyn_workorderproductid
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_workorderproductid"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_workorderproductid", value, "msdyn_workorderproductid"); }
}
///<summary>
///<para>Logical Name: msdyn_workorderserviceid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workorderserviceid")]
public EntityReference msdyn_workorderserviceid
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_workorderserviceid"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_workorderserviceid", value, "msdyn_workorderserviceid"); }
}
///<summary>
///<para>Logical Name: productdescription</para>
///<para>Max Length: 500 characters</para>
///</summary>
[AttributeLogicalNameAttribute("productdescription")]
public string productdescription
{
	get { return this.GetPropertyValue<string>("productdescription"); }
	set { this.SetPropertyValue("productdescription", value, 500, "productdescription"); }
}


        /// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: InvoiceDetail_AsyncOperations</para>
/// </summary>
public List<Entity> InvoiceDetail_AsyncOperations (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: InvoiceDetail_AsyncOperations</para>
/// </summary>
public List<Entity> InvoiceDetail_AsyncOperations (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: InvoiceDetail_BulkDeleteFailures</para>
/// </summary>
public List<Entity> InvoiceDetail_BulkDeleteFailures (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: InvoiceDetail_BulkDeleteFailures</para>
/// </summary>
public List<Entity> InvoiceDetail_BulkDeleteFailures (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: InvoiceDetail_Dynamicpropertyinstance</para>
/// </summary>
public List<Entity> InvoiceDetail_Dynamicpropertyinstance (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "dynamicpropertyinstance", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: InvoiceDetail_Dynamicpropertyinstance</para>
/// </summary>
public List<Entity> InvoiceDetail_Dynamicpropertyinstance (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "dynamicpropertyinstance", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>invoicedetail (Parent Bundle)</b></para>
/// <para>Schema Name: invoicedetail_parent_invoicedetail</para>
/// </summary>
public List<invoicedetail> invoicedetail_parent_invoicedetail (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<invoicedetail>(Service, this.Id, "invoicedetail", "parentbundleid", Columns); }
/// <summary>
/// <para><b>invoicedetail (Parent Bundle)</b></para>
/// <para>Schema Name: invoicedetail_parent_invoicedetail</para>
/// </summary>
public List<invoicedetail> invoicedetail_parent_invoicedetail (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<invoicedetail>(Service, this.Id, "invoicedetail", "parentbundleid", Columns); }
/// <summary>
/// <para><b>invoicedetail (Parent bundle product)</b></para>
/// <para>Schema Name: invoicedetail_parentref_invoicedetail</para>
/// </summary>
public List<invoicedetail> invoicedetail_parentref_invoicedetail (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<invoicedetail>(Service, this.Id, "invoicedetail", "parentbundleidref", Columns); }
/// <summary>
/// <para><b>invoicedetail (Parent bundle product)</b></para>
/// <para>Schema Name: invoicedetail_parentref_invoicedetail</para>
/// </summary>
public List<invoicedetail> invoicedetail_parentref_invoicedetail (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<invoicedetail>(Service, this.Id, "invoicedetail", "parentbundleidref", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: invoicedetail_MailboxTrackingFolders</para>
/// </summary>
public List<Entity> invoicedetail_MailboxTrackingFolders (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: invoicedetail_MailboxTrackingFolders</para>
/// </summary>
public List<Entity> invoicedetail_MailboxTrackingFolders (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: invoicedetail_principalobjectattributeaccess</para>
/// </summary>
public List<Entity> invoicedetail_principalobjectattributeaccess (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: invoicedetail_principalobjectattributeaccess</para>
/// </summary>
public List<Entity> invoicedetail_principalobjectattributeaccess (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: InvoiceDetail_ProcessSessions</para>
/// </summary>
public List<Entity> InvoiceDetail_ProcessSessions (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: InvoiceDetail_ProcessSessions</para>
/// </summary>
public List<Entity> InvoiceDetail_ProcessSessions (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: InvoiceDetail_SyncErrors</para>
/// </summary>
public List<Entity> InvoiceDetail_SyncErrors (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: InvoiceDetail_SyncErrors</para>
/// </summary>
public List<Entity> InvoiceDetail_SyncErrors (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: userentityinstancedata_invoicedetail</para>
/// </summary>
public List<Entity> userentityinstancedata_invoicedetail (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: userentityinstancedata_invoicedetail</para>
/// </summary>
public List<Entity> userentityinstancedata_invoicedetail (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        

        

        public enum eFreightTerms
{
	///<summary><para>FOB</para>
	///<para>Value = 1</para></summary>
	[Description("FOB")]
	FOB = 1, 
	///<summary><para>No Charge</para>
	///<para>Value = 2</para></summary>
	[Description("No Charge")]
	NoCharge = 2
}
public enum eLineType
{
	///<summary><para>Project Service Line</para>
	///<para>Value = 690970000</para></summary>
	[Description("Project Service Line")]
	ProjectServiceLine = 690970000, 
	///<summary><para>Field Service Line</para>
	///<para>Value = 690970001</para></summary>
	[Description("Field Service Line")]
	FieldServiceLine = 690970001
}
public enum ePricingError
{
	///<summary><para>None</para>
	///<para>Value = 0</para></summary>
	[Description("None")]
	None = 0, 
	///<summary><para>Detail Error</para>
	///<para>Value = 1</para></summary>
	[Description("Detail Error")]
	DetailError = 1, 
	///<summary><para>Missing Price Level</para>
	///<para>Value = 2</para></summary>
	[Description("Missing Price Level")]
	MissingPriceLevel = 2, 
	///<summary><para>Inactive Price Level</para>
	///<para>Value = 3</para></summary>
	[Description("Inactive Price Level")]
	InactivePriceLevel = 3, 
	///<summary><para>Missing Quantity</para>
	///<para>Value = 4</para></summary>
	[Description("Missing Quantity")]
	MissingQuantity = 4, 
	///<summary><para>Missing Unit Price</para>
	///<para>Value = 5</para></summary>
	[Description("Missing Unit Price")]
	MissingUnitPrice = 5, 
	///<summary><para>Missing Product</para>
	///<para>Value = 6</para></summary>
	[Description("Missing Product")]
	MissingProduct = 6, 
	///<summary><para>Invalid Product</para>
	///<para>Value = 7</para></summary>
	[Description("Invalid Product")]
	InvalidProduct = 7, 
	///<summary><para>Missing Pricing Code</para>
	///<para>Value = 8</para></summary>
	[Description("Missing Pricing Code")]
	MissingPricingCode = 8, 
	///<summary><para>Invalid Pricing Code</para>
	///<para>Value = 9</para></summary>
	[Description("Invalid Pricing Code")]
	InvalidPricingCode = 9, 
	///<summary><para>Missing UOM</para>
	///<para>Value = 10</para></summary>
	[Description("Missing UOM")]
	MissingUOM = 10, 
	///<summary><para>Product Not In Price Level</para>
	///<para>Value = 11</para></summary>
	[Description("Product Not In Price Level")]
	ProductNotInPriceLevel = 11, 
	///<summary><para>Missing Price Level Amount</para>
	///<para>Value = 12</para></summary>
	[Description("Missing Price Level Amount")]
	MissingPriceLevelAmount = 12, 
	///<summary><para>Missing Price Level Percentage</para>
	///<para>Value = 13</para></summary>
	[Description("Missing Price Level Percentage")]
	MissingPriceLevelPercentage = 13, 
	///<summary><para>Missing Price</para>
	///<para>Value = 14</para></summary>
	[Description("Missing Price")]
	MissingPrice = 14, 
	///<summary><para>Missing Current Cost</para>
	///<para>Value = 15</para></summary>
	[Description("Missing Current Cost")]
	MissingCurrentCost = 15, 
	///<summary><para>Missing Standard Cost</para>
	///<para>Value = 16</para></summary>
	[Description("Missing Standard Cost")]
	MissingStandardCost = 16, 
	///<summary><para>Invalid Price Level Amount</para>
	///<para>Value = 17</para></summary>
	[Description("Invalid Price Level Amount")]
	InvalidPriceLevelAmount = 17, 
	///<summary><para>Invalid Price Level Percentage</para>
	///<para>Value = 18</para></summary>
	[Description("Invalid Price Level Percentage")]
	InvalidPriceLevelPercentage = 18, 
	///<summary><para>Invalid Price</para>
	///<para>Value = 19</para></summary>
	[Description("Invalid Price")]
	InvalidPrice = 19, 
	///<summary><para>Invalid Current Cost</para>
	///<para>Value = 20</para></summary>
	[Description("Invalid Current Cost")]
	InvalidCurrentCost = 20, 
	///<summary><para>Invalid Standard Cost</para>
	///<para>Value = 21</para></summary>
	[Description("Invalid Standard Cost")]
	InvalidStandardCost = 21, 
	///<summary><para>Invalid Rounding Policy</para>
	///<para>Value = 22</para></summary>
	[Description("Invalid Rounding Policy")]
	InvalidRoundingPolicy = 22, 
	///<summary><para>Invalid Rounding Option</para>
	///<para>Value = 23</para></summary>
	[Description("Invalid Rounding Option")]
	InvalidRoundingOption = 23, 
	///<summary><para>Invalid Rounding Amount</para>
	///<para>Value = 24</para></summary>
	[Description("Invalid Rounding Amount")]
	InvalidRoundingAmount = 24, 
	///<summary><para>Price Calculation Error</para>
	///<para>Value = 25</para></summary>
	[Description("Price Calculation Error")]
	PriceCalculationError = 25, 
	///<summary><para>Invalid Discount Type</para>
	///<para>Value = 26</para></summary>
	[Description("Invalid Discount Type")]
	InvalidDiscountType = 26, 
	///<summary><para>Discount Type Invalid State</para>
	///<para>Value = 27</para></summary>
	[Description("Discount Type Invalid State")]
	DiscountTypeInvalidState = 27, 
	///<summary><para>Invalid Discount</para>
	///<para>Value = 28</para></summary>
	[Description("Invalid Discount")]
	InvalidDiscount = 28, 
	///<summary><para>Invalid Quantity</para>
	///<para>Value = 29</para></summary>
	[Description("Invalid Quantity")]
	InvalidQuantity = 29, 
	///<summary><para>Invalid Pricing Precision</para>
	///<para>Value = 30</para></summary>
	[Description("Invalid Pricing Precision")]
	InvalidPricingPrecision = 30, 
	///<summary><para>Missing Product Default UOM</para>
	///<para>Value = 31</para></summary>
	[Description("Missing Product Default UOM")]
	MissingProductDefaultUOM = 31, 
	///<summary><para>Missing Product UOM Schedule </para>
	///<para>Value = 32</para></summary>
	[Description("Missing Product UOM Schedule ")]
	MissingProductUOMSchedule = 32, 
	///<summary><para>Inactive Discount Type</para>
	///<para>Value = 33</para></summary>
	[Description("Inactive Discount Type")]
	InactiveDiscountType = 33, 
	///<summary><para>Invalid Price Level Currency</para>
	///<para>Value = 34</para></summary>
	[Description("Invalid Price Level Currency")]
	InvalidPriceLevelCurrency = 34, 
	///<summary><para>Price Attribute Out Of Range</para>
	///<para>Value = 35</para></summary>
	[Description("Price Attribute Out Of Range")]
	PriceAttributeOutOfRange = 35, 
	///<summary><para>Base Currency Attribute Overflow</para>
	///<para>Value = 36</para></summary>
	[Description("Base Currency Attribute Overflow")]
	BaseCurrencyAttributeOverflow = 36, 
	///<summary><para>Base Currency Attribute Underflow</para>
	///<para>Value = 37</para></summary>
	[Description("Base Currency Attribute Underflow")]
	BaseCurrencyAttributeUnderflow = 37, 
	///<summary><para>Transaction currency is not set for the product price list item</para>
	///<para>Value = 38</para></summary>
	[Description("Transaction currency is not set for the product price list item")]
	TransactionCurrencyIsNotSetForTheProductPriceListItem = 38
}
public enum eProductType
{
	///<summary><para>Product</para>
	///<para>Value = 1</para></summary>
	[Description("Product")]
	Product = 1, 
	///<summary><para>Bundle</para>
	///<para>Value = 2</para></summary>
	[Description("Bundle")]
	Bundle = 2, 
	///<summary><para>Required Bundle Product</para>
	///<para>Value = 3</para></summary>
	[Description("Required Bundle Product")]
	RequiredBundleProduct = 3, 
	///<summary><para>Optional Bundle Product</para>
	///<para>Value = 4</para></summary>
	[Description("Optional Bundle Product")]
	OptionalBundleProduct = 4, 
	///<summary><para>Project-based Service</para>
	///<para>Value = 5</para></summary>
	[Description("Project-based Service")]
	Project_basedService = 5
}
public enum ePropertiesConfiguration
{
	///<summary><para>Edit</para>
	///<para>Value = 0</para></summary>
	[Description("Edit")]
	Edit = 0, 
	///<summary><para>Rectify</para>
	///<para>Value = 1</para></summary>
	[Description("Rectify")]
	Rectify = 1, 
	///<summary><para>Not Configured</para>
	///<para>Value = 2</para></summary>
	[Description("Not Configured")]
	NotConfigured = 2
}


        public static class Properties
{
	/// <summary><para>utc_sourceexistingproductname</para>
	/// <para>utc_sourceexistingproductname</para></summary>
	public const string utc_sourceexistingproductname = "utc_sourceexistingproductname";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string transactioncurrencyidname = "transactioncurrencyidname";
	/// <summary><para>msdyn_agreementinvoiceproductname</para>
	/// <para>msdyn_agreementinvoiceproductname</para></summary>
	public const string msdyn_agreementinvoiceproductname = "msdyn_agreementinvoiceproductname";
	/// <summary><para>msdyn_workorderidname</para>
	/// <para>msdyn_workorderidname</para></summary>
	public const string msdyn_workorderidname = "msdyn_workorderidname";
	/// <summary><para>utc_agreementinvoiceproductbillingname</para>
	/// <para>utc_agreementinvoiceproductbillingname</para></summary>
	public const string utc_agreementinvoiceproductbillingname = "utc_agreementinvoiceproductbillingname";
	/// <summary><para>msdyn_orderinvoicingproductname</para>
	/// <para>msdyn_orderinvoicingproductname</para></summary>
	public const string msdyn_orderinvoicingproductname = "msdyn_orderinvoicingproductname";
	/// <summary><para>utc_customerequipmentname</para>
	/// <para>utc_customerequipmentname</para></summary>
	public const string utc_customerequipmentname = "utc_customerequipmentname";
	/// <summary><para>uomidname</para>
	/// <para>uomidname</para></summary>
	public const string uomidname = "uomidname";
	/// <summary><para>salesorderdetailidname</para>
	/// <para>salesorderdetailidname</para></summary>
	public const string salesorderdetailidname = "salesorderdetailidname";
	/// <summary><para>productidname</para>
	/// <para>productidname</para></summary>
	public const string productidname = "productidname";
	/// <summary><para>salesrepidyominame</para>
	/// <para>salesrepidyominame</para></summary>
	public const string salesrepidyominame = "salesrepidyominame";
	/// <summary><para>msdyn_workorderproductidname</para>
	/// <para>msdyn_workorderproductidname</para></summary>
	public const string msdyn_workorderproductidname = "msdyn_workorderproductidname";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string owneridyominame = "owneridyominame";
	/// <summary><para>invoiceidname</para>
	/// <para>invoiceidname</para></summary>
	public const string invoiceidname = "invoiceidname";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string createdonbehalfbyname = "createdonbehalfbyname";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string owneridname = "owneridname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
	/// <summary><para>msdyn_agreementname</para>
	/// <para>msdyn_agreementname</para></summary>
	public const string msdyn_agreementname = "msdyn_agreementname";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string createdbyname = "createdbyname";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string modifiedbyyominame = "modifiedbyyominame";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
	/// <summary><para>utc_rolloveragreementinvoiceproductbillingname</para>
	/// <para>utc_rolloveragreementinvoiceproductbillingname</para></summary>
	public const string utc_rolloveragreementinvoiceproductbillingname = "utc_rolloveragreementinvoiceproductbillingname";
	/// <summary><para>salesrepidname</para>
	/// <para>salesrepidname</para></summary>
	public const string salesrepidname = "salesrepidname";
	/// <summary><para>msdyn_workorderserviceidname</para>
	/// <para>msdyn_workorderserviceidname</para></summary>
	public const string msdyn_workorderserviceidname = "msdyn_workorderserviceidname";
	/// <summary><para>msdyn_currencyname</para>
	/// <para>msdyn_currencyname</para></summary>
	public const string msdyn_currencyname = "msdyn_currencyname";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string modifiedbyname = "modifiedbyname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string createdbyyominame = "createdbyyominame";
	/// <summary><para>(HIDDEN) IsCreatedFromAgreementInvoiceDate</para>
	/// <para>utc_iscreatedfromagreementinvoicedate</para></summary>
	public const string utc_iscreatedfromagreementinvoicedate = "utc_iscreatedfromagreementinvoicedate";
	/// <summary><para>Agreement</para>
	/// <para>msdyn_agreement</para></summary>
	public const string msdyn_agreement = "msdyn_agreement";
	/// <summary><para>Agreement Invoice Product</para>
	/// <para>msdyn_agreementinvoiceproduct</para></summary>
	public const string msdyn_agreementinvoiceproduct = "msdyn_agreementinvoiceproduct";
	/// <summary><para>Agreement Invoice Product Billing</para>
	/// <para>utc_agreementinvoiceproductbilling</para></summary>
	public const string utc_agreementinvoiceproductbilling = "utc_agreementinvoiceproductbilling";
	/// <summary><para>Amount</para>
	/// <para>baseamount</para></summary>
	public const string baseamount = "baseamount";
	/// <summary><para>Amount (Base)</para>
	/// <para>baseamount_base</para></summary>
	public const string baseamount_base = "baseamount_base";
	/// <summary><para>Bundle Item Association</para>
	/// <para>productassociationid</para></summary>
	public const string productassociationid = "productassociationid";
	/// <summary><para>Copied</para>
	/// <para>iscopied</para></summary>
	public const string iscopied = "iscopied";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string createdby = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string createdonbehalfby = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string createdon = "createdon";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string transactioncurrencyid = "transactioncurrencyid";
	/// <summary><para>Currency</para>
	/// <para>msdyn_currency</para></summary>
	public const string msdyn_currency = "msdyn_currency";
	/// <summary><para>Customer Equipment</para>
	/// <para>utc_customerequipment</para></summary>
	public const string utc_customerequipment = "utc_customerequipment";
	/// <summary><para>Delivered On</para>
	/// <para>actualdeliveryon</para></summary>
	public const string actualdeliveryon = "actualdeliveryon";
	/// <summary><para>Description</para>
	/// <para>description</para></summary>
	public const string description = "description";
	/// <summary><para>Equipment Start Date</para>
	/// <para>utc_equipmentstartdate</para></summary>
	public const string utc_equipmentstartdate = "utc_equipmentstartdate";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string exchangerate = "exchangerate";
	/// <summary><para>Existing Product</para>
	/// <para>productid</para></summary>
	public const string productid = "productid";
	/// <summary><para>Extended Amount</para>
	/// <para>extendedamount</para></summary>
	public const string extendedamount = "extendedamount";
	/// <summary><para>Extended Amount (Base)</para>
	/// <para>extendedamount_base</para></summary>
	public const string extendedamount_base = "extendedamount_base";
	/// <summary><para>Freight Terms</para>
	/// <para>shipto_freighttermscode</para></summary>
	public const string shipto_freighttermscode = "shipto_freighttermscode";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string importsequencenumber = "importsequencenumber";
	/// <summary><para>Invoice ID</para>
	/// <para>invoiceid</para></summary>
	public const string invoiceid = "invoiceid";
	/// <summary><para>Invoice Is Price Locked</para>
	/// <para>invoiceispricelocked</para></summary>
	public const string invoiceispricelocked = "invoiceispricelocked";
	/// <summary><para>Invoice Product</para>
	/// <para>invoicedetailid</para></summary>
	public const string invoicedetailid = "invoicedetailid";
	/// <summary><para>Invoice Status</para>
	/// <para>invoicestatecode</para></summary>
	public const string invoicestatecode = "invoicestatecode";
	/// <summary><para>Line Item Number</para>
	/// <para>lineitemnumber</para></summary>
	public const string lineitemnumber = "lineitemnumber";
	/// <summary><para>Line Order</para>
	/// <para>msdyn_lineorder</para></summary>
	public const string msdyn_lineorder = "msdyn_lineorder";
	/// <summary><para>Line Type</para>
	/// <para>msdyn_linetype</para></summary>
	public const string msdyn_linetype = "msdyn_linetype";
	/// <summary><para>Manual Discount</para>
	/// <para>manualdiscountamount</para></summary>
	public const string manualdiscountamount = "manualdiscountamount";
	/// <summary><para>Manual Discount (Base)</para>
	/// <para>manualdiscountamount_base</para></summary>
	public const string manualdiscountamount_base = "manualdiscountamount_base";
	/// <summary><para>Minimum Charge</para>
	/// <para>utc_minimumcharge</para></summary>
	public const string utc_minimumcharge = "utc_minimumcharge";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string modifiedby = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string modifiedonbehalfby = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string modifiedon = "modifiedon";
	/// <summary><para>Name</para>
	/// <para>invoicedetailname</para></summary>
	public const string invoicedetailname = "invoicedetailname";
	/// <summary><para>Number of Days</para>
	/// <para>utc_numberofdays</para></summary>
	public const string utc_numberofdays = "utc_numberofdays";
	/// <summary><para>Order Invoicing Product</para>
	/// <para>msdyn_orderinvoicingproduct</para></summary>
	public const string msdyn_orderinvoicingproduct = "msdyn_orderinvoicingproduct";
	/// <summary><para>Order Product Id</para>
	/// <para>salesorderdetailid</para></summary>
	public const string salesorderdetailid = "salesorderdetailid";
	/// <summary><para>Owner</para>
	/// <para>owneridtype</para></summary>
	public const string owneridtype = "owneridtype";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string ownerid = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string owningbusinessunit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string owningteam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string owninguser = "owninguser";
	/// <summary><para>Parent Bundle</para>
	/// <para>parentbundleid</para></summary>
	public const string parentbundleid = "parentbundleid";
	/// <summary><para>Parent bundle product</para>
	/// <para>parentbundleidref</para></summary>
	public const string parentbundleidref = "parentbundleidref";
	/// <summary><para>Price Per Unit</para>
	/// <para>priceperunit</para></summary>
	public const string priceperunit = "priceperunit";
	/// <summary><para>Price Per Unit (Base)</para>
	/// <para>priceperunit_base</para></summary>
	public const string priceperunit_base = "priceperunit_base";
	/// <summary><para>Pricing</para>
	/// <para>ispriceoverridden</para></summary>
	public const string ispriceoverridden = "ispriceoverridden";
	/// <summary><para>Pricing Error </para>
	/// <para>pricingerrorcode</para></summary>
	public const string pricingerrorcode = "pricingerrorcode";
	/// <summary><para>Product Name</para>
	/// <para>productname</para></summary>
	public const string productname = "productname";
	/// <summary><para>Product type</para>
	/// <para>producttypecode</para></summary>
	public const string producttypecode = "producttypecode";
	/// <summary><para>Property Configuration</para>
	/// <para>propertyconfigurationstatus</para></summary>
	public const string propertyconfigurationstatus = "propertyconfigurationstatus";
	/// <summary><para>Prorated Price</para>
	/// <para>utc_proratedprice</para></summary>
	public const string utc_proratedprice = "utc_proratedprice";
	/// <summary><para>Quantity</para>
	/// <para>quantity</para></summary>
	public const string quantity = "quantity";
	/// <summary><para>Quantity Back Ordered</para>
	/// <para>quantitybackordered</para></summary>
	public const string quantitybackordered = "quantitybackordered";
	/// <summary><para>Quantity Canceled</para>
	/// <para>quantitycancelled</para></summary>
	public const string quantitycancelled = "quantitycancelled";
	/// <summary><para>Quantity Shipped</para>
	/// <para>quantityshipped</para></summary>
	public const string quantityshipped = "quantityshipped";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string overriddencreatedon = "overriddencreatedon";
	/// <summary><para>Recurring Billing Quantity</para>
	/// <para>utc_recurringbillingquantity</para></summary>
	public const string utc_recurringbillingquantity = "utc_recurringbillingquantity";
	/// <summary><para>Rollover Agreement Invoice Product Billing</para>
	/// <para>utc_rolloveragreementinvoiceproductbilling</para></summary>
	public const string utc_rolloveragreementinvoiceproductbilling = "utc_rolloveragreementinvoiceproductbilling";
	/// <summary><para>Rollover Equipment Start Date</para>
	/// <para>utc_rolloverequipmentstartdate</para></summary>
	public const string utc_rolloverequipmentstartdate = "utc_rolloverequipmentstartdate";
	/// <summary><para>Rollover Number of Days</para>
	/// <para>utc_rollovernumberofdays</para></summary>
	public const string utc_rollovernumberofdays = "utc_rollovernumberofdays";
	/// <summary><para>Rollover Prorated Price</para>
	/// <para>utc_rolloverproratedprice</para></summary>
	public const string utc_rolloverproratedprice = "utc_rolloverproratedprice";
	/// <summary><para>Rollover Recurring Billing Quantity</para>
	/// <para>utc_rolloverrecurringbillingquantity</para></summary>
	public const string utc_rolloverrecurringbillingquantity = "utc_rolloverrecurringbillingquantity";
	/// <summary><para>Salesperson</para>
	/// <para>salesrepid</para></summary>
	public const string salesrepid = "salesrepid";
	/// <summary><para>Select Product</para>
	/// <para>isproductoverridden</para></summary>
	public const string isproductoverridden = "isproductoverridden";
	/// <summary><para>Sequence Number</para>
	/// <para>sequencenumber</para></summary>
	public const string sequencenumber = "sequencenumber";
	/// <summary><para>Ship To</para>
	/// <para>willcall</para></summary>
	public const string willcall = "willcall";
	/// <summary><para>Ship To City</para>
	/// <para>shipto_city</para></summary>
	public const string shipto_city = "shipto_city";
	/// <summary><para>Ship To Country/Region</para>
	/// <para>shipto_country</para></summary>
	public const string shipto_country = "shipto_country";
	/// <summary><para>Ship To Fax</para>
	/// <para>shipto_fax</para></summary>
	public const string shipto_fax = "shipto_fax";
	/// <summary><para>Ship To Name</para>
	/// <para>shipto_name</para></summary>
	public const string shipto_name = "shipto_name";
	/// <summary><para>Ship To Phone</para>
	/// <para>shipto_telephone</para></summary>
	public const string shipto_telephone = "shipto_telephone";
	/// <summary><para>Ship To State/Province</para>
	/// <para>shipto_stateorprovince</para></summary>
	public const string shipto_stateorprovince = "shipto_stateorprovince";
	/// <summary><para>Ship To Street 1</para>
	/// <para>shipto_line1</para></summary>
	public const string shipto_line1 = "shipto_line1";
	/// <summary><para>Ship To Street 2</para>
	/// <para>shipto_line2</para></summary>
	public const string shipto_line2 = "shipto_line2";
	/// <summary><para>Ship To Street 3</para>
	/// <para>shipto_line3</para></summary>
	public const string shipto_line3 = "shipto_line3";
	/// <summary><para>Ship To ZIP/Postal Code</para>
	/// <para>shipto_postalcode</para></summary>
	public const string shipto_postalcode = "shipto_postalcode";
	/// <summary><para>Shipment Tracking Number</para>
	/// <para>shippingtrackingnumber</para></summary>
	public const string shippingtrackingnumber = "shippingtrackingnumber";
	/// <summary><para>Source Existing Product</para>
	/// <para>utc_sourceexistingproduct</para></summary>
	public const string utc_sourceexistingproduct = "utc_sourceexistingproduct";
	/// <summary><para>Tax</para>
	/// <para>tax</para></summary>
	public const string tax = "tax";
	/// <summary><para>Tax (Base)</para>
	/// <para>tax_base</para></summary>
	public const string tax_base = "tax_base";
	/// <summary><para>Tax Rate %</para>
	/// <para>utc_taxrate</para></summary>
	public const string utc_taxrate = "utc_taxrate";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string timezoneruleversionnumber = "timezoneruleversionnumber";
	/// <summary><para>Unit</para>
	/// <para>uomid</para></summary>
	public const string uomid = "uomid";
	/// <summary><para>Updating Recurring Billing On Create (Hidden)</para>
	/// <para>utc_updatingrecurringbillingoncreate</para></summary>
	public const string utc_updatingrecurringbillingoncreate = "utc_updatingrecurringbillingoncreate";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string utcconversiontimezonecode = "utcconversiontimezonecode";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string versionnumber = "versionnumber";
	/// <summary><para>Volume Discount</para>
	/// <para>volumediscountamount</para></summary>
	public const string volumediscountamount = "volumediscountamount";
	/// <summary><para>Volume Discount (Base)</para>
	/// <para>volumediscountamount_base</para></summary>
	public const string volumediscountamount_base = "volumediscountamount_base";
	/// <summary><para>Work Order</para>
	/// <para>msdyn_workorderid</para></summary>
	public const string msdyn_workorderid = "msdyn_workorderid";
	/// <summary><para>Work Order Product</para>
	/// <para>msdyn_workorderproductid</para></summary>
	public const string msdyn_workorderproductid = "msdyn_workorderproductid";
	/// <summary><para>Work Order Service</para>
	/// <para>msdyn_workorderserviceid</para></summary>
	public const string msdyn_workorderserviceid = "msdyn_workorderserviceid";
	/// <summary><para>Write-In Product</para>
	/// <para>productdescription</para></summary>
	public const string productdescription = "productdescription";
}

    }
}
