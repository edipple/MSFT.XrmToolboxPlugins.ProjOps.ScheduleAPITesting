// <auto-generated />

using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace MSCPS.FieldSericeMigration.Plugins.ProxyClasses
{
    [EntityLogicalNameAttribute("product")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    [DataContract(Name = "Entity", Namespace = "http://schemas.microsoft.com/xrm/2011/Contracts")]
    public partial class product : BaseProxyClass
    {
        public new const string LogicalName = "product";
        public const int ObjectTypeCode = 1024;
        public const string PrimaryIdAttribute = "productid";
        public const string PrimaryNameAttribute = "name";
        public const string PrimaryImageAttribute = "entityimage";
        static product()
        {
            BaseProxyClass.RegisterProxyType(typeof(product), "product");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public product() : base(new Entity("product")) { }
        public product(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<product>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: defaultuomidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("defaultuomidname")]
public string defaultuomidname
{
	get { return this.GetPropertyValue<string>("defaultuomidname"); }
}
///<summary>
///<para>Logical Name: organizationidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("organizationidname")]
public string organizationidname
{
	get { return this.GetPropertyValue<string>("organizationidname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string modifiedonbehalfbyyominame
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: entityimage_timestamp</para>
///</summary>
[AttributeLogicalNameAttribute("entityimage_timestamp")]
public int? entityimage_timestamp
{
	get { return this.GetPropertyValue<int?>("entityimage_timestamp"); }
}
///<summary>
///<para>Logical Name: parentproductidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("parentproductidname")]
public string parentproductidname
{
	get { return this.GetPropertyValue<string>("parentproductidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string modifiedbyyominame
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: createdbyexternalpartyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyexternalpartyyominame")]
public string createdbyexternalpartyyominame
{
	get { return this.GetPropertyValue<string>("createdbyexternalpartyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyexternalpartyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyexternalpartyname")]
public string modifiedbyexternalpartyname
{
	get { return this.GetPropertyValue<string>("modifiedbyexternalpartyname"); }
}
///<summary>
///<para>Logical Name: defaultuomscheduleidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("defaultuomscheduleidname")]
public string defaultuomscheduleidname
{
	get { return this.GetPropertyValue<string>("defaultuomscheduleidname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string createdonbehalfbyyominame
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: utc_countrybusinessunitname</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("utc_countrybusinessunitname")]
public string utc_countrybusinessunitname
{
	get { return this.GetPropertyValue<string>("utc_countrybusinessunitname"); }
}
///<summary>
///<para>Logical Name: utc_productgroupname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("utc_productgroupname")]
public string utc_productgroupname
{
	get { return this.GetPropertyValue<string>("utc_productgroupname"); }
}
///<summary>
///<para>Logical Name: utc_applicableservicename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("utc_applicableservicename")]
public string utc_applicableservicename
{
	get { return this.GetPropertyValue<string>("utc_applicableservicename"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string createdonbehalfbyname
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string createdbyyominame
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyexternalpartyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyexternalpartyyominame")]
public string modifiedbyexternalpartyyominame
{
	get { return this.GetPropertyValue<string>("modifiedbyexternalpartyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_defaultvendoryominame</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_defaultvendoryominame")]
public string msdyn_defaultvendoryominame
{
	get { return this.GetPropertyValue<string>("msdyn_defaultvendoryominame"); }
}
///<summary>
///<para>Logical Name: utc_productclassname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("utc_productclassname")]
public string utc_productclassname
{
	get { return this.GetPropertyValue<string>("utc_productclassname"); }
}
///<summary>
///<para>Logical Name: createdbyexternalpartyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyexternalpartyname")]
public string createdbyexternalpartyname
{
	get { return this.GetPropertyValue<string>("createdbyexternalpartyname"); }
}
///<summary>
///<para>Logical Name: msdyn_defaultvendorname</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_defaultvendorname")]
public string msdyn_defaultvendorname
{
	get { return this.GetPropertyValue<string>("msdyn_defaultvendorname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string modifiedonbehalfbyname
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: subjectidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("subjectidname")]
public string subjectidname
{
	get { return this.GetPropertyValue<string>("subjectidname"); }
}
///<summary>
///<para>Logical Name: pricelevelidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("pricelevelidname")]
public string pricelevelidname
{
	get { return this.GetPropertyValue<string>("pricelevelidname"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string transactioncurrencyidname
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string createdbyname
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: utc_productsubclassname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("utc_productsubclassname")]
public string utc_productsubclassname
{
	get { return this.GetPropertyValue<string>("utc_productsubclassname"); }
}
///<summary>
///<para>Logical Name: entityimage_url</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("entityimage_url")]
public string entityimage_url
{
	get { return this.GetPropertyValue<string>("entityimage_url"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string modifiedbyname
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: utc_accountingreference</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("utc_accountingreference")]
public string utc_accountingreference
{
	get { return this.GetPropertyValue<string>("utc_accountingreference"); }
	set { this.SetPropertyValue("utc_accountingreference", value, 200, "utc_accountingreference"); }
}
///<summary>
///<para>Logical Name: utc_applicableservice</para>
///</summary>
[AttributeLogicalNameAttribute("utc_applicableservice")]
public EntityReference utc_applicableservice
{
	get { return this.GetPropertyValue<EntityReference>("utc_applicableservice"); }
	set { this.SetPropertyValue<EntityReference>("utc_applicableservice", value, "utc_applicableservice"); }
}
/// <summary>
///Logical Name: utc_billperworkordercalculationtype
/// </summary>
[AttributeLogicalNameAttribute("utc_billperworkordercalculationtype")]
public eBillPerWorkOrderCalculationType? utc_billperworkordercalculationtype
{
	get
	{
		if (utc_billperworkordercalculationtype_OptionSetValue != null) { return (eBillPerWorkOrderCalculationType)utc_billperworkordercalculationtype_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.utc_billperworkordercalculationtype_OptionSetValue = new OptionSetValue((int)value); }
		else this.utc_billperworkordercalculationtype_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: utc_billperworkordercalculationtype</para>
///</summary>
[AttributeLogicalNameAttribute("utc_billperworkordercalculationtype")]
public OptionSetValue utc_billperworkordercalculationtype_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("utc_billperworkordercalculationtype"); }
	set { this.SetPropertyValue<OptionSetValue>("utc_billperworkordercalculationtype", value, "utc_billperworkordercalculationtype_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string utc_billperworkordercalculationtype_Text(IOrganizationService Service)
{
	return this.utc_billperworkordercalculationtype_OptionSetValue.GetOptionSetText(Service, this, "utc_billperworkordercalculationtype");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string utc_billperworkordercalculationtype_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.utc_billperworkordercalculationtype_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: utc_brand</para>
///<para>Max Length: 30 characters</para>
///</summary>
[AttributeLogicalNameAttribute("utc_brand")]
public string utc_brand
{
	get { return this.GetPropertyValue<string>("utc_brand"); }
	set { this.SetPropertyValue("utc_brand", value, 30, "utc_brand"); }
}
/// <summary>
///Logical Name: utc_chargetype
/// </summary>
[AttributeLogicalNameAttribute("utc_chargetype")]
public eChargeType? utc_chargetype
{
	get
	{
		if (utc_chargetype_OptionSetValue != null) { return (eChargeType)utc_chargetype_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.utc_chargetype_OptionSetValue = new OptionSetValue((int)value); }
		else this.utc_chargetype_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: utc_chargetype</para>
///</summary>
[AttributeLogicalNameAttribute("utc_chargetype")]
public OptionSetValue utc_chargetype_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("utc_chargetype"); }
	set { this.SetPropertyValue<OptionSetValue>("utc_chargetype", value, "utc_chargetype_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string utc_chargetype_Text(IOrganizationService Service)
{
	return this.utc_chargetype_OptionSetValue.GetOptionSetText(Service, this, "utc_chargetype");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string utc_chargetype_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.utc_chargetype_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: utc_compliancerefundamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? utc_compliancerefundamount
{
	get
	{
		if (utc_compliancerefundamountMoney != null) { return utc_compliancerefundamountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.utc_compliancerefundamountMoney = new Money(value.Value); }
		else this.utc_compliancerefundamountMoney = null;
	}
}
///<summary>
///<para>Logical Name: utc_compliancerefundamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("utc_compliancerefundamount")]
public Money utc_compliancerefundamountMoney
{
	get { return this.GetPropertyValue<Money>("utc_compliancerefundamount"); }
	set { this.SetPropertyValue("utc_compliancerefundamount", (Money)value, (decimal)0, (decimal)922337203685477, "utc_compliancerefundamountMoney"); }
}
///<summary>
///<para>Logical Name: utc_compliancerefundamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? utc_compliancerefundamount_base
{
	get
	{
		if (utc_compliancerefundamount_baseMoney != null) { return utc_compliancerefundamount_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: utc_compliancerefundamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("utc_compliancerefundamount_base")]
public Money utc_compliancerefundamount_baseMoney
{
	get { return this.GetPropertyValue<Money>("utc_compliancerefundamount_base"); }
}
///<summary>
///<para>Logical Name: msdyn_converttocustomerasset</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_converttocustomerasset")]
public bool? msdyn_converttocustomerasset
{
	get { return this.GetPropertyValue<bool?>("msdyn_converttocustomerasset"); }
	set { this.SetPropertyValue<bool?>("msdyn_converttocustomerasset", value, "msdyn_converttocustomerasset"); }
}
///<summary>
///<para>Logical Name: utc_countrybusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("utc_countrybusinessunit")]
public EntityReference utc_countrybusinessunit
{
	get { return this.GetPropertyValue<EntityReference>("utc_countrybusinessunit"); }
	set { this.SetPropertyValue<EntityReference>("utc_countrybusinessunit", value, "utc_countrybusinessunit"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference createdby
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference createdonbehalfby
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdbyexternalparty</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyexternalparty")]
public EntityReference createdbyexternalparty
{
	get { return this.GetPropertyValue<EntityReference>("createdbyexternalparty"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? createdon
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference transactioncurrencyid
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "transactioncurrencyid"); }
}
///<summary>
///<para>Logical Name: currentcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? currentcost
{
	get
	{
		if (currentcostMoney != null) { return currentcostMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.currentcostMoney = new Money(value.Value); }
		else this.currentcostMoney = null;
	}
}
///<summary>
///<para>Logical Name: currentcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("currentcost")]
public Money currentcostMoney
{
	get { return this.GetPropertyValue<Money>("currentcost"); }
	set { this.SetPropertyValue("currentcost", (Money)value, (decimal)0, (decimal)1000000000000, "currentcostMoney"); }
}
///<summary>
///<para>Logical Name: currentcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? currentcost_base
{
	get
	{
		if (currentcost_baseMoney != null) { return currentcost_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: currentcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("currentcost_base")]
public Money currentcost_baseMoney
{
	get { return this.GetPropertyValue<Money>("currentcost_base"); }
}
///<summary>
///<para>Logical Name: quantitydecimal</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 5</para>
///</summary>
[AttributeLogicalNameAttribute("quantitydecimal")]
public int? quantitydecimal
{
	get { return this.GetPropertyValue<int?>("quantitydecimal"); }
	set { this.SetPropertyValue("quantitydecimal", (int?)value, (int)0, (int)5, "quantitydecimal"); }
}
/// <summary>
///Logical Name: utc_defaultautonamecustomerequipment
/// </summary>
[AttributeLogicalNameAttribute("utc_defaultautonamecustomerequipment")]
public eYesOrNo_allowingBlank? utc_defaultautonamecustomerequipment
{
	get
	{
		if (utc_defaultautonamecustomerequipment_OptionSetValue != null) { return (eYesOrNo_allowingBlank)utc_defaultautonamecustomerequipment_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.utc_defaultautonamecustomerequipment_OptionSetValue = new OptionSetValue((int)value); }
		else this.utc_defaultautonamecustomerequipment_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: utc_defaultautonamecustomerequipment</para>
///</summary>
[AttributeLogicalNameAttribute("utc_defaultautonamecustomerequipment")]
public OptionSetValue utc_defaultautonamecustomerequipment_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("utc_defaultautonamecustomerequipment"); }
	set { this.SetPropertyValue<OptionSetValue>("utc_defaultautonamecustomerequipment", value, "utc_defaultautonamecustomerequipment_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string utc_defaultautonamecustomerequipment_Text(IOrganizationService Service)
{
	return this.utc_defaultautonamecustomerequipment_OptionSetValue.GetOptionSetText(Service, this, "utc_defaultautonamecustomerequipment");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string utc_defaultautonamecustomerequipment_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.utc_defaultautonamecustomerequipment_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: pricelevelid</para>
///</summary>
[AttributeLogicalNameAttribute("pricelevelid")]
public EntityReference pricelevelid
{
	get { return this.GetPropertyValue<EntityReference>("pricelevelid"); }
	set { this.SetPropertyValue<EntityReference>("pricelevelid", value, "pricelevelid"); }
}
///<summary>
///<para>Logical Name: defaultuomid</para>
///</summary>
[AttributeLogicalNameAttribute("defaultuomid")]
public EntityReference defaultuomid
{
	get { return this.GetPropertyValue<EntityReference>("defaultuomid"); }
	set { this.SetPropertyValue<EntityReference>("defaultuomid", value, "defaultuomid"); }
}
///<summary>
///<para>Logical Name: msdyn_defaultvendor</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_defaultvendor")]
public EntityReference msdyn_defaultvendor
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_defaultvendor"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_defaultvendor", value, "msdyn_defaultvendor"); }
}
///<summary>
///<para>Logical Name: description</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("description")]
public string description
{
	get { return this.GetPropertyValue<string>("description"); }
	set { this.SetPropertyValue("description", value, 2000, "description"); }
}
///<summary>
///<para>Logical Name: entityimageid</para>
///</summary>
[AttributeLogicalNameAttribute("entityimageid")]
public Guid entityimageid
{
	get { return this.GetPropertyValue<Guid>("entityimageid"); }
}
///<summary>
///<para>Logical Name: utc_equipmentcategory</para>
///<para>Max Length: 32 characters</para>
///</summary>
[AttributeLogicalNameAttribute("utc_equipmentcategory")]
public string utc_equipmentcategory
{
	get { return this.GetPropertyValue<string>("utc_equipmentcategory"); }
	set { this.SetPropertyValue("utc_equipmentcategory", value, 32, "utc_equipmentcategory"); }
}
///<summary>
///<para>Logical Name: utc_equipmentmake</para>
///<para>Max Length: 32 characters</para>
///</summary>
[AttributeLogicalNameAttribute("utc_equipmentmake")]
public string utc_equipmentmake
{
	get { return this.GetPropertyValue<string>("utc_equipmentmake"); }
	set { this.SetPropertyValue("utc_equipmentmake", value, 32, "utc_equipmentmake"); }
}
///<summary>
///<para>Logical Name: utc_equipmentsubcategory</para>
///<para>Max Length: 32 characters</para>
///</summary>
[AttributeLogicalNameAttribute("utc_equipmentsubcategory")]
public string utc_equipmentsubcategory
{
	get { return this.GetPropertyValue<string>("utc_equipmentsubcategory"); }
	set { this.SetPropertyValue("utc_equipmentsubcategory", value, 32, "utc_equipmentsubcategory"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? exchangerate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
/// <summary>
///Logical Name: msdyn_fieldserviceproducttype
/// </summary>
[AttributeLogicalNameAttribute("msdyn_fieldserviceproducttype")]
public eFieldServiceProductType? msdyn_fieldserviceproducttype
{
	get
	{
		if (msdyn_fieldserviceproducttype_OptionSetValue != null) { return (eFieldServiceProductType)msdyn_fieldserviceproducttype_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.msdyn_fieldserviceproducttype_OptionSetValue = new OptionSetValue((int)value); }
		else this.msdyn_fieldserviceproducttype_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_fieldserviceproducttype</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_fieldserviceproducttype")]
public OptionSetValue msdyn_fieldserviceproducttype_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_fieldserviceproducttype"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_fieldserviceproducttype", value, "msdyn_fieldserviceproducttype_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string msdyn_fieldserviceproducttype_Text(IOrganizationService Service)
{
	return this.msdyn_fieldserviceproducttype_OptionSetValue.GetOptionSetText(Service, this, "msdyn_fieldserviceproducttype");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string msdyn_fieldserviceproducttype_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.msdyn_fieldserviceproducttype_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: hierarchypath</para>
///<para>Max Length: 450 characters</para>
///</summary>
[AttributeLogicalNameAttribute("hierarchypath")]
public string hierarchypath
{
	get { return this.GetPropertyValue<string>("hierarchypath"); }
}
///<summary>
///<para>Logical Name: productnumber</para>
///<para>Max Length: 42 characters</para>
///</summary>
[AttributeLogicalNameAttribute("productnumber")]
public string productnumber
{
	get { return this.GetPropertyValue<string>("productnumber"); }
	set { this.SetPropertyValue("productnumber", value, 42, "productnumber"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? importsequencenumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "importsequencenumber"); }
}
///<summary>
///<para>Logical Name: dmtimportstate</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("dmtimportstate")]
public int? dmtimportstate
{
	get { return this.GetPropertyValue<int?>("dmtimportstate"); }
	set { this.SetPropertyValue("dmtimportstate", (int?)value, (int)-2147483648, (int)2147483647, "dmtimportstate"); }
}
///<summary>
///<para>Logical Name: iskit</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("iskit")]
public bool? iskit
{
	get { return this.GetPropertyValue<bool?>("iskit"); }
	set { this.SetPropertyValue<bool?>("iskit", value, "iskit"); }
}
///<summary>
///<para>Logical Name: isreparented</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isreparented")]
public bool? isreparented
{
	get { return this.GetPropertyValue<bool?>("isreparented"); }
	set { this.SetPropertyValue<bool?>("isreparented", value, "isreparented"); }
}
///<summary>
///<para>Logical Name: price</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? price
{
	get
	{
		if (priceMoney != null) { return priceMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.priceMoney = new Money(value.Value); }
		else this.priceMoney = null;
	}
}
///<summary>
///<para>Logical Name: price</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("price")]
public Money priceMoney
{
	get { return this.GetPropertyValue<Money>("price"); }
	set { this.SetPropertyValue("price", (Money)value, (decimal)0, (decimal)1000000000000, "priceMoney"); }
}
///<summary>
///<para>Logical Name: price_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? price_base
{
	get
	{
		if (price_baseMoney != null) { return price_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: price_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("price_base")]
public Money price_baseMoney
{
	get { return this.GetPropertyValue<Money>("price_base"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference modifiedby
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference modifiedonbehalfby
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedbyexternalparty</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyexternalparty")]
public EntityReference modifiedbyexternalparty
{
	get { return this.GetPropertyValue<EntityReference>("modifiedbyexternalparty"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? modifiedon
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: utc_mostused</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("utc_mostused")]
public bool? utc_mostused
{
	get { return this.GetPropertyValue<bool?>("utc_mostused"); }
	set { this.SetPropertyValue<bool?>("utc_mostused", value, "utc_mostused"); }
}
///<summary>
///<para>Logical Name: name</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("name")]
public string name
{
	get { return this.GetPropertyValue<string>("name"); }
	set { this.SetPropertyValue("name", value, 100, "name"); }
}
///<summary>
///<para>Logical Name: organizationid</para>
///</summary>
[AttributeLogicalNameAttribute("organizationid")]
public EntityReference organizationid
{
	get { return this.GetPropertyValue<EntityReference>("organizationid"); }
}
///<summary>
///<para>Logical Name: parentproductid</para>
///</summary>
[AttributeLogicalNameAttribute("parentproductid")]
public EntityReference parentproductid
{
	get { return this.GetPropertyValue<EntityReference>("parentproductid"); }
	set { this.SetPropertyValue<EntityReference>("parentproductid", value, "parentproductid"); }
}
///<summary>
///<para>Logical Name: utc_pressuretestapplicable</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("utc_pressuretestapplicable")]
public bool? utc_pressuretestapplicable
{
	get { return this.GetPropertyValue<bool?>("utc_pressuretestapplicable"); }
	set { this.SetPropertyValue<bool?>("utc_pressuretestapplicable", value, "utc_pressuretestapplicable"); }
}
///<summary>
///<para>Logical Name: utc_printable</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("utc_printable")]
public bool? utc_printable
{
	get { return this.GetPropertyValue<bool?>("utc_printable"); }
	set { this.SetPropertyValue<bool?>("utc_printable", value, "utc_printable"); }
}
///<summary>
///<para>Logical Name: processid</para>
///</summary>
[AttributeLogicalNameAttribute("processid")]
public Guid processid
{
	get { return this.GetPropertyValue<Guid>("processid"); }
	set { this.SetPropertyValue<Guid>("processid", value, "processid"); }
}
///<summary>
///<para>Logical Name: stageid</para>
///</summary>
[AttributeLogicalNameAttribute("stageid")]
public Guid stageid
{
	get { return this.GetPropertyValue<Guid>("stageid"); }
	set { this.SetPropertyValue<Guid>("stageid", value, "stageid"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: productid</para>
///</summary>
[AttributeLogicalNameAttribute("productid")]
public Guid productid
{
	get
	{
		return base.Id;
	}
	set
	{
		base.Id = value;
		base.SetPropertyValue("productid", value, "productid");
	}
}
///<summary>
///<para>Logical Name: utc_productclass</para>
///</summary>
[AttributeLogicalNameAttribute("utc_productclass")]
public EntityReference utc_productclass
{
	get { return this.GetPropertyValue<EntityReference>("utc_productclass"); }
	set { this.SetPropertyValue<EntityReference>("utc_productclass", value, "utc_productclass"); }
}
///<summary>
///<para>Logical Name: utc_productgroup</para>
///</summary>
[AttributeLogicalNameAttribute("utc_productgroup")]
public EntityReference utc_productgroup
{
	get { return this.GetPropertyValue<EntityReference>("utc_productgroup"); }
	set { this.SetPropertyValue<EntityReference>("utc_productgroup", value, "utc_productgroup"); }
}
/// <summary>
///Logical Name: productstructure
/// </summary>
[AttributeLogicalNameAttribute("productstructure")]
public eProductClassification? productstructure
{
	get
	{
		if (productstructure_OptionSetValue != null) { return (eProductClassification)productstructure_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.productstructure_OptionSetValue = new OptionSetValue((int)value); }
		else this.productstructure_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: productstructure</para>
///</summary>
[AttributeLogicalNameAttribute("productstructure")]
public OptionSetValue productstructure_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("productstructure"); }
	set { this.SetPropertyValue<OptionSetValue>("productstructure", value, "productstructure_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string productstructure_Text(IOrganizationService Service)
{
	return this.productstructure_OptionSetValue.GetOptionSetText(Service, this, "productstructure");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string productstructure_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.productstructure_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: utc_productsubclass</para>
///</summary>
[AttributeLogicalNameAttribute("utc_productsubclass")]
public EntityReference utc_productsubclass
{
	get { return this.GetPropertyValue<EntityReference>("utc_productsubclass"); }
	set { this.SetPropertyValue<EntityReference>("utc_productsubclass", value, "utc_productsubclass"); }
}
/// <summary>
///Logical Name: producttypecode
/// </summary>
[AttributeLogicalNameAttribute("producttypecode")]
public eProductType? producttypecode
{
	get
	{
		if (producttypecode_OptionSetValue != null) { return (eProductType)producttypecode_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.producttypecode_OptionSetValue = new OptionSetValue((int)value); }
		else this.producttypecode_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: producttypecode</para>
///</summary>
[AttributeLogicalNameAttribute("producttypecode")]
public OptionSetValue producttypecode_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("producttypecode"); }
	set { this.SetPropertyValue<OptionSetValue>("producttypecode", value, "producttypecode_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string producttypecode_Text(IOrganizationService Service)
{
	return this.producttypecode_OptionSetValue.GetOptionSetText(Service, this, "producttypecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string producttypecode_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.producttypecode_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: utc_prontoequipmentcode</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("utc_prontoequipmentcode")]
public string utc_prontoequipmentcode
{
	get { return this.GetPropertyValue<string>("utc_prontoequipmentcode"); }
	set { this.SetPropertyValue("utc_prontoequipmentcode", value, 100, "utc_prontoequipmentcode"); }
}
///<summary>
///<para>Logical Name: utc_prontoroutinecode</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("utc_prontoroutinecode")]
public string utc_prontoroutinecode
{
	get { return this.GetPropertyValue<string>("utc_prontoroutinecode"); }
	set { this.SetPropertyValue("utc_prontoroutinecode", value, 100, "utc_prontoroutinecode"); }
}
///<summary>
///<para>Logical Name: msdyn_purchasename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_purchasename")]
public string msdyn_purchasename
{
	get { return this.GetPropertyValue<string>("msdyn_purchasename"); }
	set { this.SetPropertyValue("msdyn_purchasename", value, 100, "msdyn_purchasename"); }
}
///<summary>
///<para>Logical Name: quantityonhand</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("quantityonhand")]
public decimal? quantityonhand
{
	get { return this.GetPropertyValue<decimal?>("quantityonhand"); }
	set { this.SetPropertyValue("quantityonhand", (decimal?)value, (decimal)0, (decimal)1000000000, "quantityonhand"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? overriddencreatedon
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "overriddencreatedon"); }
}
///<summary>
///<para>Logical Name: size</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("size")]
public string size
{
	get { return this.GetPropertyValue<string>("size"); }
	set { this.SetPropertyValue("size", value, 200, "size"); }
}
///<summary>
///<para>Logical Name: standardcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? standardcost
{
	get
	{
		if (standardcostMoney != null) { return standardcostMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.standardcostMoney = new Money(value.Value); }
		else this.standardcostMoney = null;
	}
}
///<summary>
///<para>Logical Name: standardcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("standardcost")]
public Money standardcostMoney
{
	get { return this.GetPropertyValue<Money>("standardcost"); }
	set { this.SetPropertyValue("standardcost", (Money)value, (decimal)0, (decimal)1000000000000, "standardcostMoney"); }
}
///<summary>
///<para>Logical Name: standardcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? standardcost_base
{
	get
	{
		if (standardcost_baseMoney != null) { return standardcost_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: standardcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("standardcost_base")]
public Money standardcost_baseMoney
{
	get { return this.GetPropertyValue<Money>("standardcost_base"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? statecode
{
	get
	{
		if (statecode_OptionSetValue != null) { return (eStatus)statecode_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.statecode_OptionSetValue = new OptionSetValue((int)value); }
		else this.statecode_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue statecode_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "statecode_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string statecode_Text(IOrganizationService Service)
{
	return this.statecode_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string statecode_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.statecode_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? statuscode
{
	get
	{
		if (statuscode_OptionSetValue != null) { return (eStatusReason)statuscode_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.statuscode_OptionSetValue = new OptionSetValue((int)value); }
		else this.statuscode_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue statuscode_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "statuscode_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string statuscode_Text(IOrganizationService Service)
{
	return this.statuscode_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string statuscode_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.statuscode_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: isstockitem</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isstockitem")]
public bool? isstockitem
{
	get { return this.GetPropertyValue<bool?>("isstockitem"); }
	set { this.SetPropertyValue<bool?>("isstockitem", value, "isstockitem"); }
}
///<summary>
///<para>Logical Name: stockvolume</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("stockvolume")]
public decimal? stockvolume
{
	get { return this.GetPropertyValue<decimal?>("stockvolume"); }
	set { this.SetPropertyValue("stockvolume", (decimal?)value, (decimal)0, (decimal)1000000000, "stockvolume"); }
}
///<summary>
///<para>Logical Name: stockweight</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("stockweight")]
public decimal? stockweight
{
	get { return this.GetPropertyValue<decimal?>("stockweight"); }
	set { this.SetPropertyValue("stockweight", (decimal?)value, (decimal)0, (decimal)1000000000, "stockweight"); }
}
///<summary>
///<para>Logical Name: subjectid</para>
///</summary>
[AttributeLogicalNameAttribute("subjectid")]
public EntityReference subjectid
{
	get { return this.GetPropertyValue<EntityReference>("subjectid"); }
	set { this.SetPropertyValue<EntityReference>("subjectid", value, "subjectid"); }
}
///<summary>
///<para>Logical Name: suppliername</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("suppliername")]
public string suppliername
{
	get { return this.GetPropertyValue<string>("suppliername"); }
	set { this.SetPropertyValue("suppliername", value, 100, "suppliername"); }
}
///<summary>
///<para>Logical Name: msdyn_taxable</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_taxable")]
public bool? msdyn_taxable
{
	get { return this.GetPropertyValue<bool?>("msdyn_taxable"); }
	set { this.SetPropertyValue<bool?>("msdyn_taxable", value, "msdyn_taxable"); }
}
/// <summary>
///Logical Name: utc_timeofday
/// </summary>
[AttributeLogicalNameAttribute("utc_timeofday")]
public eTimeOfDay? utc_timeofday
{
	get
	{
		if (utc_timeofday_OptionSetValue != null) { return (eTimeOfDay)utc_timeofday_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.utc_timeofday_OptionSetValue = new OptionSetValue((int)value); }
		else this.utc_timeofday_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: utc_timeofday</para>
///</summary>
[AttributeLogicalNameAttribute("utc_timeofday")]
public OptionSetValue utc_timeofday_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("utc_timeofday"); }
	set { this.SetPropertyValue<OptionSetValue>("utc_timeofday", value, "utc_timeofday_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string utc_timeofday_Text(IOrganizationService Service)
{
	return this.utc_timeofday_OptionSetValue.GetOptionSetText(Service, this, "utc_timeofday");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string utc_timeofday_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.utc_timeofday_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? timezoneruleversionnumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "timezoneruleversionnumber"); }
}
///<summary>
///<para>Logical Name: traversedpath</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("traversedpath")]
public string traversedpath
{
	get { return this.GetPropertyValue<string>("traversedpath"); }
	set { this.SetPropertyValue("traversedpath", value, 1250, "traversedpath"); }
}
///<summary>
///<para>Logical Name: defaultuomscheduleid</para>
///</summary>
[AttributeLogicalNameAttribute("defaultuomscheduleid")]
public EntityReference defaultuomscheduleid
{
	get { return this.GetPropertyValue<EntityReference>("defaultuomscheduleid"); }
	set { this.SetPropertyValue<EntityReference>("defaultuomscheduleid", value, "defaultuomscheduleid"); }
}
///<summary>
///<para>Logical Name: msdyn_upccode</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_upccode")]
public string msdyn_upccode
{
	get { return this.GetPropertyValue<string>("msdyn_upccode"); }
	set { this.SetPropertyValue("msdyn_upccode", value, 50, "msdyn_upccode"); }
}
///<summary>
///<para>Logical Name: producturl</para>
///<para>Max Length: 255 characters</para>
///</summary>
[AttributeLogicalNameAttribute("producturl")]
public string producturl
{
	get { return this.GetPropertyValue<string>("producturl"); }
	set { this.SetPropertyValue("producturl", value, 255, "producturl"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? utcconversiontimezonecode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "utcconversiontimezonecode"); }
}
/// <summary>
///Logical Name: utc_utcproducttype
/// </summary>
[AttributeLogicalNameAttribute("utc_utcproducttype")]
public eUTCProductType? utc_utcproducttype
{
	get
	{
		if (utc_utcproducttype_OptionSetValue != null) { return (eUTCProductType)utc_utcproducttype_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.utc_utcproducttype_OptionSetValue = new OptionSetValue((int)value); }
		else this.utc_utcproducttype_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: utc_utcproducttype</para>
///</summary>
[AttributeLogicalNameAttribute("utc_utcproducttype")]
public OptionSetValue utc_utcproducttype_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("utc_utcproducttype"); }
	set { this.SetPropertyValue<OptionSetValue>("utc_utcproducttype", value, "utc_utcproducttype_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string utc_utcproducttype_Text(IOrganizationService Service)
{
	return this.utc_utcproducttype_OptionSetValue.GetOptionSetText(Service, this, "utc_utcproducttype");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string utc_utcproducttype_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.utc_utcproducttype_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: validfromdate</para>
///</summary>
[AttributeLogicalNameAttribute("validfromdate")]
public DateTime? validfromdate
{
	get { return this.GetPropertyValue<DateTime?>("validfromdate"); }
	set { this.SetPropertyValue<DateTime?>("validfromdate", value, "validfromdate"); }
}
///<summary>
///<para>Logical Name: validtodate</para>
///</summary>
[AttributeLogicalNameAttribute("validtodate")]
public DateTime? validtodate
{
	get { return this.GetPropertyValue<DateTime?>("validtodate"); }
	set { this.SetPropertyValue<DateTime?>("validtodate", value, "validtodate"); }
}
///<summary>
///<para>Logical Name: vendorname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("vendorname")]
public string vendorname
{
	get { return this.GetPropertyValue<string>("vendorname"); }
	set { this.SetPropertyValue("vendorname", value, 100, "vendorname"); }
}
///<summary>
///<para>Logical Name: vendorid</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("vendorid")]
public string vendorid
{
	get { return this.GetPropertyValue<string>("vendorid"); }
	set { this.SetPropertyValue("vendorid", value, 100, "vendorid"); }
}
///<summary>
///<para>Logical Name: vendorpartnumber</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("vendorpartnumber")]
public string vendorpartnumber
{
	get { return this.GetPropertyValue<string>("vendorpartnumber"); }
	set { this.SetPropertyValue("vendorpartnumber", value, 100, "vendorpartnumber"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? versionnumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}


        /// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Product_Annotation</para>
/// </summary>
public List<Entity> Product_Annotation (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Product_Annotation</para>
/// </summary>
public List<Entity> Product_Annotation (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Product_AsyncOperations</para>
/// </summary>
public List<Entity> Product_AsyncOperations (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Product_AsyncOperations</para>
/// </summary>
public List<Entity> Product_AsyncOperations (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Product_BulkDeleteFailures</para>
/// </summary>
public List<Entity> Product_BulkDeleteFailures (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Product_BulkDeleteFailures</para>
/// </summary>
public List<Entity> Product_BulkDeleteFailures (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: product_connections1</para>
/// </summary>
public List<Entity> product_connections1 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: product_connections1</para>
/// </summary>
public List<Entity> product_connections1 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: product_connections2</para>
/// </summary>
public List<Entity> product_connections2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: product_connections2</para>
/// </summary>
public List<Entity> product_connections2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: product_contract_line_items</para>
/// </summary>
public List<Entity> product_contract_line_items (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "contractdetail", "productid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: product_contract_line_items</para>
/// </summary>
public List<Entity> product_contract_line_items (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "contractdetail", "productid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Product_DynamicProperty</para>
/// </summary>
public List<Entity> Product_DynamicProperty (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "dynamicproperty", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Product_DynamicProperty</para>
/// </summary>
public List<Entity> Product_DynamicProperty (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "dynamicproperty", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Product_DynamicPropertyAssociation</para>
/// </summary>
public List<Entity> Product_DynamicPropertyAssociation (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "dynamicpropertyassociation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Product_DynamicPropertyAssociation</para>
/// </summary>
public List<Entity> Product_DynamicPropertyAssociation (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "dynamicpropertyassociation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: product_incidents</para>
/// </summary>
public List<Entity> product_incidents (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incident", "productid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: product_incidents</para>
/// </summary>
public List<Entity> product_incidents (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incident", "productid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: utc_product_incident_EquipmentType</para>
/// </summary>
public List<Entity> utc_product_incident_EquipmentType (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incident", "utc_equipmenttype", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: utc_product_incident_EquipmentType</para>
/// </summary>
public List<Entity> utc_product_incident_EquipmentType (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incident", "utc_equipmenttype", Columns); }
/// <summary>
/// <para><b>invoicedetail (Existing Product)</b></para>
/// <para>Schema Name: product_invoice_details</para>
/// </summary>
public List<invoicedetail> product_invoice_details (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<invoicedetail>(Service, this.Id, "invoicedetail", "productid", Columns); }
/// <summary>
/// <para><b>invoicedetail (Existing Product)</b></para>
/// <para>Schema Name: product_invoice_details</para>
/// </summary>
public List<invoicedetail> product_invoice_details (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<invoicedetail>(Service, this.Id, "invoicedetail", "productid", Columns); }
/// <summary>
/// <para><b>invoicedetail (Source Existing Product)</b></para>
/// <para>Schema Name: utc_product_invoicedetail_SourceExistingProduct</para>
/// </summary>
public List<invoicedetail> utc_product_invoicedetail_SourceExistingProduct (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<invoicedetail>(Service, this.Id, "invoicedetail", "utc_sourceexistingproduct", Columns); }
/// <summary>
/// <para><b>invoicedetail (Source Existing Product)</b></para>
/// <para>Schema Name: utc_product_invoicedetail_SourceExistingProduct</para>
/// </summary>
public List<invoicedetail> utc_product_invoicedetail_SourceExistingProduct (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<invoicedetail>(Service, this.Id, "invoicedetail", "utc_sourceexistingproduct", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: product_MailboxTrackingFolders</para>
/// </summary>
public List<Entity> product_MailboxTrackingFolders (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: product_MailboxTrackingFolders</para>
/// </summary>
public List<Entity> product_MailboxTrackingFolders (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_actual_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_actual_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_actual", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_actual_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_actual_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_actual", "msdyn_product", Columns); }
/// <summary>
/// <para>Product</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_agreementbookingproduct_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_agreementbookingproduct_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_agreementbookingproduct", "msdyn_product", Columns); }
/// <summary>
/// <para>Product</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_agreementbookingproduct_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_agreementbookingproduct_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_agreementbookingproduct", "msdyn_product", Columns); }
/// <summary>
/// <para>Service</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_agreementbookingservice_Service</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_agreementbookingservice_Service (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_agreementbookingservice", "msdyn_service", Columns); }
/// <summary>
/// <para>Service</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_agreementbookingservice_Service</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_agreementbookingservice_Service (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_agreementbookingservice", "msdyn_service", Columns); }
/// <summary>
/// <para>Product</para>
/// <para><b>msdyn_agreementinvoiceproduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_agreementinvoiceproduct_Product</para>
/// </summary>
public List<msdyn_agreementinvoiceproduct> msdyn_product_msdyn_agreementinvoiceproduct_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<msdyn_agreementinvoiceproduct>(Service, this.Id, "msdyn_agreementinvoiceproduct", "msdyn_product", Columns); }
/// <summary>
/// <para>Product</para>
/// <para><b>msdyn_agreementinvoiceproduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_agreementinvoiceproduct_Product</para>
/// </summary>
public List<msdyn_agreementinvoiceproduct> msdyn_product_msdyn_agreementinvoiceproduct_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<msdyn_agreementinvoiceproduct>(Service, this.Id, "msdyn_agreementinvoiceproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_customerasset_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_customerasset_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_customerasset", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_customerasset_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_customerasset_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_customerasset", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_fieldservicepricelistitem_ProductService</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_fieldservicepricelistitem_ProductService (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_fieldservicepricelistitem", "msdyn_productservice", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_fieldservicepricelistitem_ProductService</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_fieldservicepricelistitem_ProductService (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_fieldservicepricelistitem", "msdyn_productservice", Columns); }
/// <summary>
/// <para>Travel Charge Item</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_fieldservicesetting</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_fieldservicesetting (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_fieldservicesetting", "msdyn_travelchargeitemid", Columns); }
/// <summary>
/// <para>Travel Charge Item</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_fieldservicesetting</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_fieldservicesetting (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_fieldservicesetting", "msdyn_travelchargeitemid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_incidenttypeproduct_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_incidenttypeproduct_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_incidenttypeproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_incidenttypeproduct_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_incidenttypeproduct_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_incidenttypeproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_incidenttypeservice_Service</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_incidenttypeservice_Service (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_incidenttypeservice", "msdyn_service", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_incidenttypeservice_Service</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_incidenttypeservice_Service (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_incidenttypeservice", "msdyn_service", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_inventoryadjustmentproduct_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_inventoryadjustmentproduct_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_inventoryadjustmentproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_inventoryadjustmentproduct_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_inventoryadjustmentproduct_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_inventoryadjustmentproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_inventoryjournal_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_inventoryjournal_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_inventoryjournal", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_inventoryjournal_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_inventoryjournal_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_inventoryjournal", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_orderinvoicingproduct_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_orderinvoicingproduct_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_orderinvoicingproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_orderinvoicingproduct_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_orderinvoicingproduct_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_orderinvoicingproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_productinventory_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_productinventory_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_productinventory", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_productinventory_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_productinventory_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_productinventory", "msdyn_product", Columns); }
/// <summary>
/// <para>Product</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_purchaseorderproduct_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_purchaseorderproduct_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_purchaseorderproduct", "msdyn_product", Columns); }
/// <summary>
/// <para>Product</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_purchaseorderproduct_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_purchaseorderproduct_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_purchaseorderproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_quotebookingproduct_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_quotebookingproduct_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_quotebookingproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_quotebookingproduct_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_quotebookingproduct_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_quotebookingproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_quotebookingservice_Service</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_quotebookingservice_Service (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_quotebookingservice", "msdyn_service", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_quotebookingservice_Service</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_quotebookingservice_Service (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_quotebookingservice", "msdyn_service", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_quoteinvoicingproduct_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_quoteinvoicingproduct_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_quoteinvoicingproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_quoteinvoicingproduct_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_quoteinvoicingproduct_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_quoteinvoicingproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_rmaproduct_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_rmaproduct_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_rmaproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_rmaproduct_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_rmaproduct_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_rmaproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_rtvproduct_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_rtvproduct_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_rtvproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_product_msdyn_rtvproduct_Product</para>
/// </summary>
public List<Entity> msdyn_product_msdyn_rtvproduct_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_rtvproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>msdyn_workorderproduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_workorderproduct_Product</para>
/// </summary>
public List<msdyn_workorderproduct> msdyn_product_msdyn_workorderproduct_Product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<msdyn_workorderproduct>(Service, this.Id, "msdyn_workorderproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>msdyn_workorderproduct (Product)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_workorderproduct_Product</para>
/// </summary>
public List<msdyn_workorderproduct> msdyn_product_msdyn_workorderproduct_Product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<msdyn_workorderproduct>(Service, this.Id, "msdyn_workorderproduct", "msdyn_product", Columns); }
/// <summary>
/// <para><b>msdyn_workorderservice (Service)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_workorderservice_Service</para>
/// </summary>
public List<msdyn_workorderservice> msdyn_product_msdyn_workorderservice_Service (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<msdyn_workorderservice>(Service, this.Id, "msdyn_workorderservice", "msdyn_service", Columns); }
/// <summary>
/// <para><b>msdyn_workorderservice (Service)</b></para>
/// <para>Schema Name: msdyn_product_msdyn_workorderservice_Service</para>
/// </summary>
public List<msdyn_workorderservice> msdyn_product_msdyn_workorderservice_Service (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<msdyn_workorderservice>(Service, this.Id, "msdyn_workorderservice", "msdyn_service", Columns); }
/// <summary>
/// <para><b>Entity (Equipment Product)</b></para>
/// <para>Schema Name: utc_product_msdyn_workorderservicetask_EquipmentProduct</para>
/// </summary>
public List<Entity> utc_product_msdyn_workorderservicetask_EquipmentProduct (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_workorderservicetask", "utc_equipmentproduct", Columns); }
/// <summary>
/// <para><b>Entity (Equipment Product)</b></para>
/// <para>Schema Name: utc_product_msdyn_workorderservicetask_EquipmentProduct</para>
/// </summary>
public List<Entity> utc_product_msdyn_workorderservicetask_EquipmentProduct (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_workorderservicetask", "utc_equipmentproduct", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: opportunity_products</para>
/// </summary>
public List<Entity> opportunity_products (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunityproduct", "productid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: opportunity_products</para>
/// </summary>
public List<Entity> opportunity_products (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunityproduct", "productid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: product_principalobjectattributeaccess</para>
/// </summary>
public List<Entity> product_principalobjectattributeaccess (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: product_principalobjectattributeaccess</para>
/// </summary>
public List<Entity> product_principalobjectattributeaccess (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Product_ProcessSessions</para>
/// </summary>
public List<Entity> Product_ProcessSessions (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Product_ProcessSessions</para>
/// </summary>
public List<Entity> Product_ProcessSessions (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>product (Parent)</b></para>
/// <para>Schema Name: product_parent_product</para>
/// </summary>
public List<product> product_parent_product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<product>(Service, this.Id, "product", "parentproductid", Columns); }
/// <summary>
/// <para><b>product (Parent)</b></para>
/// <para>Schema Name: product_parent_product</para>
/// </summary>
public List<product> product_parent_product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<product>(Service, this.Id, "product", "parentproductid", Columns); }
/// <summary>
/// <para><b>product (Applicable Service)</b></para>
/// <para>Schema Name: utc_product_product_ApplicableService</para>
/// </summary>
public List<product> utc_product_product_ApplicableService (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<product>(Service, this.Id, "product", "utc_applicableservice", Columns); }
/// <summary>
/// <para><b>product (Applicable Service)</b></para>
/// <para>Schema Name: utc_product_product_ApplicableService</para>
/// </summary>
public List<product> utc_product_product_ApplicableService (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<product>(Service, this.Id, "product", "utc_applicableservice", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Product_ProductAssociation_AssocProd</para>
/// </summary>
public List<Entity> Product_ProductAssociation_AssocProd (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "productassociation", "associatedproduct", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Product_ProductAssociation_AssocProd</para>
/// </summary>
public List<Entity> Product_ProductAssociation_AssocProd (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "productassociation", "associatedproduct", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Product_ProductAssociation_Prod</para>
/// </summary>
public List<Entity> Product_ProductAssociation_Prod (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "productassociation", "productid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Product_ProductAssociation_Prod</para>
/// </summary>
public List<Entity> Product_ProductAssociation_Prod (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "productassociation", "productid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: product_price_levels</para>
/// </summary>
public List<Entity> product_price_levels (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "productpricelevel", "productid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: product_price_levels</para>
/// </summary>
public List<Entity> product_price_levels (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "productpricelevel", "productid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: product_ProductSubstitute_productid</para>
/// </summary>
public List<Entity> product_ProductSubstitute_productid (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "productsubstitute", "productid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: product_ProductSubstitute_productid</para>
/// </summary>
public List<Entity> product_ProductSubstitute_productid (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "productsubstitute", "productid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: product_ProductSubstitute_substitutedproductid</para>
/// </summary>
public List<Entity> product_ProductSubstitute_substitutedproductid (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "productsubstitute", "substitutedproductid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: product_ProductSubstitute_substitutedproductid</para>
/// </summary>
public List<Entity> product_ProductSubstitute_substitutedproductid (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "productsubstitute", "substitutedproductid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: product_quote_details</para>
/// </summary>
public List<Entity> product_quote_details (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "quotedetail", "productid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: product_quote_details</para>
/// </summary>
public List<Entity> product_quote_details (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "quotedetail", "productid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: product_order_details</para>
/// </summary>
public List<Entity> product_order_details (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "salesorderdetail", "productid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: product_order_details</para>
/// </summary>
public List<Entity> product_order_details (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "salesorderdetail", "productid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Product_SharepointDocument</para>
/// </summary>
public List<Entity> Product_SharepointDocument (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "sharepointdocument", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Product_SharepointDocument</para>
/// </summary>
public List<Entity> Product_SharepointDocument (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "sharepointdocument", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Product_SharepointDocumentLocation</para>
/// </summary>
public List<Entity> Product_SharepointDocumentLocation (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Product_SharepointDocumentLocation</para>
/// </summary>
public List<Entity> Product_SharepointDocumentLocation (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Product_SyncErrors</para>
/// </summary>
public List<Entity> Product_SyncErrors (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Product_SyncErrors</para>
/// </summary>
public List<Entity> Product_SyncErrors (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: userentityinstancedata_product</para>
/// </summary>
public List<Entity> userentityinstancedata_product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: userentityinstancedata_product</para>
/// </summary>
public List<Entity> userentityinstancedata_product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: utc_product_utc_equipmentserviceroutine_ApplicableService</para>
/// </summary>
public List<Entity> utc_product_utc_equipmentserviceroutine_ApplicableService (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_equipmentserviceroutine", "utc_applicableservice", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: utc_product_utc_equipmentserviceroutine_ApplicableService</para>
/// </summary>
public List<Entity> utc_product_utc_equipmentserviceroutine_ApplicableService (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_equipmentserviceroutine", "utc_applicableservice", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: utc_product_utc_partsrequired_PartRequired</para>
/// </summary>
public List<Entity> utc_product_utc_partsrequired_PartRequired (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_partsrequired", "utc_partrequired", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: utc_product_utc_partsrequired_PartRequired</para>
/// </summary>
public List<Entity> utc_product_utc_partsrequired_PartRequired (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_partsrequired", "utc_partrequired", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: utc_product_utc_productserviceroutine_ApplicableService</para>
/// </summary>
public List<Entity> utc_product_utc_productserviceroutine_ApplicableService (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_productserviceroutine", "utc_applicableservice", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: utc_product_utc_productserviceroutine_ApplicableService</para>
/// </summary>
public List<Entity> utc_product_utc_productserviceroutine_ApplicableService (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_productserviceroutine", "utc_applicableservice", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: utc_product_utc_productserviceroutine_productservicelookup</para>
/// </summary>
public List<Entity> utc_product_utc_productserviceroutine_productservicelookup (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_productserviceroutine", "utc_productservicelookup", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: utc_product_utc_productserviceroutine_productservicelookup</para>
/// </summary>
public List<Entity> utc_product_utc_productserviceroutine_productservicelookup (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_productserviceroutine", "utc_productservicelookup", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: utc_product_utc_productworkordertype_ApplicableProduct</para>
/// </summary>
public List<Entity> utc_product_utc_productworkordertype_ApplicableProduct (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_productworkordertype", "utc_applicableproduct", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: utc_product_utc_productworkordertype_ApplicableProduct</para>
/// </summary>
public List<Entity> utc_product_utc_productworkordertype_ApplicableProduct (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_productworkordertype", "utc_applicableproduct", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: utc_product_utc_relatedproduct_PrimaryProduct</para>
/// </summary>
public List<Entity> utc_product_utc_relatedproduct_PrimaryProduct (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_relatedproduct", "utc_primaryproduct", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: utc_product_utc_relatedproduct_PrimaryProduct</para>
/// </summary>
public List<Entity> utc_product_utc_relatedproduct_PrimaryProduct (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_relatedproduct", "utc_primaryproduct", Columns); }
/// <summary>
/// <para>Primary Products</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: utc_product_utc_relatedproduct_RelatedProduct</para>
/// </summary>
public List<Entity> utc_product_utc_relatedproduct_RelatedProduct (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_relatedproduct", "utc_relatedproduct", Columns); }
/// <summary>
/// <para>Primary Products</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: utc_product_utc_relatedproduct_RelatedProduct</para>
/// </summary>
public List<Entity> utc_product_utc_relatedproduct_RelatedProduct (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_relatedproduct", "utc_relatedproduct", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: utc_product_utc_workordertypeservice_AfterHoursService</para>
/// </summary>
public List<Entity> utc_product_utc_workordertypeservice_AfterHoursService (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_workordertypeservice", "utc_afterhoursservice", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: utc_product_utc_workordertypeservice_AfterHoursService</para>
/// </summary>
public List<Entity> utc_product_utc_workordertypeservice_AfterHoursService (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_workordertypeservice", "utc_afterhoursservice", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: utc_product_utc_workordertypeservice_StandardHoursService</para>
/// </summary>
public List<Entity> utc_product_utc_workordertypeservice_StandardHoursService (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_workordertypeservice", "utc_standardhoursservice", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: utc_product_utc_workordertypeservice_StandardHoursService</para>
/// </summary>
public List<Entity> utc_product_utc_workordertypeservice_StandardHoursService (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_workordertypeservice", "utc_standardhoursservice", Columns); }


        /// <summary>
/// <para>Related Entity: <b>Campaign</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: campaignproduct_association</para>
/// </summary>
public List<Entity> Getcampaignproduct_association (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "product", "productid", "campaign", "campaignid", "campaignitem", "entityid", "campaignid", Columns); }
public List<Entity> Getcampaignproduct_association (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "product", "productid", "campaign", "campaignid", "campaignitem", "entityid", "campaignid", Columns); }
public void Relatecampaignproduct_association (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "campaignproduct_association", Items); }
public void Relatecampaignproduct_association (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "campaignproduct_association", Items); }
public void UnRelatecampaignproduct_association (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "campaignproduct_association", Items); }
public void UnRelatecampaignproduct_association (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "campaignproduct_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Competitor</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: competitorproduct_association</para>
/// </summary>
public List<Entity> Getcompetitorproduct_association (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "product", "productid", "competitor", "competitorid", "competitorproduct", "productid", "competitorid", Columns); }
public List<Entity> Getcompetitorproduct_association (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "product", "productid", "competitor", "competitorid", "competitorproduct", "productid", "competitorid", Columns); }
public void Relatecompetitorproduct_association (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "competitorproduct_association", Items); }
public void Relatecompetitorproduct_association (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "competitorproduct_association", Items); }
public void UnRelatecompetitorproduct_association (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "competitorproduct_association", Items); }
public void UnRelatecompetitorproduct_association (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "competitorproduct_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Lead</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: leadproduct_association</para>
/// </summary>
public List<Entity> Getleadproduct_association (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "product", "productid", "lead", "leadid", "leadproduct", "productid", "leadid", Columns); }
public List<Entity> Getleadproduct_association (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "product", "productid", "lead", "leadid", "leadproduct", "productid", "leadid", Columns); }
public void Relateleadproduct_association (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "leadproduct_association", Items); }
public void Relateleadproduct_association (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "leadproduct_association", Items); }
public void UnRelateleadproduct_association (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "leadproduct_association", Items); }
public void UnRelateleadproduct_association (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "leadproduct_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Work Order Type</b></para>
/// <para>Restricted Work Order Types</para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: utc_product_f1_workordertype</para>
/// </summary>
public List<Entity> Getutc_product_f1_workordertype (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "product", "productid", "msdyn_workordertype", "msdyn_workordertypeid", "utc_product_f1_workordertype", "productid", "msdyn_workordertypeid", Columns); }
public List<Entity> Getutc_product_f1_workordertype (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "product", "productid", "msdyn_workordertype", "msdyn_workordertypeid", "utc_product_f1_workordertype", "productid", "msdyn_workordertypeid", Columns); }
public void Relateutc_product_f1_workordertype (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "utc_product_f1_workordertype", Items); }
public void Relateutc_product_f1_workordertype (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "utc_product_f1_workordertype", Items); }
public void UnRelateutc_product_f1_workordertype (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "utc_product_f1_workordertype", Items); }
public void UnRelateutc_product_f1_workordertype (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "utc_product_f1_workordertype", Items); }
/// <summary>
/// <para>Related Entity: <b>Entitlement</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: product_entitlement_association</para>
/// </summary>
public List<Entity> Getproduct_entitlement_association (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "product", "productid", "entitlement", "entitlementid", "entitlementproducts", "productid", "entitlementid", Columns); }
public List<Entity> Getproduct_entitlement_association (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "product", "productid", "entitlement", "entitlementid", "entitlementproducts", "productid", "entitlementid", Columns); }
public void Relateproduct_entitlement_association (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "product_entitlement_association", Items); }
public void Relateproduct_entitlement_association (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "product_entitlement_association", Items); }
public void UnRelateproduct_entitlement_association (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "product_entitlement_association", Items); }
public void UnRelateproduct_entitlement_association (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "product_entitlement_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Entitlement Template</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: product_entitlementtemplate_association</para>
/// </summary>
public List<Entity> Getproduct_entitlementtemplate_association (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "product", "productid", "entitlementtemplate", "entitlementtemplateid", "entitlementtemplateproducts", "productid", "entitlementtemplateid", Columns); }
public List<Entity> Getproduct_entitlementtemplate_association (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "product", "productid", "entitlementtemplate", "entitlementtemplateid", "entitlementtemplateproducts", "productid", "entitlementtemplateid", Columns); }
public void Relateproduct_entitlementtemplate_association (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "product_entitlementtemplate_association", Items); }
public void Relateproduct_entitlementtemplate_association (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "product_entitlementtemplate_association", Items); }
public void UnRelateproduct_entitlementtemplate_association (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "product_entitlementtemplate_association", Items); }
public void UnRelateproduct_entitlementtemplate_association (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "product_entitlementtemplate_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Sales Literature</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: productsalesliterature_association</para>
/// </summary>
public List<Entity> Getproductsalesliterature_association (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "product", "productid", "salesliterature", "salesliteratureid", "productsalesliterature", "productid", "salesliteratureid", Columns); }
public List<Entity> Getproductsalesliterature_association (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "product", "productid", "salesliterature", "salesliteratureid", "productsalesliterature", "productid", "salesliteratureid", Columns); }
public void Relateproductsalesliterature_association (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "productsalesliterature_association", Items); }
public void Relateproductsalesliterature_association (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "productsalesliterature_association", Items); }
public void UnRelateproductsalesliterature_association (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "productsalesliterature_association", Items); }
public void UnRelateproductsalesliterature_association (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "productsalesliterature_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Form Requirement</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: utc_utc_formrequirement_product</para>
/// </summary>
public List<Entity> Getutc_utc_formrequirement_product (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "product", "productid", "utc_formrequirement", "utc_formrequirementid", "utc_utc_formrequirement_product", "productid", "utc_formrequirementid", Columns); }
public List<Entity> Getutc_utc_formrequirement_product (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "product", "productid", "utc_formrequirement", "utc_formrequirementid", "utc_utc_formrequirement_product", "productid", "utc_formrequirementid", Columns); }
public void Relateutc_utc_formrequirement_product (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "utc_utc_formrequirement_product", Items); }
public void Relateutc_utc_formrequirement_product (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "utc_utc_formrequirement_product", Items); }
public void UnRelateutc_utc_formrequirement_product (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "utc_utc_formrequirement_product", Items); }
public void UnRelateutc_utc_formrequirement_product (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "utc_utc_formrequirement_product", Items); }


        

        public enum eBillPerWorkOrderCalculationType
{
	///<summary><para>Include as Equipment</para>
	///<para>Value = 959600000</para></summary>
	[Description("Include as Equipment")]
	IncludeAsEquipment = 959600000, 
	///<summary><para>Include as Other Charge</para>
	///<para>Value = 959600001</para></summary>
	[Description("Include as Other Charge")]
	IncludeAsOtherCharge = 959600001, 
	///<summary><para>Include as Site Fee</para>
	///<para>Value = 959600002</para></summary>
	[Description("Include as Site Fee")]
	IncludeAsSiteFee = 959600002
}
public enum eChargeType
{
	///<summary><para>Labour</para>
	///<para>Value = 959600000</para></summary>
	[Description("Labour")]
	Labour = 959600000, 
	///<summary><para>Material</para>
	///<para>Value = 959600001</para></summary>
	[Description("Material")]
	Material = 959600001, 
	///<summary><para>Travel</para>
	///<para>Value = 959600003</para></summary>
	[Description("Travel")]
	Travel = 959600003, 
	///<summary><para>Fixed- Quoted</para>
	///<para>Value = 959600004</para></summary>
	[Description("Fixed- Quoted")]
	Fixed_Quoted = 959600004, 
	///<summary><para>N/A</para>
	///<para>Value = 959600002</para></summary>
	[Description("N/A")]
	N_A = 959600002
}
public enum eYesOrNo_allowingBlank
{
	///<summary><para>Yes</para>
	///<para>Value = 959600000</para></summary>
	[Description("Yes")]
	Yes = 959600000, 
	///<summary><para>No</para>
	///<para>Value = 959600001</para></summary>
	[Description("No")]
	No = 959600001
}
public enum eFieldServiceProductType
{
	///<summary><para>Inventory</para>
	///<para>Value = 690970000</para></summary>
	[Description("Inventory")]
	Inventory = 690970000, 
	///<summary><para>Non-Inventory</para>
	///<para>Value = 690970001</para></summary>
	[Description("Non-Inventory")]
	Non_Inventory = 690970001, 
	///<summary><para>Service</para>
	///<para>Value = 690970002</para></summary>
	[Description("Service")]
	Service = 690970002
}
public enum eProductClassification
{
	///<summary><para>Product</para>
	///<para>Value = 1</para></summary>
	[Description("Product")]
	Product = 1, 
	///<summary><para>Product Family</para>
	///<para>Value = 2</para></summary>
	[Description("Product Family")]
	ProductFamily = 2, 
	///<summary><para>Product Bundle</para>
	///<para>Value = 3</para></summary>
	[Description("Product Bundle")]
	ProductBundle = 3
}
public enum eProductType
{
	///<summary><para>Sales Inventory</para>
	///<para>Value = 1</para></summary>
	[Description("Sales Inventory")]
	SalesInventory = 1, 
	///<summary><para>Miscellaneous Charges</para>
	///<para>Value = 2</para></summary>
	[Description("Miscellaneous Charges")]
	MiscellaneousCharges = 2, 
	///<summary><para>Services</para>
	///<para>Value = 3</para></summary>
	[Description("Services")]
	Services = 3, 
	///<summary><para>Flat Fees</para>
	///<para>Value = 4</para></summary>
	[Description("Flat Fees")]
	FlatFees = 4
}
public enum eStatus
{
	///<summary><para>Active</para>
	///<para>Value = 0</para></summary>
	[Description("Active")]
	Active = 0, 
	///<summary><para>Retired</para>
	///<para>Value = 1</para></summary>
	[Description("Retired")]
	Retired = 1, 
	///<summary><para>Draft</para>
	///<para>Value = 2</para></summary>
	[Description("Draft")]
	Draft = 2, 
	///<summary><para>Under Revision</para>
	///<para>Value = 3</para></summary>
	[Description("Under Revision")]
	UnderRevision = 3
}
public enum eStatusReason
{
	///<summary><para>Active</para>
	///<para>Value = 1</para></summary>
	[Description("Active")]
	Active_Active = 1, 
	///<summary><para>Retired</para>
	///<para>Value = 2</para></summary>
	[Description("Retired")]
	Retired_Retired = 2, 
	///<summary><para>Draft</para>
	///<para>Value = 0</para></summary>
	[Description("Draft")]
	Draft_Draft = 0, 
	///<summary><para>Under Revision</para>
	///<para>Value = 3</para></summary>
	[Description("Under Revision")]
	UnderRevision_UnderRevision = 3
}
public enum eTimeOfDay
{
	///<summary><para>Standard Hours</para>
	///<para>Value = 959600000</para></summary>
	[Description("Standard Hours")]
	StandardHours = 959600000, 
	///<summary><para>After Hours</para>
	///<para>Value = 959600001</para></summary>
	[Description("After Hours")]
	AfterHours = 959600001
}
public enum eUTCProductType
{
	///<summary><para>Stock Code</para>
	///<para>Value = 959600000</para></summary>
	[Description("Stock Code")]
	StockCode = 959600000, 
	///<summary><para>Labor Code</para>
	///<para>Value = 959600001</para></summary>
	[Description("Labor Code")]
	LaborCode = 959600001, 
	///<summary><para>Equipment Code</para>
	///<para>Value = 959600002</para></summary>
	[Description("Equipment Code")]
	EquipmentCode = 959600002, 
	///<summary><para>Service Routine Charge</para>
	///<para>Value = 959600003</para></summary>
	[Description("Service Routine Charge")]
	ServiceRoutineCharge = 959600003, 
	///<summary><para>Recurring Billing Charge</para>
	///<para>Value = 959600004</para></summary>
	[Description("Recurring Billing Charge")]
	RecurringBillingCharge = 959600004, 
	///<summary><para>Quoted Price</para>
	///<para>Value = 959600007</para></summary>
	[Description("Quoted Price")]
	QuotedPrice = 959600007, 
	///<summary><para>Travel Charge</para>
	///<para>Value = 959600005</para></summary>
	[Description("Travel Charge")]
	TravelCharge = 959600005, 
	///<summary><para>Special Product</para>
	///<para>Value = 959600006</para></summary>
	[Description("Special Product")]
	SpecialProduct = 959600006
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>defaultuomidname</para>
	/// <para>defaultuomidname</para></summary>
	public const string defaultuomidname = "defaultuomidname";
	/// <summary><para>organizationidname</para>
	/// <para>organizationidname</para></summary>
	public const string organizationidname = "organizationidname";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
	/// <summary><para>entityimage_timestamp</para>
	/// <para>entityimage_timestamp</para></summary>
	public const string entityimage_timestamp = "entityimage_timestamp";
	/// <summary><para>parentproductidname</para>
	/// <para>parentproductidname</para></summary>
	public const string parentproductidname = "parentproductidname";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string modifiedbyyominame = "modifiedbyyominame";
	/// <summary><para>createdbyexternalpartyyominame</para>
	/// <para>createdbyexternalpartyyominame</para></summary>
	public const string createdbyexternalpartyyominame = "createdbyexternalpartyyominame";
	/// <summary><para>modifiedbyexternalpartyname</para>
	/// <para>modifiedbyexternalpartyname</para></summary>
	public const string modifiedbyexternalpartyname = "modifiedbyexternalpartyname";
	/// <summary><para>defaultuomscheduleidname</para>
	/// <para>defaultuomscheduleidname</para></summary>
	public const string defaultuomscheduleidname = "defaultuomscheduleidname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
	/// <summary><para>utc_countrybusinessunitname</para>
	/// <para>utc_countrybusinessunitname</para></summary>
	public const string utc_countrybusinessunitname = "utc_countrybusinessunitname";
	/// <summary><para>utc_productgroupname</para>
	/// <para>utc_productgroupname</para></summary>
	public const string utc_productgroupname = "utc_productgroupname";
	/// <summary><para>utc_applicableservicename</para>
	/// <para>utc_applicableservicename</para></summary>
	public const string utc_applicableservicename = "utc_applicableservicename";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string createdonbehalfbyname = "createdonbehalfbyname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string createdbyyominame = "createdbyyominame";
	/// <summary><para>modifiedbyexternalpartyyominame</para>
	/// <para>modifiedbyexternalpartyyominame</para></summary>
	public const string modifiedbyexternalpartyyominame = "modifiedbyexternalpartyyominame";
	/// <summary><para>msdyn_defaultvendoryominame</para>
	/// <para>msdyn_defaultvendoryominame</para></summary>
	public const string msdyn_defaultvendoryominame = "msdyn_defaultvendoryominame";
	/// <summary><para>utc_productclassname</para>
	/// <para>utc_productclassname</para></summary>
	public const string utc_productclassname = "utc_productclassname";
	/// <summary><para>createdbyexternalpartyname</para>
	/// <para>createdbyexternalpartyname</para></summary>
	public const string createdbyexternalpartyname = "createdbyexternalpartyname";
	/// <summary><para>msdyn_defaultvendorname</para>
	/// <para>msdyn_defaultvendorname</para></summary>
	public const string msdyn_defaultvendorname = "msdyn_defaultvendorname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
	/// <summary><para>subjectidname</para>
	/// <para>subjectidname</para></summary>
	public const string subjectidname = "subjectidname";
	/// <summary><para>pricelevelidname</para>
	/// <para>pricelevelidname</para></summary>
	public const string pricelevelidname = "pricelevelidname";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string transactioncurrencyidname = "transactioncurrencyidname";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string createdbyname = "createdbyname";
	/// <summary><para>utc_productsubclassname</para>
	/// <para>utc_productsubclassname</para></summary>
	public const string utc_productsubclassname = "utc_productsubclassname";
	/// <summary><para>entityimage_url</para>
	/// <para>entityimage_url</para></summary>
	public const string entityimage_url = "entityimage_url";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string modifiedbyname = "modifiedbyname";
	/// <summary><para>Accounting Reference</para>
	/// <para>utc_accountingreference</para></summary>
	public const string utc_accountingreference = "utc_accountingreference";
	/// <summary><para>Applicable Service</para>
	/// <para>utc_applicableservice</para></summary>
	public const string utc_applicableservice = "utc_applicableservice";
	/// <summary><para>Bill Per Work Order Calculation Type</para>
	/// <para>utc_billperworkordercalculationtype</para></summary>
	public const string utc_billperworkordercalculationtype = "utc_billperworkordercalculationtype";
	/// <summary><para>Brand</para>
	/// <para>utc_brand</para></summary>
	public const string utc_brand = "utc_brand";
	/// <summary><para>Charge Type</para>
	/// <para>utc_chargetype</para></summary>
	public const string utc_chargetype = "utc_chargetype";
	/// <summary><para>Compliance Refund Amount</para>
	/// <para>utc_compliancerefundamount</para></summary>
	public const string utc_compliancerefundamount = "utc_compliancerefundamount";
	/// <summary><para>Compliance Refund Amount (Base)</para>
	/// <para>utc_compliancerefundamount_base</para></summary>
	public const string utc_compliancerefundamount_base = "utc_compliancerefundamount_base";
	/// <summary><para>Convert to Customer Asset</para>
	/// <para>msdyn_converttocustomerasset</para></summary>
	public const string msdyn_converttocustomerasset = "msdyn_converttocustomerasset";
	/// <summary><para>Country Business Unit</para>
	/// <para>utc_countrybusinessunit</para></summary>
	public const string utc_countrybusinessunit = "utc_countrybusinessunit";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string createdby = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string createdonbehalfby = "createdonbehalfby";
	/// <summary><para>Created By (External Party)</para>
	/// <para>createdbyexternalparty</para></summary>
	public const string createdbyexternalparty = "createdbyexternalparty";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string createdon = "createdon";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string transactioncurrencyid = "transactioncurrencyid";
	/// <summary><para>Current Cost</para>
	/// <para>currentcost</para></summary>
	public const string currentcost = "currentcost";
	/// <summary><para>Current Cost (Base)</para>
	/// <para>currentcost_base</para></summary>
	public const string currentcost_base = "currentcost_base";
	/// <summary><para>Decimals Supported</para>
	/// <para>quantitydecimal</para></summary>
	public const string quantitydecimal = "quantitydecimal";
	/// <summary><para>Default auto-name Customer Equipment</para>
	/// <para>utc_defaultautonamecustomerequipment</para></summary>
	public const string utc_defaultautonamecustomerequipment = "utc_defaultautonamecustomerequipment";
	/// <summary><para>Default Price List</para>
	/// <para>pricelevelid</para></summary>
	public const string pricelevelid = "pricelevelid";
	/// <summary><para>Default Unit</para>
	/// <para>defaultuomid</para></summary>
	public const string defaultuomid = "defaultuomid";
	/// <summary><para>Default Vendor</para>
	/// <para>msdyn_defaultvendor</para></summary>
	public const string msdyn_defaultvendor = "msdyn_defaultvendor";
	/// <summary><para>Description</para>
	/// <para>description</para></summary>
	public const string description = "description";
	/// <summary><para>Entity Image Id</para>
	/// <para>entityimageid</para></summary>
	public const string entityimageid = "entityimageid";
	/// <summary><para>Equipment Category</para>
	/// <para>utc_equipmentcategory</para></summary>
	public const string utc_equipmentcategory = "utc_equipmentcategory";
	/// <summary><para>Equipment Make</para>
	/// <para>utc_equipmentmake</para></summary>
	public const string utc_equipmentmake = "utc_equipmentmake";
	/// <summary><para>Equipment Sub-Category</para>
	/// <para>utc_equipmentsubcategory</para></summary>
	public const string utc_equipmentsubcategory = "utc_equipmentsubcategory";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string exchangerate = "exchangerate";
	/// <summary><para>FieldOne Product Type</para>
	/// <para>msdyn_fieldserviceproducttype</para></summary>
	public const string msdyn_fieldserviceproducttype = "msdyn_fieldserviceproducttype";
	/// <summary><para>Hierarchy Path</para>
	/// <para>hierarchypath</para></summary>
	public const string hierarchypath = "hierarchypath";
	/// <summary><para>ID</para>
	/// <para>productnumber</para></summary>
	public const string productnumber = "productnumber";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string importsequencenumber = "importsequencenumber";
	/// <summary><para>Internal Use Only</para>
	/// <para>dmtimportstate</para></summary>
	public const string dmtimportstate = "dmtimportstate";
	/// <summary><para>Is Kit</para>
	/// <para>iskit</para></summary>
	public const string iskit = "iskit";
	/// <summary><para>Is Reparented</para>
	/// <para>isreparented</para></summary>
	public const string isreparented = "isreparented";
	/// <summary><para>List Price</para>
	/// <para>price</para></summary>
	public const string price = "price";
	/// <summary><para>List Price (Base)</para>
	/// <para>price_base</para></summary>
	public const string price_base = "price_base";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string modifiedby = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string modifiedonbehalfby = "modifiedonbehalfby";
	/// <summary><para>Modified By (External Party)</para>
	/// <para>modifiedbyexternalparty</para></summary>
	public const string modifiedbyexternalparty = "modifiedbyexternalparty";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string modifiedon = "modifiedon";
	/// <summary><para>Most Used</para>
	/// <para>utc_mostused</para></summary>
	public const string utc_mostused = "utc_mostused";
	/// <summary><para>Name</para>
	/// <para>name</para></summary>
	public const string name = "name";
	/// <summary><para>Organization</para>
	/// <para>organizationid</para></summary>
	public const string organizationid = "organizationid";
	/// <summary><para>Parent</para>
	/// <para>parentproductid</para></summary>
	public const string parentproductid = "parentproductid";
	/// <summary><para>Pressure Test Applicable?</para>
	/// <para>utc_pressuretestapplicable</para></summary>
	public const string utc_pressuretestapplicable = "utc_pressuretestapplicable";
	/// <summary><para>Printable</para>
	/// <para>utc_printable</para></summary>
	public const string utc_printable = "utc_printable";
	/// <summary><para>Process</para>
	/// <para>processid</para></summary>
	public const string processid = "processid";
	/// <summary><para>Process Stage</para>
	/// <para>stageid</para></summary>
	public const string stageid = "stageid";
	/// <summary><para>Product</para>
	/// <para>productid</para></summary>
	public const string productid = "productid";
	/// <summary><para>Product Class</para>
	/// <para>utc_productclass</para></summary>
	public const string utc_productclass = "utc_productclass";
	/// <summary><para>Product Group</para>
	/// <para>utc_productgroup</para></summary>
	public const string utc_productgroup = "utc_productgroup";
	/// <summary><para>Product Structure</para>
	/// <para>productstructure</para></summary>
	public const string productstructure = "productstructure";
	/// <summary><para>Product Sub-Class</para>
	/// <para>utc_productsubclass</para></summary>
	public const string utc_productsubclass = "utc_productsubclass";
	/// <summary><para>Product Type</para>
	/// <para>producttypecode</para></summary>
	public const string producttypecode = "producttypecode";
	/// <summary><para>Pronto Equipment Code</para>
	/// <para>utc_prontoequipmentcode</para></summary>
	public const string utc_prontoequipmentcode = "utc_prontoequipmentcode";
	/// <summary><para>Pronto Routine Code</para>
	/// <para>utc_prontoroutinecode</para></summary>
	public const string utc_prontoroutinecode = "utc_prontoroutinecode";
	/// <summary><para>Purchase Name</para>
	/// <para>msdyn_purchasename</para></summary>
	public const string msdyn_purchasename = "msdyn_purchasename";
	/// <summary><para>Quantity On Hand</para>
	/// <para>quantityonhand</para></summary>
	public const string quantityonhand = "quantityonhand";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string overriddencreatedon = "overriddencreatedon";
	/// <summary><para>Size</para>
	/// <para>size</para></summary>
	public const string size = "size";
	/// <summary><para>Standard Cost</para>
	/// <para>standardcost</para></summary>
	public const string standardcost = "standardcost";
	/// <summary><para>Standard Cost (Base)</para>
	/// <para>standardcost_base</para></summary>
	public const string standardcost_base = "standardcost_base";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string statecode = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string statuscode = "statuscode";
	/// <summary><para>Stock Item</para>
	/// <para>isstockitem</para></summary>
	public const string isstockitem = "isstockitem";
	/// <summary><para>Stock Volume</para>
	/// <para>stockvolume</para></summary>
	public const string stockvolume = "stockvolume";
	/// <summary><para>Stock Weight</para>
	/// <para>stockweight</para></summary>
	public const string stockweight = "stockweight";
	/// <summary><para>Subject</para>
	/// <para>subjectid</para></summary>
	public const string subjectid = "subjectid";
	/// <summary><para>Supplier Name</para>
	/// <para>suppliername</para></summary>
	public const string suppliername = "suppliername";
	/// <summary><para>Taxable</para>
	/// <para>msdyn_taxable</para></summary>
	public const string msdyn_taxable = "msdyn_taxable";
	/// <summary><para>Time of Day</para>
	/// <para>utc_timeofday</para></summary>
	public const string utc_timeofday = "utc_timeofday";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string timezoneruleversionnumber = "timezoneruleversionnumber";
	/// <summary><para>Traversed Path</para>
	/// <para>traversedpath</para></summary>
	public const string traversedpath = "traversedpath";
	/// <summary><para>Unit Group</para>
	/// <para>defaultuomscheduleid</para></summary>
	public const string defaultuomscheduleid = "defaultuomscheduleid";
	/// <summary><para>UPC Code</para>
	/// <para>msdyn_upccode</para></summary>
	public const string msdyn_upccode = "msdyn_upccode";
	/// <summary><para>URL</para>
	/// <para>producturl</para></summary>
	public const string producturl = "producturl";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string utcconversiontimezonecode = "utcconversiontimezonecode";
	/// <summary><para>UTC Product Type</para>
	/// <para>utc_utcproducttype</para></summary>
	public const string utc_utcproducttype = "utc_utcproducttype";
	/// <summary><para>Valid From</para>
	/// <para>validfromdate</para></summary>
	public const string validfromdate = "validfromdate";
	/// <summary><para>Valid To</para>
	/// <para>validtodate</para></summary>
	public const string validtodate = "validtodate";
	/// <summary><para>Vendor</para>
	/// <para>vendorname</para></summary>
	public const string vendorname = "vendorname";
	/// <summary><para>Vendor ID</para>
	/// <para>vendorid</para></summary>
	public const string vendorid = "vendorid";
	/// <summary><para>Vendor Name</para>
	/// <para>vendorpartnumber</para></summary>
	public const string vendorpartnumber = "vendorpartnumber";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string versionnumber = "versionnumber";
}

    }
}
