// <auto-generated />

using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace MSCPS.FieldSericeMigration.Plugins.ProxyClasses
{
    [EntityLogicalNameAttribute("msdyn_workorderservice")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    [DataContract(Name = "Entity", Namespace = "http://schemas.microsoft.com/xrm/2011/Contracts")]
    public partial class msdyn_workorderservice : BaseProxyClass
    {
        public new const string LogicalName = "msdyn_workorderservice";
        public const int ObjectTypeCode = 10128;
        public const string PrimaryIdAttribute = "msdyn_workorderserviceid";
        public const string PrimaryNameAttribute = "msdyn_name";
        
        static msdyn_workorderservice()
        {
            BaseProxyClass.RegisterProxyType(typeof(msdyn_workorderservice), "msdyn_workorderservice");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public msdyn_workorderservice() : base(new Entity("msdyn_workorderservice")) { }
        public msdyn_workorderservice(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<msdyn_workorderservice>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: msdyn_pricelistname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_pricelistname")]
public string msdyn_pricelistname
{
	get { return this.GetPropertyValue<string>("msdyn_pricelistname"); }
}
///<summary>
///<para>Logical Name: msdyn_agreementbookingservicename</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_agreementbookingservicename")]
public string msdyn_agreementbookingservicename
{
	get { return this.GetPropertyValue<string>("msdyn_agreementbookingservicename"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string modifiedbyyominame
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: utc_copiedfromidname</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("utc_copiedfromidname")]
public string utc_copiedfromidname
{
	get { return this.GetPropertyValue<string>("utc_copiedfromidname"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string owneridtype
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "owneridtype"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string modifiedbyname
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_workorderincidentname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workorderincidentname")]
public string msdyn_workorderincidentname
{
	get { return this.GetPropertyValue<string>("msdyn_workorderincidentname"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string owneridname
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string createdonbehalfbyyominame
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string transactioncurrencyidname
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: msdyn_customerassetname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_customerassetname")]
public string msdyn_customerassetname
{
	get { return this.GetPropertyValue<string>("msdyn_customerassetname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string createdonbehalfbyname
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_unitname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_unitname")]
public string msdyn_unitname
{
	get { return this.GetPropertyValue<string>("msdyn_unitname"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string owneridyominame
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_workordername</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workordername")]
public string msdyn_workordername
{
	get { return this.GetPropertyValue<string>("msdyn_workordername"); }
}
///<summary>
///<para>Logical Name: msdyn_servicename</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_servicename")]
public string msdyn_servicename
{
	get { return this.GetPropertyValue<string>("msdyn_servicename"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string createdbyname
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string modifiedonbehalfbyname
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: msdyn_bookingname</para>
///<para>Max Length: 300 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_bookingname")]
public string msdyn_bookingname
{
	get { return this.GetPropertyValue<string>("msdyn_bookingname"); }
}
///<summary>
///<para>Logical Name: utc_workordertypeservicename</para>
///<para>Max Length: 150 characters</para>
///</summary>
[AttributeLogicalNameAttribute("utc_workordertypeservicename")]
public string utc_workordertypeservicename
{
	get { return this.GetPropertyValue<string>("utc_workordertypeservicename"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string createdbyyominame
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string modifiedonbehalfbyyominame
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: msdyn_additionalcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_additionalcost
{
	get
	{
		if (msdyn_additionalcostMoney != null) { return msdyn_additionalcostMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.msdyn_additionalcostMoney = new Money(value.Value); }
		else this.msdyn_additionalcostMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_additionalcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_additionalcost")]
public Money msdyn_additionalcostMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_additionalcost"); }
	set { this.SetPropertyValue("msdyn_additionalcost", (Money)value, (decimal)0, (decimal)1000000000, "msdyn_additionalcostMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_additionalcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_additionalcost_base
{
	get
	{
		if (msdyn_additionalcost_baseMoney != null) { return msdyn_additionalcost_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_additionalcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_additionalcost_base")]
public Money msdyn_additionalcost_baseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_additionalcost_base"); }
}
///<summary>
///<para>Logical Name: msdyn_agreementbookingservice</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_agreementbookingservice")]
public EntityReference msdyn_agreementbookingservice
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_agreementbookingservice"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_agreementbookingservice", value, "msdyn_agreementbookingservice"); }
}
///<summary>
///<para>Logical Name: msdyn_calculatedunitamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_calculatedunitamount
{
	get
	{
		if (msdyn_calculatedunitamountMoney != null) { return msdyn_calculatedunitamountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.msdyn_calculatedunitamountMoney = new Money(value.Value); }
		else this.msdyn_calculatedunitamountMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_calculatedunitamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_calculatedunitamount")]
public Money msdyn_calculatedunitamountMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_calculatedunitamount"); }
	set { this.SetPropertyValue("msdyn_calculatedunitamount", (Money)value, (decimal)0, (decimal)1000000000, "msdyn_calculatedunitamountMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_calculatedunitamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_calculatedunitamount_base
{
	get
	{
		if (msdyn_calculatedunitamount_baseMoney != null) { return msdyn_calculatedunitamount_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_calculatedunitamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_calculatedunitamount_base")]
public Money msdyn_calculatedunitamount_baseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_calculatedunitamount_base"); }
}
///<summary>
///<para>Logical Name: msdyn_commissioncosts</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_commissioncosts
{
	get
	{
		if (msdyn_commissioncostsMoney != null) { return msdyn_commissioncostsMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.msdyn_commissioncostsMoney = new Money(value.Value); }
		else this.msdyn_commissioncostsMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_commissioncosts</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_commissioncosts")]
public Money msdyn_commissioncostsMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_commissioncosts"); }
	set { this.SetPropertyValue("msdyn_commissioncosts", (Money)value, (decimal)0, (decimal)1000000000, "msdyn_commissioncostsMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_commissioncosts_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_commissioncosts_base
{
	get
	{
		if (msdyn_commissioncosts_baseMoney != null) { return msdyn_commissioncosts_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_commissioncosts_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_commissioncosts_base")]
public Money msdyn_commissioncosts_baseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_commissioncosts_base"); }
}
///<summary>
///<para>Logical Name: utc_copiedfromid</para>
///</summary>
[AttributeLogicalNameAttribute("utc_copiedfromid")]
public EntityReference utc_copiedfromid
{
	get { return this.GetPropertyValue<EntityReference>("utc_copiedfromid"); }
	set { this.SetPropertyValue<EntityReference>("utc_copiedfromid", value, "utc_copiedfromid"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference createdby
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference createdonbehalfby
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? createdon
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference transactioncurrencyid
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "transactioncurrencyid"); }
}
///<summary>
///<para>Logical Name: msdyn_customerasset</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_customerasset")]
public EntityReference msdyn_customerasset
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_customerasset"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_customerasset", value, "msdyn_customerasset"); }
}
///<summary>
///<para>Logical Name: msdyn_description</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_description")]
public string msdyn_description
{
	get { return this.GetPropertyValue<string>("msdyn_description"); }
	set { this.SetPropertyValue("msdyn_description", value, 2000, "msdyn_description"); }
}
///<summary>
///<para>Logical Name: msdyn_discountpercent</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_discountpercent")]
public double? msdyn_discountpercent
{
	get { return this.GetPropertyValue<double?>("msdyn_discountpercent"); }
	set { this.SetPropertyValue("msdyn_discountpercent", (double?)value, (double)0, (double)1000000000, "msdyn_discountpercent"); }
}
///<summary>
///<para>Logical Name: msdyn_discountamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_discountamount
{
	get
	{
		if (msdyn_discountamountMoney != null) { return msdyn_discountamountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.msdyn_discountamountMoney = new Money(value.Value); }
		else this.msdyn_discountamountMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_discountamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_discountamount")]
public Money msdyn_discountamountMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_discountamount"); }
	set { this.SetPropertyValue("msdyn_discountamount", (Money)value, (decimal)0, (decimal)1000000000, "msdyn_discountamountMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_discountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_discountamount_base
{
	get
	{
		if (msdyn_discountamount_baseMoney != null) { return msdyn_discountamount_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_discountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_discountamount_base")]
public Money msdyn_discountamount_baseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_discountamount_base"); }
}
///<summary>
///<para>Logical Name: msdyn_duration</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_duration")]
public int? msdyn_duration
{
	get { return this.GetPropertyValue<int?>("msdyn_duration"); }
	set { this.SetPropertyValue("msdyn_duration", (int?)value, (int)0, (int)2147483647, "msdyn_duration"); }
}
///<summary>
///<para>Logical Name: msdyn_durationtobill</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_durationtobill")]
public int? msdyn_durationtobill
{
	get { return this.GetPropertyValue<int?>("msdyn_durationtobill"); }
	set { this.SetPropertyValue("msdyn_durationtobill", (int?)value, (int)0, (int)2147483647, "msdyn_durationtobill"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatecalculatedunitamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_estimatecalculatedunitamount
{
	get
	{
		if (msdyn_estimatecalculatedunitamountMoney != null) { return msdyn_estimatecalculatedunitamountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.msdyn_estimatecalculatedunitamountMoney = new Money(value.Value); }
		else this.msdyn_estimatecalculatedunitamountMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatecalculatedunitamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatecalculatedunitamount")]
public Money msdyn_estimatecalculatedunitamountMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatecalculatedunitamount"); }
	set { this.SetPropertyValue("msdyn_estimatecalculatedunitamount", (Money)value, (decimal)0, (decimal)1000000000, "msdyn_estimatecalculatedunitamountMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatecalculatedunitamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_estimatecalculatedunitamount_base
{
	get
	{
		if (msdyn_estimatecalculatedunitamount_baseMoney != null) { return msdyn_estimatecalculatedunitamount_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatecalculatedunitamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatecalculatedunitamount_base")]
public Money msdyn_estimatecalculatedunitamount_baseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatecalculatedunitamount_base"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatediscountpercent</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatediscountpercent")]
public double? msdyn_estimatediscountpercent
{
	get { return this.GetPropertyValue<double?>("msdyn_estimatediscountpercent"); }
	set { this.SetPropertyValue("msdyn_estimatediscountpercent", (double?)value, (double)0, (double)1000000000, "msdyn_estimatediscountpercent"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatediscountamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_estimatediscountamount
{
	get
	{
		if (msdyn_estimatediscountamountMoney != null) { return msdyn_estimatediscountamountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.msdyn_estimatediscountamountMoney = new Money(value.Value); }
		else this.msdyn_estimatediscountamountMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatediscountamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatediscountamount")]
public Money msdyn_estimatediscountamountMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatediscountamount"); }
	set { this.SetPropertyValue("msdyn_estimatediscountamount", (Money)value, (decimal)0, (decimal)1000000000, "msdyn_estimatediscountamountMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatediscountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_estimatediscountamount_base
{
	get
	{
		if (msdyn_estimatediscountamount_baseMoney != null) { return msdyn_estimatediscountamount_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatediscountamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatediscountamount_base")]
public Money msdyn_estimatediscountamount_baseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatediscountamount_base"); }
}
///<summary>
///<para>Logical Name: msdyn_estimateduration</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimateduration")]
public int? msdyn_estimateduration
{
	get { return this.GetPropertyValue<int?>("msdyn_estimateduration"); }
	set { this.SetPropertyValue("msdyn_estimateduration", (int?)value, (int)0, (int)2147483647, "msdyn_estimateduration"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatesubtotal</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_estimatesubtotal
{
	get
	{
		if (msdyn_estimatesubtotalMoney != null) { return msdyn_estimatesubtotalMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.msdyn_estimatesubtotalMoney = new Money(value.Value); }
		else this.msdyn_estimatesubtotalMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatesubtotal</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatesubtotal")]
public Money msdyn_estimatesubtotalMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatesubtotal"); }
	set { this.SetPropertyValue("msdyn_estimatesubtotal", (Money)value, (decimal)0, (decimal)1000000000, "msdyn_estimatesubtotalMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatesubtotal_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_estimatesubtotal_base
{
	get
	{
		if (msdyn_estimatesubtotal_baseMoney != null) { return msdyn_estimatesubtotal_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatesubtotal_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatesubtotal_base")]
public Money msdyn_estimatesubtotal_baseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatesubtotal_base"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatetotalamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_estimatetotalamount
{
	get
	{
		if (msdyn_estimatetotalamountMoney != null) { return msdyn_estimatetotalamountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.msdyn_estimatetotalamountMoney = new Money(value.Value); }
		else this.msdyn_estimatetotalamountMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatetotalamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatetotalamount")]
public Money msdyn_estimatetotalamountMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatetotalamount"); }
	set { this.SetPropertyValue("msdyn_estimatetotalamount", (Money)value, (decimal)0, (decimal)1000000000, "msdyn_estimatetotalamountMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatetotalamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_estimatetotalamount_base
{
	get
	{
		if (msdyn_estimatetotalamount_baseMoney != null) { return msdyn_estimatetotalamount_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatetotalamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatetotalamount_base")]
public Money msdyn_estimatetotalamount_baseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatetotalamount_base"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatetotalcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_estimatetotalcost
{
	get
	{
		if (msdyn_estimatetotalcostMoney != null) { return msdyn_estimatetotalcostMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.msdyn_estimatetotalcostMoney = new Money(value.Value); }
		else this.msdyn_estimatetotalcostMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatetotalcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatetotalcost")]
public Money msdyn_estimatetotalcostMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatetotalcost"); }
	set { this.SetPropertyValue("msdyn_estimatetotalcost", (Money)value, (decimal)0, (decimal)1000000000, "msdyn_estimatetotalcostMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_estimatetotalcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_estimatetotalcost_base
{
	get
	{
		if (msdyn_estimatetotalcost_baseMoney != null) { return msdyn_estimatetotalcost_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimatetotalcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimatetotalcost_base")]
public Money msdyn_estimatetotalcost_baseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimatetotalcost_base"); }
}
///<summary>
///<para>Logical Name: msdyn_estimateunitamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_estimateunitamount
{
	get
	{
		if (msdyn_estimateunitamountMoney != null) { return msdyn_estimateunitamountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.msdyn_estimateunitamountMoney = new Money(value.Value); }
		else this.msdyn_estimateunitamountMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimateunitamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimateunitamount")]
public Money msdyn_estimateunitamountMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimateunitamount"); }
	set { this.SetPropertyValue("msdyn_estimateunitamount", (Money)value, (decimal)0, (decimal)1000000000, "msdyn_estimateunitamountMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_estimateunitamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_estimateunitamount_base
{
	get
	{
		if (msdyn_estimateunitamount_baseMoney != null) { return msdyn_estimateunitamount_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimateunitamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimateunitamount_base")]
public Money msdyn_estimateunitamount_baseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimateunitamount_base"); }
}
///<summary>
///<para>Logical Name: msdyn_estimateunitcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_estimateunitcost
{
	get
	{
		if (msdyn_estimateunitcostMoney != null) { return msdyn_estimateunitcostMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.msdyn_estimateunitcostMoney = new Money(value.Value); }
		else this.msdyn_estimateunitcostMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimateunitcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimateunitcost")]
public Money msdyn_estimateunitcostMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimateunitcost"); }
	set { this.SetPropertyValue("msdyn_estimateunitcost", (Money)value, (decimal)0, (decimal)1000000000, "msdyn_estimateunitcostMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_estimateunitcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_estimateunitcost_base
{
	get
	{
		if (msdyn_estimateunitcost_baseMoney != null) { return msdyn_estimateunitcost_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_estimateunitcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_estimateunitcost_base")]
public Money msdyn_estimateunitcost_baseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_estimateunitcost_base"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? exchangerate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? importsequencenumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "importsequencenumber"); }
}
///<summary>
///<para>Logical Name: msdyn_internaldescription</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_internaldescription")]
public string msdyn_internaldescription
{
	get { return this.GetPropertyValue<string>("msdyn_internaldescription"); }
	set { this.SetPropertyValue("msdyn_internaldescription", value, 2000, "msdyn_internaldescription"); }
}
///<summary>
///<para>Logical Name: msdyn_internalflags</para>
///<para>Max Length: 1048576 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_internalflags")]
public string msdyn_internalflags
{
	get { return this.GetPropertyValue<string>("msdyn_internalflags"); }
	set { this.SetPropertyValue("msdyn_internalflags", value, 1048576, "msdyn_internalflags"); }
}
///<summary>
///<para>Logical Name: msdyn_lineorder</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_lineorder")]
public int? msdyn_lineorder
{
	get { return this.GetPropertyValue<int?>("msdyn_lineorder"); }
	set { this.SetPropertyValue("msdyn_lineorder", (int?)value, (int)-2147483648, (int)2147483647, "msdyn_lineorder"); }
}
/// <summary>
///Logical Name: msdyn_linestatus
/// </summary>
[AttributeLogicalNameAttribute("msdyn_linestatus")]
public eProduct_ServiceStatus? msdyn_linestatus
{
	get
	{
		if (msdyn_linestatus_OptionSetValue != null) { return (eProduct_ServiceStatus)msdyn_linestatus_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.msdyn_linestatus_OptionSetValue = new OptionSetValue((int)value); }
		else this.msdyn_linestatus_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_linestatus</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_linestatus")]
public OptionSetValue msdyn_linestatus_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_linestatus"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_linestatus", value, "msdyn_linestatus_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string msdyn_linestatus_Text(IOrganizationService Service)
{
	return this.msdyn_linestatus_OptionSetValue.GetOptionSetText(Service, this, "msdyn_linestatus");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string msdyn_linestatus_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.msdyn_linestatus_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_minimumchargeamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_minimumchargeamount
{
	get
	{
		if (msdyn_minimumchargeamountMoney != null) { return msdyn_minimumchargeamountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.msdyn_minimumchargeamountMoney = new Money(value.Value); }
		else this.msdyn_minimumchargeamountMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_minimumchargeamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_minimumchargeamount")]
public Money msdyn_minimumchargeamountMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_minimumchargeamount"); }
	set { this.SetPropertyValue("msdyn_minimumchargeamount", (Money)value, (decimal)0, (decimal)1000000000, "msdyn_minimumchargeamountMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_minimumchargeamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_minimumchargeamount_base
{
	get
	{
		if (msdyn_minimumchargeamount_baseMoney != null) { return msdyn_minimumchargeamount_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_minimumchargeamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_minimumchargeamount_base")]
public Money msdyn_minimumchargeamount_baseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_minimumchargeamount_base"); }
}
///<summary>
///<para>Logical Name: msdyn_minimumchargeduration</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_minimumchargeduration")]
public int? msdyn_minimumchargeduration
{
	get { return this.GetPropertyValue<int?>("msdyn_minimumchargeduration"); }
	set { this.SetPropertyValue("msdyn_minimumchargeduration", (int?)value, (int)0, (int)2147483647, "msdyn_minimumchargeduration"); }
}
/// <summary>
///Logical Name: utc_minimumchargetimeofday
/// </summary>
[AttributeLogicalNameAttribute("utc_minimumchargetimeofday")]
public eTimeOfDay? utc_minimumchargetimeofday
{
	get
	{
		if (utc_minimumchargetimeofday_OptionSetValue != null) { return (eTimeOfDay)utc_minimumchargetimeofday_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.utc_minimumchargetimeofday_OptionSetValue = new OptionSetValue((int)value); }
		else this.utc_minimumchargetimeofday_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: utc_minimumchargetimeofday</para>
///</summary>
[AttributeLogicalNameAttribute("utc_minimumchargetimeofday")]
public OptionSetValue utc_minimumchargetimeofday_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("utc_minimumchargetimeofday"); }
	set { this.SetPropertyValue<OptionSetValue>("utc_minimumchargetimeofday", value, "utc_minimumchargetimeofday_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string utc_minimumchargetimeofday_Text(IOrganizationService Service)
{
	return this.utc_minimumchargetimeofday_OptionSetValue.GetOptionSetText(Service, this, "utc_minimumchargetimeofday");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string utc_minimumchargetimeofday_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.utc_minimumchargetimeofday_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference modifiedby
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference modifiedonbehalfby
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? modifiedon
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: msdyn_name</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_name")]
public string msdyn_name
{
	get { return this.GetPropertyValue<string>("msdyn_name"); }
	set { this.SetPropertyValue("msdyn_name", value, 200, "msdyn_name"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference ownerid
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "ownerid"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference owningbusinessunit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference owningteam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference owninguser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: msdyn_pricelist</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_pricelist")]
public EntityReference msdyn_pricelist
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_pricelist"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_pricelist", value, "msdyn_pricelist"); }
}
///<summary>
///<para>Logical Name: utc_printable</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("utc_printable")]
public bool? utc_printable
{
	get { return this.GetPropertyValue<bool?>("utc_printable"); }
	set { this.SetPropertyValue<bool?>("utc_printable", value, "utc_printable"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? overriddencreatedon
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "overriddencreatedon"); }
}
///<summary>
///<para>Logical Name: msdyn_booking</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_booking")]
public EntityReference msdyn_booking
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_booking"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_booking", value, "msdyn_booking"); }
}
///<summary>
///<para>Logical Name: msdyn_service</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_service")]
public EntityReference msdyn_service
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_service"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_service", value, "msdyn_service"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? statecode
{
	get
	{
		if (statecode_OptionSetValue != null) { return (eStatus)statecode_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.statecode_OptionSetValue = new OptionSetValue((int)value); }
		else this.statecode_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue statecode_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "statecode_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string statecode_Text(IOrganizationService Service)
{
	return this.statecode_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string statecode_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.statecode_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? statuscode
{
	get
	{
		if (statuscode_OptionSetValue != null) { return (eStatusReason)statuscode_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.statuscode_OptionSetValue = new OptionSetValue((int)value); }
		else this.statuscode_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue statuscode_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "statuscode_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string statuscode_Text(IOrganizationService Service)
{
	return this.statuscode_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string statuscode_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.statuscode_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyn_subtotal</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_subtotal
{
	get
	{
		if (msdyn_subtotalMoney != null) { return msdyn_subtotalMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.msdyn_subtotalMoney = new Money(value.Value); }
		else this.msdyn_subtotalMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_subtotal</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_subtotal")]
public Money msdyn_subtotalMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_subtotal"); }
	set { this.SetPropertyValue("msdyn_subtotal", (Money)value, (decimal)0, (decimal)1000000000, "msdyn_subtotalMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_subtotal_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_subtotal_base
{
	get
	{
		if (msdyn_subtotal_baseMoney != null) { return msdyn_subtotal_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_subtotal_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_subtotal_base")]
public Money msdyn_subtotal_baseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_subtotal_base"); }
}
///<summary>
///<para>Logical Name: msdyn_taxable</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_taxable")]
public bool? msdyn_taxable
{
	get { return this.GetPropertyValue<bool?>("msdyn_taxable"); }
	set { this.SetPropertyValue<bool?>("msdyn_taxable", value, "msdyn_taxable"); }
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? timezoneruleversionnumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "timezoneruleversionnumber"); }
}
///<summary>
///<para>Logical Name: msdyn_totalamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_totalamount
{
	get
	{
		if (msdyn_totalamountMoney != null) { return msdyn_totalamountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.msdyn_totalamountMoney = new Money(value.Value); }
		else this.msdyn_totalamountMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalamount")]
public Money msdyn_totalamountMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_totalamount"); }
	set { this.SetPropertyValue("msdyn_totalamount", (Money)value, (decimal)0, (decimal)1000000000, "msdyn_totalamountMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_totalamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_totalamount_base
{
	get
	{
		if (msdyn_totalamount_baseMoney != null) { return msdyn_totalamount_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalamount_base")]
public Money msdyn_totalamount_baseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_totalamount_base"); }
}
///<summary>
///<para>Logical Name: msdyn_totalcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_totalcost
{
	get
	{
		if (msdyn_totalcostMoney != null) { return msdyn_totalcostMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.msdyn_totalcostMoney = new Money(value.Value); }
		else this.msdyn_totalcostMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalcost")]
public Money msdyn_totalcostMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_totalcost"); }
	set { this.SetPropertyValue("msdyn_totalcost", (Money)value, (decimal)0, (decimal)1000000000, "msdyn_totalcostMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_totalcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_totalcost_base
{
	get
	{
		if (msdyn_totalcost_baseMoney != null) { return msdyn_totalcost_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_totalcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_totalcost_base")]
public Money msdyn_totalcost_baseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_totalcost_base"); }
}
/// <summary>
///Logical Name: utc_travelchargeable
/// </summary>
[AttributeLogicalNameAttribute("utc_travelchargeable")]
public eYesOrNo_allowingBlank? utc_travelchargeable
{
	get
	{
		if (utc_travelchargeable_OptionSetValue != null) { return (eYesOrNo_allowingBlank)utc_travelchargeable_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.utc_travelchargeable_OptionSetValue = new OptionSetValue((int)value); }
		else this.utc_travelchargeable_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: utc_travelchargeable</para>
///</summary>
[AttributeLogicalNameAttribute("utc_travelchargeable")]
public OptionSetValue utc_travelchargeable_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("utc_travelchargeable"); }
	set { this.SetPropertyValue<OptionSetValue>("utc_travelchargeable", value, "utc_travelchargeable_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string utc_travelchargeable_Text(IOrganizationService Service)
{
	return this.utc_travelchargeable_OptionSetValue.GetOptionSetText(Service, this, "utc_travelchargeable");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string utc_travelchargeable_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.utc_travelchargeable_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: utc_traveldurationcharged</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utc_traveldurationcharged")]
public int? utc_traveldurationcharged
{
	get { return this.GetPropertyValue<int?>("utc_traveldurationcharged"); }
	set { this.SetPropertyValue("utc_traveldurationcharged", (int?)value, (int)0, (int)2147483647, "utc_traveldurationcharged"); }
}
///<summary>
///<para>Logical Name: msdyn_unit</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_unit")]
public EntityReference msdyn_unit
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_unit"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_unit", value, "msdyn_unit"); }
}
///<summary>
///<para>Logical Name: msdyn_unitamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_unitamount
{
	get
	{
		if (msdyn_unitamountMoney != null) { return msdyn_unitamountMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.msdyn_unitamountMoney = new Money(value.Value); }
		else this.msdyn_unitamountMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_unitamount</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_unitamount")]
public Money msdyn_unitamountMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_unitamount"); }
	set { this.SetPropertyValue("msdyn_unitamount", (Money)value, (decimal)0, (decimal)1000000000, "msdyn_unitamountMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_unitamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_unitamount_base
{
	get
	{
		if (msdyn_unitamount_baseMoney != null) { return msdyn_unitamount_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_unitamount_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_unitamount_base")]
public Money msdyn_unitamount_baseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_unitamount_base"); }
}
///<summary>
///<para>Logical Name: msdyn_unitcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_unitcost
{
	get
	{
		if (msdyn_unitcostMoney != null) { return msdyn_unitcostMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.msdyn_unitcostMoney = new Money(value.Value); }
		else this.msdyn_unitcostMoney = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_unitcost</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_unitcost")]
public Money msdyn_unitcostMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_unitcost"); }
	set { this.SetPropertyValue("msdyn_unitcost", (Money)value, (decimal)0, (decimal)1000000000, "msdyn_unitcostMoney"); }
}
///<summary>
///<para>Logical Name: msdyn_unitcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
public decimal? msdyn_unitcost_base
{
	get
	{
		if (msdyn_unitcost_baseMoney != null) { return msdyn_unitcost_baseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: msdyn_unitcost_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_unitcost_base")]
public Money msdyn_unitcost_baseMoney
{
	get { return this.GetPropertyValue<Money>("msdyn_unitcost_base"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? utcconversiontimezonecode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "utcconversiontimezonecode"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? versionnumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Logical Name: msdyn_workorder</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workorder")]
public EntityReference msdyn_workorder
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_workorder"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_workorder", value, "msdyn_workorder"); }
}
///<summary>
///<para>Logical Name: msdyn_workorderincident</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workorderincident")]
public EntityReference msdyn_workorderincident
{
	get { return this.GetPropertyValue<EntityReference>("msdyn_workorderincident"); }
	set { this.SetPropertyValue<EntityReference>("msdyn_workorderincident", value, "msdyn_workorderincident"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: msdyn_workorderserviceid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_workorderserviceid")]
public Guid msdyn_workorderserviceid
{
	get
	{
		return base.Id;
	}
	set
	{
		base.Id = value;
		base.SetPropertyValue("msdyn_workorderserviceid", value, "msdyn_workorderserviceid");
	}
}
///<summary>
///<para>Logical Name: utc_workordertypeservice</para>
///</summary>
[AttributeLogicalNameAttribute("utc_workordertypeservice")]
public EntityReference utc_workordertypeservice
{
	get { return this.GetPropertyValue<EntityReference>("utc_workordertypeservice"); }
	set { this.SetPropertyValue<EntityReference>("utc_workordertypeservice", value, "utc_workordertypeservice"); }
}


        /// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_ActivityPointers</para>
/// </summary>
public List<Entity> msdyn_workorderservice_ActivityPointers (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_ActivityPointers</para>
/// </summary>
public List<Entity> msdyn_workorderservice_ActivityPointers (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_Annotations</para>
/// </summary>
public List<Entity> msdyn_workorderservice_Annotations (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_Annotations</para>
/// </summary>
public List<Entity> msdyn_workorderservice_Annotations (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_Appointments</para>
/// </summary>
public List<Entity> msdyn_workorderservice_Appointments (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_Appointments</para>
/// </summary>
public List<Entity> msdyn_workorderservice_Appointments (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_AsyncOperations</para>
/// </summary>
public List<Entity> msdyn_workorderservice_AsyncOperations (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_AsyncOperations</para>
/// </summary>
public List<Entity> msdyn_workorderservice_AsyncOperations (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_BulkDeleteFailures</para>
/// </summary>
public List<Entity> msdyn_workorderservice_BulkDeleteFailures (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_BulkDeleteFailures</para>
/// </summary>
public List<Entity> msdyn_workorderservice_BulkDeleteFailures (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_connections1</para>
/// </summary>
public List<Entity> msdyn_workorderservice_connections1 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_connections1</para>
/// </summary>
public List<Entity> msdyn_workorderservice_connections1 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_connections2</para>
/// </summary>
public List<Entity> msdyn_workorderservice_connections2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_connections2</para>
/// </summary>
public List<Entity> msdyn_workorderservice_connections2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_DuplicateBaseRecord</para>
/// </summary>
public List<Entity> msdyn_workorderservice_DuplicateBaseRecord (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_DuplicateBaseRecord</para>
/// </summary>
public List<Entity> msdyn_workorderservice_DuplicateBaseRecord (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_DuplicateMatchingRecord</para>
/// </summary>
public List<Entity> msdyn_workorderservice_DuplicateMatchingRecord (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_DuplicateMatchingRecord</para>
/// </summary>
public List<Entity> msdyn_workorderservice_DuplicateMatchingRecord (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_Emails</para>
/// </summary>
public List<Entity> msdyn_workorderservice_Emails (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_Emails</para>
/// </summary>
public List<Entity> msdyn_workorderservice_Emails (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_Faxes</para>
/// </summary>
public List<Entity> msdyn_workorderservice_Faxes (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_Faxes</para>
/// </summary>
public List<Entity> msdyn_workorderservice_Faxes (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>invoicedetail (Work Order Service)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorderservice_invoicedetail</para>
/// </summary>
public List<invoicedetail> msdyn_msdyn_workorderservice_invoicedetail (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<invoicedetail>(Service, this.Id, "invoicedetail", "msdyn_workorderserviceid", Columns); }
/// <summary>
/// <para><b>invoicedetail (Work Order Service)</b></para>
/// <para>Schema Name: msdyn_msdyn_workorderservice_invoicedetail</para>
/// </summary>
public List<invoicedetail> msdyn_msdyn_workorderservice_invoicedetail (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<invoicedetail>(Service, this.Id, "invoicedetail", "msdyn_workorderserviceid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_Letters</para>
/// </summary>
public List<Entity> msdyn_workorderservice_Letters (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_Letters</para>
/// </summary>
public List<Entity> msdyn_workorderservice_Letters (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_MailboxTrackingFolders</para>
/// </summary>
public List<Entity> msdyn_workorderservice_MailboxTrackingFolders (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_MailboxTrackingFolders</para>
/// </summary>
public List<Entity> msdyn_workorderservice_MailboxTrackingFolders (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_msdyn_bookingalerts</para>
/// </summary>
public List<Entity> msdyn_workorderservice_msdyn_bookingalerts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_msdyn_bookingalerts</para>
/// </summary>
public List<Entity> msdyn_workorderservice_msdyn_bookingalerts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>msdyn_workorderservice (Copied From)</b></para>
/// <para>Schema Name: utc_msdyn_workorderservice_msdyn_workorderservice_copiedfrom</para>
/// </summary>
public List<msdyn_workorderservice> utc_msdyn_workorderservice_msdyn_workorderservice_copiedfrom (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<msdyn_workorderservice>(Service, this.Id, "msdyn_workorderservice", "utc_copiedfromid", Columns); }
/// <summary>
/// <para><b>msdyn_workorderservice (Copied From)</b></para>
/// <para>Schema Name: utc_msdyn_workorderservice_msdyn_workorderservice_copiedfrom</para>
/// </summary>
public List<msdyn_workorderservice> utc_msdyn_workorderservice_msdyn_workorderservice_copiedfrom (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<msdyn_workorderservice>(Service, this.Id, "msdyn_workorderservice", "utc_copiedfromid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_PhoneCalls</para>
/// </summary>
public List<Entity> msdyn_workorderservice_PhoneCalls (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_PhoneCalls</para>
/// </summary>
public List<Entity> msdyn_workorderservice_PhoneCalls (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<Entity> msdyn_workorderservice_PrincipalObjectAttributeAccesses (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<Entity> msdyn_workorderservice_PrincipalObjectAttributeAccesses (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_ProcessSession</para>
/// </summary>
public List<Entity> msdyn_workorderservice_ProcessSession (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_ProcessSession</para>
/// </summary>
public List<Entity> msdyn_workorderservice_ProcessSession (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_QueueItems</para>
/// </summary>
public List<Entity> msdyn_workorderservice_QueueItems (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "queueitem", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_QueueItems</para>
/// </summary>
public List<Entity> msdyn_workorderservice_QueueItems (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "queueitem", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_RecurringAppointmentMasters</para>
/// </summary>
public List<Entity> msdyn_workorderservice_RecurringAppointmentMasters (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_RecurringAppointmentMasters</para>
/// </summary>
public List<Entity> msdyn_workorderservice_RecurringAppointmentMasters (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_ServiceAppointments</para>
/// </summary>
public List<Entity> msdyn_workorderservice_ServiceAppointments (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_ServiceAppointments</para>
/// </summary>
public List<Entity> msdyn_workorderservice_ServiceAppointments (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_SharePointDocuments</para>
/// </summary>
public List<Entity> msdyn_workorderservice_SharePointDocuments (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "sharepointdocument", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_SharePointDocuments</para>
/// </summary>
public List<Entity> msdyn_workorderservice_SharePointDocuments (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "sharepointdocument", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_SharePointDocumentLocations</para>
/// </summary>
public List<Entity> msdyn_workorderservice_SharePointDocumentLocations (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_SharePointDocumentLocations</para>
/// </summary>
public List<Entity> msdyn_workorderservice_SharePointDocumentLocations (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_SocialActivities</para>
/// </summary>
public List<Entity> msdyn_workorderservice_SocialActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_SocialActivities</para>
/// </summary>
public List<Entity> msdyn_workorderservice_SocialActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_SyncErrors</para>
/// </summary>
public List<Entity> msdyn_workorderservice_SyncErrors (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_SyncErrors</para>
/// </summary>
public List<Entity> msdyn_workorderservice_SyncErrors (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_Tasks</para>
/// </summary>
public List<Entity> msdyn_workorderservice_Tasks (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_Tasks</para>
/// </summary>
public List<Entity> msdyn_workorderservice_Tasks (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_UserEntityInstanceDatas</para>
/// </summary>
public List<Entity> msdyn_workorderservice_UserEntityInstanceDatas (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_UserEntityInstanceDatas</para>
/// </summary>
public List<Entity> msdyn_workorderservice_UserEntityInstanceDatas (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_utc_changeownerrequests</para>
/// </summary>
public List<Entity> msdyn_workorderservice_utc_changeownerrequests (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_changeownerrequest", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_utc_changeownerrequests</para>
/// </summary>
public List<Entity> msdyn_workorderservice_utc_changeownerrequests (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_changeownerrequest", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_utc_defectrereports</para>
/// </summary>
public List<Entity> msdyn_workorderservice_utc_defectrereports (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_defectrereport", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_utc_defectrereports</para>
/// </summary>
public List<Entity> msdyn_workorderservice_utc_defectrereports (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_defectrereport", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_utc_notetooffices</para>
/// </summary>
public List<Entity> msdyn_workorderservice_utc_notetooffices (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_notetooffice", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_workorderservice_utc_notetooffices</para>
/// </summary>
public List<Entity> msdyn_workorderservice_utc_notetooffices (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "utc_notetooffice", "regardingobjectid", Columns); }


        

        

        public enum eProduct_ServiceStatus
{
	///<summary><para>Estimated</para>
	///<para>Value = 690970000</para></summary>
	[Description("Estimated")]
	Estimated = 690970000, 
	///<summary><para>Used</para>
	///<para>Value = 690970001</para></summary>
	[Description("Used")]
	Used = 690970001
}
public enum eTimeOfDay
{
	///<summary><para>Standard Hours</para>
	///<para>Value = 959600000</para></summary>
	[Description("Standard Hours")]
	StandardHours = 959600000, 
	///<summary><para>After Hours</para>
	///<para>Value = 959600001</para></summary>
	[Description("After Hours")]
	AfterHours = 959600001
}
public enum eStatus
{
	///<summary><para>Active</para>
	///<para>Value = 0</para></summary>
	[Description("Active")]
	Active = 0, 
	///<summary><para>Inactive</para>
	///<para>Value = 1</para></summary>
	[Description("Inactive")]
	Inactive = 1
}
public enum eStatusReason
{
	///<summary><para>Active</para>
	///<para>Value = 1</para></summary>
	[Description("Active")]
	Active_Active = 1, 
	///<summary><para>Inactive</para>
	///<para>Value = 2</para></summary>
	[Description("Inactive")]
	Inactive_Inactive = 2, 
	///<summary><para>Inactive - Consolidated</para>
	///<para>Value = 959600000</para></summary>
	[Description("Inactive - Consolidated")]
	Inactive_Consolidated_Inactive = 959600000
}
public enum eYesOrNo_allowingBlank
{
	///<summary><para>Yes</para>
	///<para>Value = 959600000</para></summary>
	[Description("Yes")]
	Yes = 959600000, 
	///<summary><para>No</para>
	///<para>Value = 959600001</para></summary>
	[Description("No")]
	No = 959600001
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>msdyn_pricelistname</para>
	/// <para>msdyn_pricelistname</para></summary>
	public const string msdyn_pricelistname = "msdyn_pricelistname";
	/// <summary><para>msdyn_agreementbookingservicename</para>
	/// <para>msdyn_agreementbookingservicename</para></summary>
	public const string msdyn_agreementbookingservicename = "msdyn_agreementbookingservicename";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string modifiedbyyominame = "modifiedbyyominame";
	/// <summary><para>utc_copiedfromidname</para>
	/// <para>utc_copiedfromidname</para></summary>
	public const string utc_copiedfromidname = "utc_copiedfromidname";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string owneridtype = "owneridtype";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string modifiedbyname = "modifiedbyname";
	/// <summary><para>msdyn_workorderincidentname</para>
	/// <para>msdyn_workorderincidentname</para></summary>
	public const string msdyn_workorderincidentname = "msdyn_workorderincidentname";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string owneridname = "owneridname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string transactioncurrencyidname = "transactioncurrencyidname";
	/// <summary><para>msdyn_customerassetname</para>
	/// <para>msdyn_customerassetname</para></summary>
	public const string msdyn_customerassetname = "msdyn_customerassetname";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string createdonbehalfbyname = "createdonbehalfbyname";
	/// <summary><para>msdyn_unitname</para>
	/// <para>msdyn_unitname</para></summary>
	public const string msdyn_unitname = "msdyn_unitname";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string owneridyominame = "owneridyominame";
	/// <summary><para>msdyn_workordername</para>
	/// <para>msdyn_workordername</para></summary>
	public const string msdyn_workordername = "msdyn_workordername";
	/// <summary><para>msdyn_servicename</para>
	/// <para>msdyn_servicename</para></summary>
	public const string msdyn_servicename = "msdyn_servicename";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string createdbyname = "createdbyname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
	/// <summary><para>msdyn_bookingname</para>
	/// <para>msdyn_bookingname</para></summary>
	public const string msdyn_bookingname = "msdyn_bookingname";
	/// <summary><para>utc_workordertypeservicename</para>
	/// <para>utc_workordertypeservicename</para></summary>
	public const string utc_workordertypeservicename = "utc_workordertypeservicename";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string createdbyyominame = "createdbyyominame";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
	/// <summary><para>Additional Cost</para>
	/// <para>msdyn_additionalcost</para></summary>
	public const string msdyn_additionalcost = "msdyn_additionalcost";
	/// <summary><para>Additional Cost (Base)</para>
	/// <para>msdyn_additionalcost_base</para></summary>
	public const string msdyn_additionalcost_base = "msdyn_additionalcost_base";
	/// <summary><para>Agreement Service</para>
	/// <para>msdyn_agreementbookingservice</para></summary>
	public const string msdyn_agreementbookingservice = "msdyn_agreementbookingservice";
	/// <summary><para>Calculated Unit Amount</para>
	/// <para>msdyn_calculatedunitamount</para></summary>
	public const string msdyn_calculatedunitamount = "msdyn_calculatedunitamount";
	/// <summary><para>Calculated Unit Amount (Base)</para>
	/// <para>msdyn_calculatedunitamount_base</para></summary>
	public const string msdyn_calculatedunitamount_base = "msdyn_calculatedunitamount_base";
	/// <summary><para>Commission Costs</para>
	/// <para>msdyn_commissioncosts</para></summary>
	public const string msdyn_commissioncosts = "msdyn_commissioncosts";
	/// <summary><para>Commission Costs (Base)</para>
	/// <para>msdyn_commissioncosts_base</para></summary>
	public const string msdyn_commissioncosts_base = "msdyn_commissioncosts_base";
	/// <summary><para>Copied From</para>
	/// <para>utc_copiedfromid</para></summary>
	public const string utc_copiedfromid = "utc_copiedfromid";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string createdby = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string createdonbehalfby = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string createdon = "createdon";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string transactioncurrencyid = "transactioncurrencyid";
	/// <summary><para>Customer Equipment</para>
	/// <para>msdyn_customerasset</para></summary>
	public const string msdyn_customerasset = "msdyn_customerasset";
	/// <summary><para>Description</para>
	/// <para>msdyn_description</para></summary>
	public const string msdyn_description = "msdyn_description";
	/// <summary><para>Discount %</para>
	/// <para>msdyn_discountpercent</para></summary>
	public const string msdyn_discountpercent = "msdyn_discountpercent";
	/// <summary><para>Discount Amount</para>
	/// <para>msdyn_discountamount</para></summary>
	public const string msdyn_discountamount = "msdyn_discountamount";
	/// <summary><para>Discount Amount (Base)</para>
	/// <para>msdyn_discountamount_base</para></summary>
	public const string msdyn_discountamount_base = "msdyn_discountamount_base";
	/// <summary><para>Duration/Quantity</para>
	/// <para>msdyn_duration</para></summary>
	public const string msdyn_duration = "msdyn_duration";
	/// <summary><para>Duration/Quantity To Bill</para>
	/// <para>msdyn_durationtobill</para></summary>
	public const string msdyn_durationtobill = "msdyn_durationtobill";
	/// <summary><para>Estimate Calculated Unit Amount</para>
	/// <para>msdyn_estimatecalculatedunitamount</para></summary>
	public const string msdyn_estimatecalculatedunitamount = "msdyn_estimatecalculatedunitamount";
	/// <summary><para>Estimate Calculated Unit Amount (Base)</para>
	/// <para>msdyn_estimatecalculatedunitamount_base</para></summary>
	public const string msdyn_estimatecalculatedunitamount_base = "msdyn_estimatecalculatedunitamount_base";
	/// <summary><para>Estimate Discount %</para>
	/// <para>msdyn_estimatediscountpercent</para></summary>
	public const string msdyn_estimatediscountpercent = "msdyn_estimatediscountpercent";
	/// <summary><para>Estimate Discount Amount</para>
	/// <para>msdyn_estimatediscountamount</para></summary>
	public const string msdyn_estimatediscountamount = "msdyn_estimatediscountamount";
	/// <summary><para>Estimate Discount Amount (Base)</para>
	/// <para>msdyn_estimatediscountamount_base</para></summary>
	public const string msdyn_estimatediscountamount_base = "msdyn_estimatediscountamount_base";
	/// <summary><para>Estimate Duration</para>
	/// <para>msdyn_estimateduration</para></summary>
	public const string msdyn_estimateduration = "msdyn_estimateduration";
	/// <summary><para>Estimate Subtotal</para>
	/// <para>msdyn_estimatesubtotal</para></summary>
	public const string msdyn_estimatesubtotal = "msdyn_estimatesubtotal";
	/// <summary><para>Estimate Subtotal (Base)</para>
	/// <para>msdyn_estimatesubtotal_base</para></summary>
	public const string msdyn_estimatesubtotal_base = "msdyn_estimatesubtotal_base";
	/// <summary><para>Estimate Total Amount</para>
	/// <para>msdyn_estimatetotalamount</para></summary>
	public const string msdyn_estimatetotalamount = "msdyn_estimatetotalamount";
	/// <summary><para>Estimate Total Amount (Base)</para>
	/// <para>msdyn_estimatetotalamount_base</para></summary>
	public const string msdyn_estimatetotalamount_base = "msdyn_estimatetotalamount_base";
	/// <summary><para>Estimate Total Cost</para>
	/// <para>msdyn_estimatetotalcost</para></summary>
	public const string msdyn_estimatetotalcost = "msdyn_estimatetotalcost";
	/// <summary><para>Estimate Total Cost (Base)</para>
	/// <para>msdyn_estimatetotalcost_base</para></summary>
	public const string msdyn_estimatetotalcost_base = "msdyn_estimatetotalcost_base";
	/// <summary><para>Estimate Unit Amount</para>
	/// <para>msdyn_estimateunitamount</para></summary>
	public const string msdyn_estimateunitamount = "msdyn_estimateunitamount";
	/// <summary><para>Estimate Unit Amount (Base)</para>
	/// <para>msdyn_estimateunitamount_base</para></summary>
	public const string msdyn_estimateunitamount_base = "msdyn_estimateunitamount_base";
	/// <summary><para>Estimate Unit Cost</para>
	/// <para>msdyn_estimateunitcost</para></summary>
	public const string msdyn_estimateunitcost = "msdyn_estimateunitcost";
	/// <summary><para>Estimate Unit Cost (Base)</para>
	/// <para>msdyn_estimateunitcost_base</para></summary>
	public const string msdyn_estimateunitcost_base = "msdyn_estimateunitcost_base";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string exchangerate = "exchangerate";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string importsequencenumber = "importsequencenumber";
	/// <summary><para>Internal Description</para>
	/// <para>msdyn_internaldescription</para></summary>
	public const string msdyn_internaldescription = "msdyn_internaldescription";
	/// <summary><para>Internal Flags</para>
	/// <para>msdyn_internalflags</para></summary>
	public const string msdyn_internalflags = "msdyn_internalflags";
	/// <summary><para>Line Order</para>
	/// <para>msdyn_lineorder</para></summary>
	public const string msdyn_lineorder = "msdyn_lineorder";
	/// <summary><para>Line Status</para>
	/// <para>msdyn_linestatus</para></summary>
	public const string msdyn_linestatus = "msdyn_linestatus";
	/// <summary><para>Minimum Charge Amount</para>
	/// <para>msdyn_minimumchargeamount</para></summary>
	public const string msdyn_minimumchargeamount = "msdyn_minimumchargeamount";
	/// <summary><para>Minimum Charge Amount (Base)</para>
	/// <para>msdyn_minimumchargeamount_base</para></summary>
	public const string msdyn_minimumchargeamount_base = "msdyn_minimumchargeamount_base";
	/// <summary><para>Minimum Charge Duration</para>
	/// <para>msdyn_minimumchargeduration</para></summary>
	public const string msdyn_minimumchargeduration = "msdyn_minimumchargeduration";
	/// <summary><para>Minimum Charge Time of Day</para>
	/// <para>utc_minimumchargetimeofday</para></summary>
	public const string utc_minimumchargetimeofday = "utc_minimumchargetimeofday";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string modifiedby = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string modifiedonbehalfby = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string modifiedon = "modifiedon";
	/// <summary><para>Name</para>
	/// <para>msdyn_name</para></summary>
	public const string msdyn_name = "msdyn_name";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string ownerid = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string owningbusinessunit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string owningteam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string owninguser = "owninguser";
	/// <summary><para>Price List</para>
	/// <para>msdyn_pricelist</para></summary>
	public const string msdyn_pricelist = "msdyn_pricelist";
	/// <summary><para>Printable</para>
	/// <para>utc_printable</para></summary>
	public const string utc_printable = "utc_printable";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string overriddencreatedon = "overriddencreatedon";
	/// <summary><para>Resource Schedule</para>
	/// <para>msdyn_booking</para></summary>
	public const string msdyn_booking = "msdyn_booking";
	/// <summary><para>Service</para>
	/// <para>msdyn_service</para></summary>
	public const string msdyn_service = "msdyn_service";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string statecode = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string statuscode = "statuscode";
	/// <summary><para>Subtotal</para>
	/// <para>msdyn_subtotal</para></summary>
	public const string msdyn_subtotal = "msdyn_subtotal";
	/// <summary><para>Subtotal (Base)</para>
	/// <para>msdyn_subtotal_base</para></summary>
	public const string msdyn_subtotal_base = "msdyn_subtotal_base";
	/// <summary><para>Taxable</para>
	/// <para>msdyn_taxable</para></summary>
	public const string msdyn_taxable = "msdyn_taxable";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string timezoneruleversionnumber = "timezoneruleversionnumber";
	/// <summary><para>Total Amount</para>
	/// <para>msdyn_totalamount</para></summary>
	public const string msdyn_totalamount = "msdyn_totalamount";
	/// <summary><para>Total Amount (Base)</para>
	/// <para>msdyn_totalamount_base</para></summary>
	public const string msdyn_totalamount_base = "msdyn_totalamount_base";
	/// <summary><para>Total Cost</para>
	/// <para>msdyn_totalcost</para></summary>
	public const string msdyn_totalcost = "msdyn_totalcost";
	/// <summary><para>Total Cost (Base)</para>
	/// <para>msdyn_totalcost_base</para></summary>
	public const string msdyn_totalcost_base = "msdyn_totalcost_base";
	/// <summary><para>Travel Chargeable</para>
	/// <para>utc_travelchargeable</para></summary>
	public const string utc_travelchargeable = "utc_travelchargeable";
	/// <summary><para>Travel Duration Charged</para>
	/// <para>utc_traveldurationcharged</para></summary>
	public const string utc_traveldurationcharged = "utc_traveldurationcharged";
	/// <summary><para>Unit</para>
	/// <para>msdyn_unit</para></summary>
	public const string msdyn_unit = "msdyn_unit";
	/// <summary><para>Unit Amount</para>
	/// <para>msdyn_unitamount</para></summary>
	public const string msdyn_unitamount = "msdyn_unitamount";
	/// <summary><para>Unit Amount (Base)</para>
	/// <para>msdyn_unitamount_base</para></summary>
	public const string msdyn_unitamount_base = "msdyn_unitamount_base";
	/// <summary><para>Unit Cost</para>
	/// <para>msdyn_unitcost</para></summary>
	public const string msdyn_unitcost = "msdyn_unitcost";
	/// <summary><para>Unit Cost (Base)</para>
	/// <para>msdyn_unitcost_base</para></summary>
	public const string msdyn_unitcost_base = "msdyn_unitcost_base";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string utcconversiontimezonecode = "utcconversiontimezonecode";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string versionnumber = "versionnumber";
	/// <summary><para>Work Order</para>
	/// <para>msdyn_workorder</para></summary>
	public const string msdyn_workorder = "msdyn_workorder";
	/// <summary><para>Work Order Incident</para>
	/// <para>msdyn_workorderincident</para></summary>
	public const string msdyn_workorderincident = "msdyn_workorderincident";
	/// <summary><para>Work Order Service</para>
	/// <para>msdyn_workorderserviceid</para></summary>
	public const string msdyn_workorderserviceid = "msdyn_workorderserviceid";
	/// <summary><para>Work Order Type Service</para>
	/// <para>utc_workordertypeservice</para></summary>
	public const string utc_workordertypeservice = "utc_workordertypeservice";
}

    }
}
