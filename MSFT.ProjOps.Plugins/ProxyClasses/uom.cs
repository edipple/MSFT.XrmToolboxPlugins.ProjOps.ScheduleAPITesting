// <auto-generated />

using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace MSCPS.FieldSericeMigration.Plugins.ProxyClasses
{
    [EntityLogicalNameAttribute("uom")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    [DataContract(Name = "Entity", Namespace = "http://schemas.microsoft.com/xrm/2011/Contracts")]
    public partial class uom : BaseProxyClass
    {
        public new const string LogicalName = "uom";
        public const int ObjectTypeCode = 1055;
        public const string PrimaryIdAttribute = "uomid";
        public const string PrimaryNameAttribute = "name";
        
        static uom()
        {
            BaseProxyClass.RegisterProxyType(typeof(uom), "uom");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public uom() : base(new Entity("uom")) { }
        public uom(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<uom>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string createdonbehalfbyyominame
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: baseuomname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("baseuomname")]
public string baseuomname
{
	get { return this.GetPropertyValue<string>("baseuomname"); }
}
///<summary>
///<para>Logical Name: modifiedbyexternalpartyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyexternalpartyname")]
public string modifiedbyexternalpartyname
{
	get { return this.GetPropertyValue<string>("modifiedbyexternalpartyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string modifiedonbehalfbyyominame
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string createdbyyominame
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string modifiedbyyominame
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string modifiedbyname
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: createdbyexternalpartyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyexternalpartyname")]
public string createdbyexternalpartyname
{
	get { return this.GetPropertyValue<string>("createdbyexternalpartyname"); }
}
///<summary>
///<para>Logical Name: createdbyexternalpartyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyexternalpartyyominame")]
public string createdbyexternalpartyyominame
{
	get { return this.GetPropertyValue<string>("createdbyexternalpartyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyexternalpartyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyexternalpartyyominame")]
public string modifiedbyexternalpartyyominame
{
	get { return this.GetPropertyValue<string>("modifiedbyexternalpartyyominame"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string createdbyname
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string createdonbehalfbyname
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string modifiedonbehalfbyname
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: baseuom</para>
///</summary>
[AttributeLogicalNameAttribute("baseuom")]
public EntityReference baseuom
{
	get { return this.GetPropertyValue<EntityReference>("baseuom"); }
	set { this.SetPropertyValue<EntityReference>("baseuom", value, "baseuom"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference createdby
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference createdonbehalfby
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdbyexternalparty</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyexternalparty")]
public EntityReference createdbyexternalparty
{
	get { return this.GetPropertyValue<EntityReference>("createdbyexternalparty"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? createdon
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? importsequencenumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "importsequencenumber"); }
}
///<summary>
///<para>Logical Name: isschedulebaseuom</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isschedulebaseuom")]
public bool? isschedulebaseuom
{
	get { return this.GetPropertyValue<bool?>("isschedulebaseuom"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference modifiedby
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference modifiedonbehalfby
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedbyexternalparty</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyexternalparty")]
public EntityReference modifiedbyexternalparty
{
	get { return this.GetPropertyValue<EntityReference>("modifiedbyexternalparty"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? modifiedon
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: name</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("name")]
public string name
{
	get { return this.GetPropertyValue<string>("name"); }
	set { this.SetPropertyValue("name", value, 100, "name"); }
}
///<summary>
///<para>Logical Name: organizationid</para>
///</summary>
[AttributeLogicalNameAttribute("organizationid")]
public Guid organizationid
{
	get { return this.GetPropertyValue<Guid>("organizationid"); }
}
///<summary>
///<para>Logical Name: quantity</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 10000000000</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("quantity")]
public decimal? quantity
{
	get { return this.GetPropertyValue<decimal?>("quantity"); }
	set { this.SetPropertyValue("quantity", (decimal?)value, (decimal)0, (decimal)10000000000, "quantity"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? overriddencreatedon
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "overriddencreatedon"); }
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? timezoneruleversionnumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "timezoneruleversionnumber"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: uomid</para>
///</summary>
[AttributeLogicalNameAttribute("uomid")]
public Guid uomid
{
	get
	{
		return base.Id;
	}
	set
	{
		base.Id = value;
		base.SetPropertyValue("uomid", value, "uomid");
	}
}
///<summary>
///<para>Logical Name: uomscheduleid</para>
///</summary>
[AttributeLogicalNameAttribute("uomscheduleid")]
public EntityReference uomscheduleid
{
	get { return this.GetPropertyValue<EntityReference>("uomscheduleid"); }
	set { this.SetPropertyValue<EntityReference>("uomscheduleid", value, "uomscheduleid"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? utcconversiontimezonecode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "utcconversiontimezonecode"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? versionnumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}


        /// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: UoM_AsyncOperations</para>
/// </summary>
public List<Entity> UoM_AsyncOperations (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: UoM_AsyncOperations</para>
/// </summary>
public List<Entity> UoM_AsyncOperations (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: UoM_BulkDeleteFailures</para>
/// </summary>
public List<Entity> UoM_BulkDeleteFailures (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: UoM_BulkDeleteFailures</para>
/// </summary>
public List<Entity> UoM_BulkDeleteFailures (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: unit_of_measurement_contract_line_items</para>
/// </summary>
public List<Entity> unit_of_measurement_contract_line_items (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "contractdetail", "uomid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: unit_of_measurement_contract_line_items</para>
/// </summary>
public List<Entity> unit_of_measurement_contract_line_items (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "contractdetail", "uomid", Columns); }
/// <summary>
/// <para><b>invoicedetail (Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_invoice_details</para>
/// </summary>
public List<invoicedetail> unit_of_measurement_invoice_details (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<invoicedetail>(Service, this.Id, "invoicedetail", "uomid", Columns); }
/// <summary>
/// <para><b>invoicedetail (Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_invoice_details</para>
/// </summary>
public List<invoicedetail> unit_of_measurement_invoice_details (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<invoicedetail>(Service, this.Id, "invoicedetail", "uomid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: uom_MailboxTrackingFolders</para>
/// </summary>
public List<Entity> uom_MailboxTrackingFolders (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: uom_MailboxTrackingFolders</para>
/// </summary>
public List<Entity> uom_MailboxTrackingFolders (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_actual_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_actual_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_actual", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_actual_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_actual_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_actual", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_agreementbookingproduct_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_agreementbookingproduct_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_agreementbookingproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_agreementbookingproduct_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_agreementbookingproduct_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_agreementbookingproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_agreementbookingservice_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_agreementbookingservice_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_agreementbookingservice", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_agreementbookingservice_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_agreementbookingservice_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_agreementbookingservice", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>msdyn_agreementinvoiceproduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_agreementinvoiceproduct_Unit</para>
/// </summary>
public List<msdyn_agreementinvoiceproduct> msdyn_uom_msdyn_agreementinvoiceproduct_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<msdyn_agreementinvoiceproduct>(Service, this.Id, "msdyn_agreementinvoiceproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>msdyn_agreementinvoiceproduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_agreementinvoiceproduct_Unit</para>
/// </summary>
public List<msdyn_agreementinvoiceproduct> msdyn_uom_msdyn_agreementinvoiceproduct_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<msdyn_agreementinvoiceproduct>(Service, this.Id, "msdyn_agreementinvoiceproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_incidenttypeproduct_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_incidenttypeproduct_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_incidenttypeproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_incidenttypeproduct_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_incidenttypeproduct_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_incidenttypeproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_incidenttypeservice_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_incidenttypeservice_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_incidenttypeservice", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_incidenttypeservice_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_incidenttypeservice_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_incidenttypeservice", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_inventoryadjustmentproduct_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_inventoryadjustmentproduct_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_inventoryadjustmentproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_inventoryadjustmentproduct_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_inventoryadjustmentproduct_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_inventoryadjustmentproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_inventoryjournal_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_inventoryjournal_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_inventoryjournal", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_inventoryjournal_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_inventoryjournal_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_inventoryjournal", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_orderinvoicingproduct_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_orderinvoicingproduct_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_orderinvoicingproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_orderinvoicingproduct_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_orderinvoicingproduct_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_orderinvoicingproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_productinventory_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_productinventory_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_productinventory", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_productinventory_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_productinventory_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_productinventory", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_purchaseorderproduct_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_purchaseorderproduct_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_purchaseorderproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_purchaseorderproduct_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_purchaseorderproduct_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_purchaseorderproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_quotebookingproduct_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_quotebookingproduct_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_quotebookingproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_quotebookingproduct_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_quotebookingproduct_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_quotebookingproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_quotebookingservice_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_quotebookingservice_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_quotebookingservice", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_quotebookingservice_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_quotebookingservice_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_quotebookingservice", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_quoteinvoicingproduct_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_quoteinvoicingproduct_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_quoteinvoicingproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_quoteinvoicingproduct_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_quoteinvoicingproduct_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_quoteinvoicingproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_rmaproduct_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_rmaproduct_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_rmaproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_rmaproduct_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_rmaproduct_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_rmaproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_rtvproduct_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_rtvproduct_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_rtvproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_rtvproduct_Unit</para>
/// </summary>
public List<Entity> msdyn_uom_msdyn_rtvproduct_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_rtvproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>msdyn_workorderproduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_workorderproduct_Unit</para>
/// </summary>
public List<msdyn_workorderproduct> msdyn_uom_msdyn_workorderproduct_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<msdyn_workorderproduct>(Service, this.Id, "msdyn_workorderproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>msdyn_workorderproduct (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_workorderproduct_Unit</para>
/// </summary>
public List<msdyn_workorderproduct> msdyn_uom_msdyn_workorderproduct_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<msdyn_workorderproduct>(Service, this.Id, "msdyn_workorderproduct", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>msdyn_workorderservice (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_workorderservice_Unit</para>
/// </summary>
public List<msdyn_workorderservice> msdyn_uom_msdyn_workorderservice_Unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<msdyn_workorderservice>(Service, this.Id, "msdyn_workorderservice", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>msdyn_workorderservice (Unit)</b></para>
/// <para>Schema Name: msdyn_uom_msdyn_workorderservice_Unit</para>
/// </summary>
public List<msdyn_workorderservice> msdyn_uom_msdyn_workorderservice_Unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<msdyn_workorderservice>(Service, this.Id, "msdyn_workorderservice", "msdyn_unit", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: unit_of_measurement_opportunity_products</para>
/// </summary>
public List<Entity> unit_of_measurement_opportunity_products (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunityproduct", "uomid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: unit_of_measurement_opportunity_products</para>
/// </summary>
public List<Entity> unit_of_measurement_opportunity_products (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunityproduct", "uomid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: uom_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<Entity> uom_PrincipalObjectAttributeAccesses (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: uom_PrincipalObjectAttributeAccesses</para>
/// </summary>
public List<Entity> uom_PrincipalObjectAttributeAccesses (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>product (Default Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_products</para>
/// </summary>
public List<product> unit_of_measurement_products (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<product>(Service, this.Id, "product", "defaultuomid", Columns); }
/// <summary>
/// <para><b>product (Default Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_products</para>
/// </summary>
public List<product> unit_of_measurement_products (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<product>(Service, this.Id, "product", "defaultuomid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: unit_of_measurement_productassociation</para>
/// </summary>
public List<Entity> unit_of_measurement_productassociation (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "productassociation", "uomid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: unit_of_measurement_productassociation</para>
/// </summary>
public List<Entity> unit_of_measurement_productassociation (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "productassociation", "uomid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: unit_of_measurement_product_price_levels</para>
/// </summary>
public List<Entity> unit_of_measurement_product_price_levels (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "productpricelevel", "uomid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: unit_of_measurement_product_price_levels</para>
/// </summary>
public List<Entity> unit_of_measurement_product_price_levels (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "productpricelevel", "uomid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: unit_of_measurement_quote_details</para>
/// </summary>
public List<Entity> unit_of_measurement_quote_details (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "quotedetail", "uomid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: unit_of_measurement_quote_details</para>
/// </summary>
public List<Entity> unit_of_measurement_quote_details (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "quotedetail", "uomid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: unit_of_measurement_order_details</para>
/// </summary>
public List<Entity> unit_of_measurement_order_details (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "salesorderdetail", "uomid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: unit_of_measurement_order_details</para>
/// </summary>
public List<Entity> unit_of_measurement_order_details (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "salesorderdetail", "uomid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: UoM_SyncErrors</para>
/// </summary>
public List<Entity> UoM_SyncErrors (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: UoM_SyncErrors</para>
/// </summary>
public List<Entity> UoM_SyncErrors (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>uom (Base Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_base_unit</para>
/// </summary>
public List<uom> unit_of_measurement_base_unit (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<uom>(Service, this.Id, "uom", "baseuom", Columns); }
/// <summary>
/// <para><b>uom (Base Unit)</b></para>
/// <para>Schema Name: unit_of_measurement_base_unit</para>
/// </summary>
public List<uom> unit_of_measurement_base_unit (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<uom>(Service, this.Id, "uom", "baseuom", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: userentityinstancedata_uom</para>
/// </summary>
public List<Entity> userentityinstancedata_uom (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: userentityinstancedata_uom</para>
/// </summary>
public List<Entity> userentityinstancedata_uom (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        

        

        

        public static class Properties
{
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string createdonbehalfbyyominame = "createdonbehalfbyyominame";
	/// <summary><para>baseuomname</para>
	/// <para>baseuomname</para></summary>
	public const string baseuomname = "baseuomname";
	/// <summary><para>modifiedbyexternalpartyname</para>
	/// <para>modifiedbyexternalpartyname</para></summary>
	public const string modifiedbyexternalpartyname = "modifiedbyexternalpartyname";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string modifiedonbehalfbyyominame = "modifiedonbehalfbyyominame";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string createdbyyominame = "createdbyyominame";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string modifiedbyyominame = "modifiedbyyominame";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string modifiedbyname = "modifiedbyname";
	/// <summary><para>createdbyexternalpartyname</para>
	/// <para>createdbyexternalpartyname</para></summary>
	public const string createdbyexternalpartyname = "createdbyexternalpartyname";
	/// <summary><para>createdbyexternalpartyyominame</para>
	/// <para>createdbyexternalpartyyominame</para></summary>
	public const string createdbyexternalpartyyominame = "createdbyexternalpartyyominame";
	/// <summary><para>modifiedbyexternalpartyyominame</para>
	/// <para>modifiedbyexternalpartyyominame</para></summary>
	public const string modifiedbyexternalpartyyominame = "modifiedbyexternalpartyyominame";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string createdbyname = "createdbyname";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string createdonbehalfbyname = "createdonbehalfbyname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string modifiedonbehalfbyname = "modifiedonbehalfbyname";
	/// <summary><para>Base Unit</para>
	/// <para>baseuom</para></summary>
	public const string baseuom = "baseuom";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string createdby = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string createdonbehalfby = "createdonbehalfby";
	/// <summary><para>Created By (External Party)</para>
	/// <para>createdbyexternalparty</para></summary>
	public const string createdbyexternalparty = "createdbyexternalparty";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string createdon = "createdon";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string importsequencenumber = "importsequencenumber";
	/// <summary><para>Is Schedule Base Unit</para>
	/// <para>isschedulebaseuom</para></summary>
	public const string isschedulebaseuom = "isschedulebaseuom";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string modifiedby = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string modifiedonbehalfby = "modifiedonbehalfby";
	/// <summary><para>Modified By (External Party)</para>
	/// <para>modifiedbyexternalparty</para></summary>
	public const string modifiedbyexternalparty = "modifiedbyexternalparty";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string modifiedon = "modifiedon";
	/// <summary><para>Name</para>
	/// <para>name</para></summary>
	public const string name = "name";
	/// <summary><para>Organization </para>
	/// <para>organizationid</para></summary>
	public const string organizationid = "organizationid";
	/// <summary><para>Quantity</para>
	/// <para>quantity</para></summary>
	public const string quantity = "quantity";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string overriddencreatedon = "overriddencreatedon";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string timezoneruleversionnumber = "timezoneruleversionnumber";
	/// <summary><para>Unit</para>
	/// <para>uomid</para></summary>
	public const string uomid = "uomid";
	/// <summary><para>Unit Schedule</para>
	/// <para>uomscheduleid</para></summary>
	public const string uomscheduleid = "uomscheduleid";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string utcconversiontimezonecode = "utcconversiontimezonecode";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string versionnumber = "versionnumber";
}

    }
}
